apiVersion: kit/v1
kind: Tasks
metadata:
  name: argo-cd
spec:
  tasks:
    - name: create-ns
      command: sh -c "kubectl create ns argocd --dry-run=client -oyaml|kubectl apply -f -"
    - name: kubens
      command: kubectl config set-context --current --namespace argocd
      dependencies: create-ns
    - name: install
      command: kubectl apply -k test/manifests/base
      dependencies: kubens
    - name: redis
      ports: 6379
      image: redis:7.0.7-alpine
    - name: go-deps
      command: go mod download
      mutex: downloads
    - name: go-build
      command: go build -v -o /tmp/argo-cd ./cmd
      dependencies: go-deps
    - name: repo-server
      command: go run ./cmd  --loglevel debug --port 8081 --redis localhost:6379
      env:
        - FORCE_LOG_COLORS=1
        - ARGOCD_FAKE_IN_CLUSTER=true
        - ARGOCD_GNUPGHOME=/tmp/argocd-local/gpg/keys
        - ARGOCD_PLUGINSOCKFILEPATH=./test/cmp
        - ARGOCD_GPG_DATA_PATH=/tmp/argocd-local/gpg/source
        - ARGOCD_TLS_DATA_PATH=$/tmp/argocd-local/tls
        - ARGOCD_SSH_DATA_PATH=/tmp/argocd-local/ssh
        - ARGOCD_BINARY_NAME=argocd-repo-server
        - ARGOCD_GPG_ENABLED=false
      dependencies: install go-deps
      ports: 8081 8081
      watch: cmd reposerver pkg util
    - name: controller
      command: go run ./cmd  --loglevel debug --redis localhost:6379 --repo-server localhost:8081
      env:
        - ARGOCD_BINARY_NAME=argocd-application-controller
        - FORCE_LOG_COLORS=1
        - ARGOCD_FAKE_IN_CLUSTER=true
        - ARGOCD_TLS_DATA_PATH=/tmp/argocd-local/tls
        - ARGOCD_SSH_DATA_PATH=/tmp/argocd-local/ssh
        - ARGOCD_BINARY_NAME=argocd-application-controller
      dependencies: install redis repo-server go-deps
      ports: 8082
      watch: cmd controller pkg util
    - name: api-server
      command: go run ./cmd --loglevel debug --redis localhost:6379 --disable-auth --insecure --dex-server http://localhost:5556 --repo-server localhost:8081 --port 8080
      env:
        - ARGOCD_BINARY_NAME=argocd-server
        - FORCE_LOG_COLORS=1
        - ARGOCD_FAKE_IN_CLUSTER=true
        - ARGOCD_TLS_DATA_PATH=/tmp/argocd-local/tls
        - ARGOCD_SSH_DATA_PATH=/tmp/argocd-local/ssh
      ports: 8080 8083
      dependencies: install redis go-deps
      watch: cmd server pkg util
    - name: ui-deps
      command: yarn install
      workingDir: ui
      mutex: downloads
    - name: ui
      command: yarn start
      workingDir: ui
      dependencies: ui-deps api-server
      ports: 4000
    - name: example
      command: kubectl apply -f examples/guestbook-app.yaml
      dependencies: controller
    - name: pre-up
      dependencies: go-build ui-deps install
    - name: up
      dependencies: controller api-server ui example