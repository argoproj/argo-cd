// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server/session/session.proto

/*
Package session is a generated protocol buffer package.

Session Service

Session Service API performs CRUD actions against session resources

It is generated from these files:
	server/session/session.proto

It has these top-level messages:
	SessionCreateRequest
	SessionDeleteRequest
	SessionResponse
*/
package session

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import _ "k8s.io/api/core/v1"
import _ "github.com/argoproj/argo-cd/pkg/apis/application/v1alpha1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// SessionCreateRequest is for logging in.
type SessionCreateRequest struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *SessionCreateRequest) Reset()                    { *m = SessionCreateRequest{} }
func (m *SessionCreateRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionCreateRequest) ProtoMessage()               {}
func (*SessionCreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SessionCreateRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SessionCreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// SessionDeleteRequest is for logging out.
type SessionDeleteRequest struct {
}

func (m *SessionDeleteRequest) Reset()                    { *m = SessionDeleteRequest{} }
func (m *SessionDeleteRequest) String() string            { return proto.CompactTextString(m) }
func (*SessionDeleteRequest) ProtoMessage()               {}
func (*SessionDeleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// SessionResponse returns nothing.
type SessionResponse struct {
}

func (m *SessionResponse) Reset()                    { *m = SessionResponse{} }
func (m *SessionResponse) String() string            { return proto.CompactTextString(m) }
func (*SessionResponse) ProtoMessage()               {}
func (*SessionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*SessionCreateRequest)(nil), "session.SessionCreateRequest")
	proto.RegisterType((*SessionDeleteRequest)(nil), "session.SessionDeleteRequest")
	proto.RegisterType((*SessionResponse)(nil), "session.SessionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SessionService service

type SessionServiceClient interface {
	// Create a new JWT for authentication.
	Create(ctx context.Context, in *SessionCreateRequest, opts ...grpc.CallOption) (*SessionResponse, error)
	// Create a new JWT for authentication.
	Delete(ctx context.Context, in *SessionDeleteRequest, opts ...grpc.CallOption) (*SessionResponse, error)
}

type sessionServiceClient struct {
	cc *grpc.ClientConn
}

func NewSessionServiceClient(cc *grpc.ClientConn) SessionServiceClient {
	return &sessionServiceClient{cc}
}

func (c *sessionServiceClient) Create(ctx context.Context, in *SessionCreateRequest, opts ...grpc.CallOption) (*SessionResponse, error) {
	out := new(SessionResponse)
	err := grpc.Invoke(ctx, "/session.SessionService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionServiceClient) Delete(ctx context.Context, in *SessionDeleteRequest, opts ...grpc.CallOption) (*SessionResponse, error) {
	out := new(SessionResponse)
	err := grpc.Invoke(ctx, "/session.SessionService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SessionService service

type SessionServiceServer interface {
	// Create a new JWT for authentication.
	Create(context.Context, *SessionCreateRequest) (*SessionResponse, error)
	// Create a new JWT for authentication.
	Delete(context.Context, *SessionDeleteRequest) (*SessionResponse, error)
}

func RegisterSessionServiceServer(s *grpc.Server, srv SessionServiceServer) {
	s.RegisterService(&_SessionService_serviceDesc, srv)
}

func _SessionService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.SessionService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Create(ctx, req.(*SessionCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SessionService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionDeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/session.SessionService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionServiceServer).Delete(ctx, req.(*SessionDeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SessionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "session.SessionService",
	HandlerType: (*SessionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _SessionService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _SessionService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server/session/session.proto",
}

func init() { proto.RegisterFile("server/session/session.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 325 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0x0e, 0x05, 0x3c, 0x80, 0x88, 0x2a, 0x28, 0x51, 0x11, 0xc8, 0x13, 0xaa, 0x20,
	0x56, 0x61, 0x41, 0x8c, 0xc0, 0xc2, 0xc2, 0xd0, 0x6e, 0x6c, 0x6e, 0x72, 0x72, 0x4d, 0x53, 0x9f,
	0xf1, 0xb9, 0x61, 0xe7, 0x15, 0x78, 0x34, 0x46, 0x56, 0x1e, 0x04, 0xd5, 0x49, 0x2a, 0x95, 0xa0,
	0x4e, 0xb9, 0xbb, 0x3f, 0xf9, 0xfe, 0x5f, 0x77, 0x61, 0x03, 0x02, 0x57, 0x82, 0x13, 0x04, 0x44,
	0x1a, 0x4d, 0xf3, 0x4c, 0xad, 0x43, 0x8f, 0xf1, 0x4e, 0xdd, 0x26, 0x3d, 0x85, 0x0a, 0xc3, 0x4c,
	0xac, 0xaa, 0x4a, 0x4e, 0x06, 0x0a, 0x51, 0x15, 0x20, 0xa4, 0xd5, 0x42, 0x1a, 0x83, 0x5e, 0x7a,
	0x8d, 0x86, 0x6a, 0x95, 0xcf, 0x6f, 0x29, 0xd5, 0x18, 0xd4, 0x0c, 0x1d, 0x88, 0x72, 0x24, 0x14,
	0x18, 0x70, 0xd2, 0x43, 0x5e, 0xbf, 0xf3, 0xa4, 0xb4, 0x9f, 0x2d, 0xa7, 0x69, 0x86, 0x0b, 0x21,
	0x5d, 0xb0, 0x78, 0x0d, 0xc5, 0x55, 0x96, 0x0b, 0x3b, 0x57, 0xab, 0x8f, 0x49, 0x48, 0x6b, 0x0b,
	0x9d, 0x05, 0xb8, 0x28, 0x47, 0xb2, 0xb0, 0x33, 0xd9, 0x42, 0xf1, 0x67, 0xd6, 0x9b, 0x54, 0x69,
	0x1f, 0x1c, 0x48, 0x0f, 0x63, 0x78, 0x5b, 0x02, 0xf9, 0x38, 0x61, 0xbb, 0x4b, 0x02, 0x67, 0xe4,
	0x02, 0xfa, 0xd1, 0x79, 0x74, 0xb1, 0x37, 0x5e, 0xf7, 0x2b, 0xcd, 0x4a, 0xa2, 0x77, 0x74, 0x79,
	0xbf, 0x53, 0x69, 0x4d, 0xcf, 0x8f, 0xd6, 0xbc, 0x47, 0x28, 0x60, 0xcd, 0xe3, 0x87, 0xec, 0xa0,
	0x9e, 0x8f, 0x81, 0x2c, 0x1a, 0x82, 0xeb, 0xef, 0x88, 0xed, 0xd7, 0xb3, 0x09, 0xb8, 0x52, 0x67,
	0x10, 0x03, 0xeb, 0x56, 0x31, 0xe2, 0xd3, 0xb4, 0xd9, 0xe9, 0x7f, 0xf1, 0x92, 0xfe, 0x5f, 0xb9,
	0xa1, 0x72, 0xfe, 0xf1, 0xf5, 0xf3, 0xd9, 0x19, 0xf0, 0xe3, 0xb0, 0xc1, 0x72, 0xd4, 0xdc, 0x86,
	0x44, 0x16, 0x08, 0x77, 0xd1, 0x30, 0x9e, 0xb2, 0x6e, 0x95, 0xae, 0x6d, 0xb3, 0x91, 0x7a, 0x8b,
	0xcd, 0x59, 0xb0, 0x39, 0x19, 0xb6, 0x6d, 0xf2, 0x40, 0xb8, 0xbf, 0x7c, 0x19, 0x6e, 0xbb, 0xd2,
	0xe6, 0x0f, 0x34, 0xed, 0x86, 0x6b, 0xdc, 0xfc, 0x06, 0x00, 0x00, 0xff, 0xff, 0x66, 0xa2, 0x28,
	0x7c, 0x59, 0x02, 0x00, 0x00,
}
