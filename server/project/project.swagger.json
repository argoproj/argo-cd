{
  "swagger": "2.0",
  "info": {
    "title": "Project Service",
    "description": "Project Service API performs CRUD actions against project resources",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/projects": {
      "get": {
        "summary": "List returns list of projects",
        "operationId": "ProjectService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProjectList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "post": {
        "summary": "Create a new project",
        "operationId": "ProjectService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProjectCreateRequest"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}": {
      "get": {
        "summary": "Get returns a project by name",
        "operationId": "ProjectService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "delete": {
        "summary": "Delete deletes a project",
        "operationId": "ProjectService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/detailed": {
      "get": {
        "summary": "GetDetailedProject returns a project that include project, global project and scoped resources by name",
        "operationId": "ProjectService_GetDetailedProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectDetailedProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/events": {
      "get": {
        "summary": "ListEvents returns a list of project events",
        "operationId": "ProjectService_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/globalprojects": {
      "get": {
        "summary": "Get returns a virtual project by name",
        "operationId": "ProjectService_GetGlobalProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectGlobalProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/syncwindows": {
      "get": {
        "summary": "GetSchedulesState returns true if there are any active sync syncWindows",
        "operationId": "ProjectService_GetSyncWindowsState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectSyncWindowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project.metadata.name}": {
      "put": {
        "summary": "Update updates a project",
        "operationId": "ProjectService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project.metadata.name",
            "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProjectUpdateRequest"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project}/roles/{role}/token": {
      "post": {
        "summary": "Create a new project token",
        "operationId": "ProjectService_CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProjectTokenCreateRequest"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project}/roles/{role}/token/{iat}": {
      "delete": {
        "summary": "Delete a new project token",
        "operationId": "ProjectService_DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iat",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    }
  },
  "definitions": {
    "projectDetailedProjectsResponse": {
      "type": "object",
      "properties": {
        "globalProjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        },
        "project": {
          "$ref": "#/definitions/v1alpha1AppProject"
        },
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          }
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Cluster"
          }
        }
      }
    },
    "projectEmptyResponse": {
      "type": "object"
    },
    "projectGlobalProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        }
      }
    },
    "projectProjectCreateRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1alpha1AppProject"
        },
        "upsert": {
          "type": "boolean"
        }
      },
      "description": "ProjectCreateRequest defines project creation parameters."
    },
    "projectProjectTokenCreateRequest": {
      "type": "object",
      "properties": {
        "project": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "expiresIn": {
          "type": "string",
          "format": "int64",
          "title": "expiresIn represents a duration in seconds"
        },
        "id": {
          "type": "string"
        }
      },
      "description": "ProjectTokenCreateRequest defines project token creation parameters."
    },
    "projectProjectTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "description": "ProjectTokenResponse wraps the created token or returns an empty string if deleted."
    },
    "projectProjectUpdateRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1alpha1AppProject"
        }
      }
    },
    "projectSyncWindowsResponse": {
      "type": "object",
      "properties": {
        "windows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncWindow"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "involvedObject": {
          "$ref": "#/definitions/v1ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "title": "This should be a short, machine understandable string that gives the reason\nfor the transition into the object's current status.\nTODO: provide exact specification for format.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human-readable description of the status of this operation.\nTODO: decide on maximum length.\n+optional"
        },
        "source": {
          "$ref": "#/definitions/v1EventSource",
          "title": "The component reporting this event. Should be a short machine understandable string.\n+optional"
        },
        "firstTimestamp": {
          "$ref": "#/definitions/v1Time",
          "title": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)\n+optional"
        },
        "lastTimestamp": {
          "$ref": "#/definitions/v1Time",
          "title": "The time at which the most recent occurrence of this event was recorded.\n+optional"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "The number of times this event has occurred.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type of this event (Normal, Warning), new types could be added in the future\n+optional"
        },
        "eventTime": {
          "$ref": "#/definitions/v1MicroTime",
          "title": "Time when this Event was first observed.\n+optional"
        },
        "series": {
          "$ref": "#/definitions/v1EventSeries",
          "title": "Data about the Event series this event represents or nil if it's a singleton Event.\n+optional"
        },
        "action": {
          "type": "string",
          "title": "What action was taken/failed regarding to the Regarding object.\n+optional"
        },
        "related": {
          "$ref": "#/definitions/v1ObjectReference",
          "title": "Optional secondary object for more complex actions.\n+optional"
        },
        "reportingComponent": {
          "type": "string",
          "title": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.\n+optional"
        },
        "reportingInstance": {
          "type": "string",
          "title": "ID of the controller instance, e.g. `kubelet-xyzf`.\n+optional"
        }
      },
      "description": "Event is a report of an event somewhere in the cluster.  Events\nhave a limited retention time and triggers and messages may evolve\nwith time.  Event consumers should not rely on the timing of an event\nwith a given Reason reflecting a consistent underlying trigger, or the\ncontinued existence of events with that Reason.  Events should be\ntreated as informative, best-effort, supplemental data."
    },
    "v1EventList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta",
          "title": "Standard list metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          },
          "title": "List of events"
        }
      },
      "description": "EventList is a list of events."
    },
    "v1EventSeries": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Number of occurrences in this series up to the last heartbeat time"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/v1MicroTime",
          "title": "Time of the last occurrence observed"
        }
      },
      "description": "EventSeries contain information on series of events, i.e. thing that was/is happening\ncontinuously for some time."
    },
    "v1EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "v1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      },
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1GroupKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types"
    },
    "v1ListMeta": {
      "type": "object",
      "properties": {
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage."
        },
        "remainingItemCount": {
          "type": "string",
          "format": "int64",
          "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
        }
      },
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}."
    },
    "v1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/v1Time",
          "title": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/v1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      },
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
    },
    "v1MicroTime": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "MicroTime is version of Time with microsecond level precision.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "clusterName": {
          "type": "string",
          "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
    },
    "v1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "title": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional"
        }
      },
      "title": "ObjectReference contains enough information to let you inspect or modify the referred object.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.\n 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+structType=atomic"
    },
    "v1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
    },
    "v1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1alpha1AWSAuthConfig": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "ClusterName contains AWS cluster name"
        },
        "roleARN": {
          "type": "string",
          "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain."
        }
      },
      "title": "AWSAuthConfig is an AWS IAM authentication configuration"
    },
    "v1alpha1AppProject": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1AppProjectSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1AppProjectStatus"
        }
      },
      "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs"
    },
    "v1alpha1AppProjectList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        }
      },
      "title": "AppProjectList is list of AppProject resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
    },
    "v1alpha1AppProjectSpec": {
      "type": "object",
      "properties": {
        "sourceRepos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SourceRepos contains list of repository URLs which can be used for deployment"
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationDestination"
          },
          "title": "Destinations contains list of destinations available for deployment"
        },
        "description": {
          "type": "string",
          "title": "Description contains optional project description"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ProjectRole"
          },
          "title": "Roles are user defined RBAC roles associated with this project"
        },
        "clusterResourceWhitelist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources"
        },
        "namespaceResourceBlacklist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources"
        },
        "orphanedResources": {
          "$ref": "#/definitions/v1alpha1OrphanedResourcesMonitorSettings",
          "title": "OrphanedResources specifies if controller should monitor orphaned resources of apps in this project"
        },
        "syncWindows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncWindow"
          },
          "title": "SyncWindows controls when syncs can be run for apps in this project"
        },
        "namespaceResourceWhitelist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources"
        },
        "signatureKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SignatureKey"
          },
          "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync"
        },
        "clusterResourceBlacklist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources"
        },
        "sourceNamespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SourceNamespaces defines the namespaces application resources are allowed to be created in"
        },
        "permitOnlyProjectScopedClusters": {
          "type": "boolean",
          "title": "PermitOnlyProjectScopedClusters determines whether destinations can only reference clusters which are project-scoped"
        }
      },
      "title": "AppProjectSpec is the specification of an AppProject"
    },
    "v1alpha1AppProjectStatus": {
      "type": "object",
      "properties": {
        "jwtTokensByRole": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1JWTTokens"
          },
          "title": "JWTTokensByRole contains a list of JWT tokens issued for a given role"
        }
      },
      "title": "AppProjectStatus contains status information for AppProject CRs"
    },
    "v1alpha1ApplicationDestination": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
        },
        "name": {
          "type": "string",
          "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
        }
      },
      "title": "ApplicationDestination holds information about the application's destination"
    },
    "v1alpha1Cluster": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server is the API server URL of the Kubernetes cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster. If omitted, will use the server address"
        },
        "config": {
          "$ref": "#/definitions/v1alpha1ClusterConfig",
          "title": "Config holds cluster information for connecting to a cluster"
        },
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "DEPRECATED: use Info.ConnectionState field instead.\nConnectionState contains information about cluster connection state"
        },
        "serverVersion": {
          "type": "string",
          "title": "DEPRECATED: use Info.ServerVersion field instead.\nThe server version"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Holds list of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty."
        },
        "refreshRequestedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "RefreshRequestedAt holds time when cluster cache refresh has been requested"
        },
        "info": {
          "$ref": "#/definitions/v1alpha1ClusterInfo",
          "title": "Info holds information about cluster cache and state"
        },
        "shard": {
          "type": "string",
          "format": "int64",
          "description": "Shard contains optional shard number. Calculated on the fly by the application controller if not specified."
        },
        "clusterResources": {
          "type": "boolean",
          "description": "Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode."
        },
        "project": {
          "type": "string",
          "title": "Reference between project and cluster that allow you automatically to be added as item inside Destinations project entity"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels for cluster secret metadata"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations for cluster secret metadata"
        }
      },
      "title": "Cluster is the definition of a cluster resource"
    },
    "v1alpha1ClusterCacheInfo": {
      "type": "object",
      "properties": {
        "resourcesCount": {
          "type": "string",
          "format": "int64",
          "title": "ResourcesCount holds number of observed Kubernetes resources"
        },
        "apisCount": {
          "type": "string",
          "format": "int64",
          "title": "APIsCount holds number of observed Kubernetes API count"
        },
        "lastCacheSyncTime": {
          "$ref": "#/definitions/v1Time",
          "title": "LastCacheSyncTime holds time of most recent cache synchronization"
        }
      },
      "title": "ClusterCacheInfo contains information about the cluster cache"
    },
    "v1alpha1ClusterConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Server requires Basic authentication"
        },
        "password": {
          "type": "string"
        },
        "bearerToken": {
          "type": "string",
          "description": "Server requires Bearer authentication. This client will not attempt to use\nrefresh tokens for an OAuth2 flow.\nTODO: demonstrate an OAuth2 compatible client."
        },
        "tlsClientConfig": {
          "$ref": "#/definitions/v1alpha1TLSClientConfig",
          "title": "TLSClientConfig contains settings to enable transport layer security"
        },
        "awsAuthConfig": {
          "$ref": "#/definitions/v1alpha1AWSAuthConfig",
          "title": "AWSAuthConfig contains IAM authentication configuration"
        },
        "execProviderConfig": {
          "$ref": "#/definitions/v1alpha1ExecProviderConfig",
          "title": "ExecProviderConfig contains configuration for an exec provider"
        }
      },
      "description": "ClusterConfig is the configuration attributes. This structure is subset of the go-client\nrest.Config with annotations added for marshalling."
    },
    "v1alpha1ClusterInfo": {
      "type": "object",
      "properties": {
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "ConnectionState contains information about the connection to the cluster"
        },
        "serverVersion": {
          "type": "string",
          "title": "ServerVersion contains information about the Kubernetes version of the cluster"
        },
        "cacheInfo": {
          "$ref": "#/definitions/v1alpha1ClusterCacheInfo",
          "title": "CacheInfo contains information about the cluster cache"
        },
        "applicationsCount": {
          "type": "string",
          "format": "int64",
          "title": "ApplicationsCount is the number of applications managed by Argo CD on the cluster"
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "APIVersions contains list of API versions supported by the cluster"
        }
      },
      "title": "ClusterInfo contains information about the cluster"
    },
    "v1alpha1ConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status contains the current status indicator for the connection"
        },
        "message": {
          "type": "string",
          "title": "Message contains human readable information about the connection status"
        },
        "attemptedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ModifiedAt contains the timestamp when this connection status has been determined"
        }
      },
      "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories"
    },
    "v1alpha1ExecProviderConfig": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "title": "Command to execute"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to pass to the command when executing it"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Env defines additional environment variables to expose to the process"
        },
        "apiVersion": {
          "type": "string",
          "title": "Preferred input version of the ExecInfo"
        },
        "installHint": {
          "type": "string",
          "title": "This text is shown to the user when the executable doesn't seem to be present"
        }
      },
      "title": "ExecProviderConfig is config used to call an external command to perform cluster authentication\nSee: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig"
    },
    "v1alpha1JWTToken": {
      "type": "object",
      "properties": {
        "iat": {
          "type": "string",
          "format": "int64"
        },
        "exp": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "JWTToken holds the issuedAt and expiresAt values of a token"
    },
    "v1alpha1JWTTokens": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JWTToken"
          }
        }
      },
      "title": "JWTTokens represents a list of JWT tokens"
    },
    "v1alpha1OrphanedResourceKey": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "OrphanedResourceKey is a reference to a resource to be ignored from"
    },
    "v1alpha1OrphanedResourcesMonitorSettings": {
      "type": "object",
      "properties": {
        "warn": {
          "type": "boolean",
          "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
        },
        "ignore": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1OrphanedResourceKey"
          },
          "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring"
        }
      },
      "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring"
    },
    "v1alpha1ProjectRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is a name for this role"
        },
        "description": {
          "type": "string",
          "title": "Description is a description of the role"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project"
        },
        "jwtTokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JWTToken"
          },
          "title": "JWTTokens are a list of generated JWT tokens bound to this role"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Groups are a list of OIDC group claims bound to this role"
        }
      },
      "title": "ProjectRole represents a role that has access to a project"
    },
    "v1alpha1Repository": {
      "type": "object",
      "properties": {
        "repo": {
          "type": "string",
          "title": "Repo contains the URL to the remote repository"
        },
        "username": {
          "type": "string",
          "title": "Username contains the user name used for authenticating at the remote repository"
        },
        "password": {
          "type": "string",
          "title": "Password contains the password or PAT used for authenticating at the remote repository"
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos."
        },
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "ConnectionState contains information about the current state of connection to the repository server"
        },
        "insecureIgnoreHostKey": {
          "type": "boolean",
          "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
        },
        "insecure": {
          "type": "boolean",
          "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
        },
        "enableLfs": {
          "type": "boolean",
          "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories."
        },
        "tlsClientCertData": {
          "type": "string",
          "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
        },
        "tlsClientCertKey": {
          "type": "string",
          "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
        },
        "type": {
          "type": "string",
          "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
        },
        "name": {
          "type": "string",
          "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
        },
        "inheritedCreds": {
          "type": "boolean",
          "title": "Whether credentials were inherited from a credential set"
        },
        "enableOCI": {
          "type": "boolean",
          "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
        },
        "githubAppPrivateKey": {
          "type": "string",
          "title": "Github App Private Key PEM data"
        },
        "githubAppID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
        },
        "githubAppInstallationID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
        },
        "githubAppEnterpriseBaseUrl": {
          "type": "string",
          "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
        },
        "proxy": {
          "type": "string",
          "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
        },
        "project": {
          "type": "string",
          "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
        }
      },
      "title": "Repository is a repository holding application configurations"
    },
    "v1alpha1SignatureKey": {
      "type": "object",
      "properties": {
        "keyID": {
          "type": "string",
          "title": "The ID of the key in hexadecimal notation"
        }
      },
      "title": "SignatureKey is the specification of a key required to verify commit signatures with"
    },
    "v1alpha1SyncWindow": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind defines if the window allows or blocks syncs"
        },
        "schedule": {
          "type": "string",
          "title": "Schedule is the time the window will begin, specified in cron format"
        },
        "duration": {
          "type": "string",
          "title": "Duration is the amount of time the sync window will be open"
        },
        "applications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Applications contains a list of applications that the window will apply to"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Namespaces contains a list of namespaces that the window will apply to"
        },
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Clusters contains a list of clusters that the window will apply to"
        },
        "manualSync": {
          "type": "boolean",
          "title": "ManualSync enables manual syncs when they would otherwise be blocked"
        },
        "timeZone": {
          "type": "string",
          "title": "TimeZone of the sync that will be applied to the schedule"
        }
      },
      "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps"
    },
    "v1alpha1TLSClientConfig": {
      "type": "object",
      "properties": {
        "insecure": {
          "type": "boolean",
          "description": "Insecure specifies that the server should be accessed without verifying the TLS certificate. For testing only."
        },
        "serverName": {
          "type": "string",
          "description": "ServerName is passed to the server for SNI and is used in the client to check server\ncertificates against. If ServerName is empty, the hostname used to contact the\nserver is used."
        },
        "certData": {
          "type": "string",
          "format": "byte",
          "title": "CertData holds PEM-encoded bytes (typically read from a client certificate file).\nCertData takes precedence over CertFile"
        },
        "keyData": {
          "type": "string",
          "format": "byte",
          "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nKeyData takes precedence over KeyFile"
        },
        "caData": {
          "type": "string",
          "format": "byte",
          "title": "CAData holds PEM-encoded bytes (typically read from a root certificates bundle).\nCAData takes precedence over CAFile"
        }
      },
      "title": "TLSClientConfig contains settings to enable transport layer security"
    }
  }
}
