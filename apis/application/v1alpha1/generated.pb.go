// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: apis/application/v1alpha1/generated.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v11 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	_ "k8s.io/apimachinery/pkg/runtime"
	_ "k8s.io/apimachinery/pkg/runtime/schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AWSAuthConfig is an AWS IAM authentication configuration
type AWSAuthConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ClusterName contains AWS cluster name
	ClusterName *string `protobuf:"bytes,1,opt,name=clusterName" json:"clusterName,omitempty"`
	// RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain.
	RoleARN *string `protobuf:"bytes,2,opt,name=roleARN" json:"roleARN,omitempty"`
}

func (x *AWSAuthConfig) Reset() {
	*x = AWSAuthConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AWSAuthConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSAuthConfig) ProtoMessage() {}

func (x *AWSAuthConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSAuthConfig.ProtoReflect.Descriptor instead.
func (*AWSAuthConfig) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{0}
}

func (x *AWSAuthConfig) GetClusterName() string {
	if x != nil && x.ClusterName != nil {
		return *x.ClusterName
	}
	return ""
}

func (x *AWSAuthConfig) GetRoleARN() string {
	if x != nil && x.RoleARN != nil {
		return *x.RoleARN
	}
	return ""
}

// AppProject provides a logical grouping of applications, providing controls for:
// * where the apps may deploy to (cluster whitelist)
// * what may be deployed (repository whitelist, resource whitelist/blacklist)
// * who can access these applications (roles, OIDC group claims bindings)
// * and what they can do (RBAC policies)
// * automation access to these roles (JWT tokens)
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:path=appprojects,shortName=appproj;appprojs
type AppProject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ObjectMeta    `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec     *AppProjectSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status   *AppProjectStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
}

func (x *AppProject) Reset() {
	*x = AppProject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProject) ProtoMessage() {}

func (x *AppProject) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProject.ProtoReflect.Descriptor instead.
func (*AppProject) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{1}
}

func (x *AppProject) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppProject) GetSpec() *AppProjectSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *AppProject) GetStatus() *AppProjectStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// AppProjectList is list of AppProject resources
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type AppProjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta  `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*AppProject `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *AppProjectList) Reset() {
	*x = AppProjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectList) ProtoMessage() {}

func (x *AppProjectList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectList.ProtoReflect.Descriptor instead.
func (*AppProjectList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{2}
}

func (x *AppProjectList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AppProjectList) GetItems() []*AppProject {
	if x != nil {
		return x.Items
	}
	return nil
}

// AppProjectSpec is the specification of an AppProject
type AppProjectSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SourceRepos contains list of repository URLs which can be used for deployment
	SourceRepos []string `protobuf:"bytes,1,rep,name=sourceRepos" json:"sourceRepos,omitempty"`
	// Destinations contains list of destinations available for deployment
	Destinations []*ApplicationDestination `protobuf:"bytes,2,rep,name=destinations" json:"destinations,omitempty"`
	// Description contains optional project description
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// Roles are user defined RBAC roles associated with this project
	Roles []*ProjectRole `protobuf:"bytes,4,rep,name=roles" json:"roles,omitempty"`
	// ClusterResourceWhitelist contains list of whitelisted cluster level resources
	ClusterResourceWhitelist []*v1.GroupKind `protobuf:"bytes,5,rep,name=clusterResourceWhitelist" json:"clusterResourceWhitelist,omitempty"`
	// NamespaceResourceBlacklist contains list of blacklisted namespace level resources
	NamespaceResourceBlacklist []*v1.GroupKind `protobuf:"bytes,6,rep,name=namespaceResourceBlacklist" json:"namespaceResourceBlacklist,omitempty"`
	// OrphanedResources specifies if controller should monitor orphaned resources of apps in this project
	OrphanedResources *OrphanedResourcesMonitorSettings `protobuf:"bytes,7,opt,name=orphanedResources" json:"orphanedResources,omitempty"`
	// SyncWindows controls when syncs can be run for apps in this project
	SyncWindows []*SyncWindow `protobuf:"bytes,8,rep,name=syncWindows" json:"syncWindows,omitempty"`
	// NamespaceResourceWhitelist contains list of whitelisted namespace level resources
	NamespaceResourceWhitelist []*v1.GroupKind `protobuf:"bytes,9,rep,name=namespaceResourceWhitelist" json:"namespaceResourceWhitelist,omitempty"`
	// SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync
	SignatureKeys []*SignatureKey `protobuf:"bytes,10,rep,name=signatureKeys" json:"signatureKeys,omitempty"`
	// ClusterResourceBlacklist contains list of blacklisted cluster level resources
	ClusterResourceBlacklist []*v1.GroupKind `protobuf:"bytes,11,rep,name=clusterResourceBlacklist" json:"clusterResourceBlacklist,omitempty"`
}

func (x *AppProjectSpec) Reset() {
	*x = AppProjectSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectSpec) ProtoMessage() {}

func (x *AppProjectSpec) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectSpec.ProtoReflect.Descriptor instead.
func (*AppProjectSpec) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{3}
}

func (x *AppProjectSpec) GetSourceRepos() []string {
	if x != nil {
		return x.SourceRepos
	}
	return nil
}

func (x *AppProjectSpec) GetDestinations() []*ApplicationDestination {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *AppProjectSpec) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *AppProjectSpec) GetRoles() []*ProjectRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *AppProjectSpec) GetClusterResourceWhitelist() []*v1.GroupKind {
	if x != nil {
		return x.ClusterResourceWhitelist
	}
	return nil
}

func (x *AppProjectSpec) GetNamespaceResourceBlacklist() []*v1.GroupKind {
	if x != nil {
		return x.NamespaceResourceBlacklist
	}
	return nil
}

func (x *AppProjectSpec) GetOrphanedResources() *OrphanedResourcesMonitorSettings {
	if x != nil {
		return x.OrphanedResources
	}
	return nil
}

func (x *AppProjectSpec) GetSyncWindows() []*SyncWindow {
	if x != nil {
		return x.SyncWindows
	}
	return nil
}

func (x *AppProjectSpec) GetNamespaceResourceWhitelist() []*v1.GroupKind {
	if x != nil {
		return x.NamespaceResourceWhitelist
	}
	return nil
}

func (x *AppProjectSpec) GetSignatureKeys() []*SignatureKey {
	if x != nil {
		return x.SignatureKeys
	}
	return nil
}

func (x *AppProjectSpec) GetClusterResourceBlacklist() []*v1.GroupKind {
	if x != nil {
		return x.ClusterResourceBlacklist
	}
	return nil
}

// AppProjectStatus contains status information for AppProject CRs
type AppProjectStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JWTTokensByRole contains a list of JWT tokens issued for a given role
	JwtTokensByRole map[string]*JWTTokens `protobuf:"bytes,1,rep,name=jwtTokensByRole" json:"jwtTokensByRole,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *AppProjectStatus) Reset() {
	*x = AppProjectStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppProjectStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppProjectStatus) ProtoMessage() {}

func (x *AppProjectStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppProjectStatus.ProtoReflect.Descriptor instead.
func (*AppProjectStatus) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{4}
}

func (x *AppProjectStatus) GetJwtTokensByRole() map[string]*JWTTokens {
	if x != nil {
		return x.JwtTokensByRole
	}
	return nil
}

// Application is a definition of Application resource.
// +genclient
// +genclient:noStatus
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
// +kubebuilder:resource:path=applications,shortName=app;apps
// +kubebuilder:printcolumn:name="Sync Status",type=string,JSONPath=`.status.sync.status`
// +kubebuilder:printcolumn:name="Health Status",type=string,JSONPath=`.status.health.status`
// +kubebuilder:printcolumn:name="Revision",type=string,JSONPath=`.status.sync.revision`,priority=10
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *v1.ObjectMeta     `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Spec      *ApplicationSpec   `protobuf:"bytes,2,opt,name=spec" json:"spec,omitempty"`
	Status    *ApplicationStatus `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	Operation *Operation         `protobuf:"bytes,4,opt,name=operation" json:"operation,omitempty"`
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{5}
}

func (x *Application) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Application) GetSpec() *ApplicationSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *Application) GetStatus() *ApplicationStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Application) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

// ApplicationCondition contains details about an application condition, which is usally an error or warning
type ApplicationCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type is an application condition type
	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Message contains human-readable message indicating details about condition
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// LastTransitionTime is the time the condition was last observed
	LastTransitionTime *v1.Time `protobuf:"bytes,3,opt,name=lastTransitionTime" json:"lastTransitionTime,omitempty"`
}

func (x *ApplicationCondition) Reset() {
	*x = ApplicationCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCondition) ProtoMessage() {}

func (x *ApplicationCondition) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCondition.ProtoReflect.Descriptor instead.
func (*ApplicationCondition) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{6}
}

func (x *ApplicationCondition) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ApplicationCondition) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ApplicationCondition) GetLastTransitionTime() *v1.Time {
	if x != nil {
		return x.LastTransitionTime
	}
	return nil
}

// ApplicationDestination holds information about the application's destination
type ApplicationDestination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API
	Server *string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// Namespace specifies the target namespace for the application's resources.
	// The namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace
	Namespace *string `protobuf:"bytes,2,opt,name=namespace" json:"namespace,omitempty"`
	// Name is an alternate way of specifying the target cluster by its symbolic name
	Name *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *ApplicationDestination) Reset() {
	*x = ApplicationDestination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationDestination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationDestination) ProtoMessage() {}

func (x *ApplicationDestination) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationDestination.ProtoReflect.Descriptor instead.
func (*ApplicationDestination) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{7}
}

func (x *ApplicationDestination) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *ApplicationDestination) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ApplicationDestination) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// ApplicationList is list of Application resources
// +k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object
type ApplicationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta   `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*Application `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *ApplicationList) Reset() {
	*x = ApplicationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationList) ProtoMessage() {}

func (x *ApplicationList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationList.ProtoReflect.Descriptor instead.
func (*ApplicationList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{8}
}

func (x *ApplicationList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ApplicationList) GetItems() []*Application {
	if x != nil {
		return x.Items
	}
	return nil
}

// ApplicationSource contains all required information about the source of an application
type ApplicationSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// RepoURL is the URL to the repository (Git or Helm) that contains the application manifests
	RepoURL *string `protobuf:"bytes,1,opt,name=repoURL" json:"repoURL,omitempty"`
	// Path is a directory path within the Git repository, and is only valid for applications sourced from Git.
	Path *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
	// TargetRevision defines the revision of the source to sync the application to.
	// In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.
	// In case of Helm, this is a semver tag for the Chart's version.
	TargetRevision *string `protobuf:"bytes,4,opt,name=targetRevision" json:"targetRevision,omitempty"`
	// Helm holds helm specific options
	Helm *ApplicationSourceHelm `protobuf:"bytes,7,opt,name=helm" json:"helm,omitempty"`
	// Kustomize holds kustomize specific options
	Kustomize *ApplicationSourceKustomize `protobuf:"bytes,8,opt,name=kustomize" json:"kustomize,omitempty"`
	// Directory holds path/directory specific options
	Directory *ApplicationSourceDirectory `protobuf:"bytes,10,opt,name=directory" json:"directory,omitempty"`
	// ConfigManagementPlugin holds config management plugin specific options
	Plugin *ApplicationSourcePlugin `protobuf:"bytes,11,opt,name=plugin" json:"plugin,omitempty"`
	// Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.
	Chart *string `protobuf:"bytes,12,opt,name=chart" json:"chart,omitempty"`
}

func (x *ApplicationSource) Reset() {
	*x = ApplicationSource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSource) ProtoMessage() {}

func (x *ApplicationSource) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSource.ProtoReflect.Descriptor instead.
func (*ApplicationSource) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{9}
}

func (x *ApplicationSource) GetRepoURL() string {
	if x != nil && x.RepoURL != nil {
		return *x.RepoURL
	}
	return ""
}

func (x *ApplicationSource) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *ApplicationSource) GetTargetRevision() string {
	if x != nil && x.TargetRevision != nil {
		return *x.TargetRevision
	}
	return ""
}

func (x *ApplicationSource) GetHelm() *ApplicationSourceHelm {
	if x != nil {
		return x.Helm
	}
	return nil
}

func (x *ApplicationSource) GetKustomize() *ApplicationSourceKustomize {
	if x != nil {
		return x.Kustomize
	}
	return nil
}

func (x *ApplicationSource) GetDirectory() *ApplicationSourceDirectory {
	if x != nil {
		return x.Directory
	}
	return nil
}

func (x *ApplicationSource) GetPlugin() *ApplicationSourcePlugin {
	if x != nil {
		return x.Plugin
	}
	return nil
}

func (x *ApplicationSource) GetChart() string {
	if x != nil && x.Chart != nil {
		return *x.Chart
	}
	return ""
}

// ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet
type ApplicationSourceDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recurse specifies whether to scan a directory recursively for manifests
	Recurse *bool `protobuf:"varint,1,opt,name=recurse" json:"recurse,omitempty"`
	// Jsonnet holds options specific to Jsonnet
	Jsonnet *ApplicationSourceJsonnet `protobuf:"bytes,2,opt,name=jsonnet" json:"jsonnet,omitempty"`
	// Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation
	Exclude *string `protobuf:"bytes,3,opt,name=exclude" json:"exclude,omitempty"`
	// Include contains a glob pattern to match paths against that should be explicitly included during manifest generation
	Include *string `protobuf:"bytes,4,opt,name=include" json:"include,omitempty"`
}

func (x *ApplicationSourceDirectory) Reset() {
	*x = ApplicationSourceDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceDirectory) ProtoMessage() {}

func (x *ApplicationSourceDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceDirectory.ProtoReflect.Descriptor instead.
func (*ApplicationSourceDirectory) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{10}
}

func (x *ApplicationSourceDirectory) GetRecurse() bool {
	if x != nil && x.Recurse != nil {
		return *x.Recurse
	}
	return false
}

func (x *ApplicationSourceDirectory) GetJsonnet() *ApplicationSourceJsonnet {
	if x != nil {
		return x.Jsonnet
	}
	return nil
}

func (x *ApplicationSourceDirectory) GetExclude() string {
	if x != nil && x.Exclude != nil {
		return *x.Exclude
	}
	return ""
}

func (x *ApplicationSourceDirectory) GetInclude() string {
	if x != nil && x.Include != nil {
		return *x.Include
	}
	return ""
}

// ApplicationSourceHelm holds helm specific options
type ApplicationSourceHelm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ValuesFiles is a list of Helm value files to use when generating a template
	ValueFiles []string `protobuf:"bytes,1,rep,name=valueFiles" json:"valueFiles,omitempty"`
	// Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation
	Parameters []*HelmParameter `protobuf:"bytes,2,rep,name=parameters" json:"parameters,omitempty"`
	// ReleaseName is the Helm release name to use. If omitted it will use the application name
	ReleaseName *string `protobuf:"bytes,3,opt,name=releaseName" json:"releaseName,omitempty"`
	// Values specifies Helm values to be passed to helm template, typically defined as a block
	Values *string `protobuf:"bytes,4,opt,name=values" json:"values,omitempty"`
	// FileParameters are file parameters to the helm template
	FileParameters []*HelmFileParameter `protobuf:"bytes,5,rep,name=fileParameters" json:"fileParameters,omitempty"`
	// Version is the Helm version to use for templating ("3")
	Version *string `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
	// PassCredentials pass credentials to all domains (Helm's --pass-credentials)
	PassCredentials *bool `protobuf:"varint,7,opt,name=passCredentials" json:"passCredentials,omitempty"`
	// IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values
	IgnoreMissingValueFiles *bool `protobuf:"varint,8,opt,name=ignoreMissingValueFiles" json:"ignoreMissingValueFiles,omitempty"`
	// SkipCrds skips custom resource definition installation step (Helm's --skip-crds)
	SkipCrds *bool `protobuf:"varint,9,opt,name=skipCrds" json:"skipCrds,omitempty"`
}

func (x *ApplicationSourceHelm) Reset() {
	*x = ApplicationSourceHelm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceHelm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceHelm) ProtoMessage() {}

func (x *ApplicationSourceHelm) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceHelm.ProtoReflect.Descriptor instead.
func (*ApplicationSourceHelm) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{11}
}

func (x *ApplicationSourceHelm) GetValueFiles() []string {
	if x != nil {
		return x.ValueFiles
	}
	return nil
}

func (x *ApplicationSourceHelm) GetParameters() []*HelmParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *ApplicationSourceHelm) GetReleaseName() string {
	if x != nil && x.ReleaseName != nil {
		return *x.ReleaseName
	}
	return ""
}

func (x *ApplicationSourceHelm) GetValues() string {
	if x != nil && x.Values != nil {
		return *x.Values
	}
	return ""
}

func (x *ApplicationSourceHelm) GetFileParameters() []*HelmFileParameter {
	if x != nil {
		return x.FileParameters
	}
	return nil
}

func (x *ApplicationSourceHelm) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ApplicationSourceHelm) GetPassCredentials() bool {
	if x != nil && x.PassCredentials != nil {
		return *x.PassCredentials
	}
	return false
}

func (x *ApplicationSourceHelm) GetIgnoreMissingValueFiles() bool {
	if x != nil && x.IgnoreMissingValueFiles != nil {
		return *x.IgnoreMissingValueFiles
	}
	return false
}

func (x *ApplicationSourceHelm) GetSkipCrds() bool {
	if x != nil && x.SkipCrds != nil {
		return *x.SkipCrds
	}
	return false
}

// ApplicationSourceJsonnet holds options specific to applications of type Jsonnet
type ApplicationSourceJsonnet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExtVars is a list of Jsonnet External Variables
	ExtVars []*JsonnetVar `protobuf:"bytes,1,rep,name=extVars" json:"extVars,omitempty"`
	// TLAS is a list of Jsonnet Top-level Arguments
	Tlas []*JsonnetVar `protobuf:"bytes,2,rep,name=tlas" json:"tlas,omitempty"`
	// Additional library search dirs
	Libs []string `protobuf:"bytes,3,rep,name=libs" json:"libs,omitempty"`
}

func (x *ApplicationSourceJsonnet) Reset() {
	*x = ApplicationSourceJsonnet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceJsonnet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceJsonnet) ProtoMessage() {}

func (x *ApplicationSourceJsonnet) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceJsonnet.ProtoReflect.Descriptor instead.
func (*ApplicationSourceJsonnet) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationSourceJsonnet) GetExtVars() []*JsonnetVar {
	if x != nil {
		return x.ExtVars
	}
	return nil
}

func (x *ApplicationSourceJsonnet) GetTlas() []*JsonnetVar {
	if x != nil {
		return x.Tlas
	}
	return nil
}

func (x *ApplicationSourceJsonnet) GetLibs() []string {
	if x != nil {
		return x.Libs
	}
	return nil
}

// ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize
type ApplicationSourceKustomize struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NamePrefix is a prefix appended to resources for Kustomize apps
	NamePrefix *string `protobuf:"bytes,1,opt,name=namePrefix" json:"namePrefix,omitempty"`
	// NameSuffix is a suffix appended to resources for Kustomize apps
	NameSuffix *string `protobuf:"bytes,2,opt,name=nameSuffix" json:"nameSuffix,omitempty"`
	// Images is a list of Kustomize image override specifications
	Images []string `protobuf:"bytes,3,rep,name=images" json:"images,omitempty"`
	// CommonLabels is a list of additional labels to add to rendered manifests
	CommonLabels map[string]string `protobuf:"bytes,4,rep,name=commonLabels" json:"commonLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Version controls which version of Kustomize to use for rendering manifests
	Version *string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
	// CommonAnnotations is a list of additional annotations to add to rendered manifests
	CommonAnnotations map[string]string `protobuf:"bytes,6,rep,name=commonAnnotations" json:"commonAnnotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps
	ForceCommonLabels *bool `protobuf:"varint,7,opt,name=forceCommonLabels" json:"forceCommonLabels,omitempty"`
	// ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps
	ForceCommonAnnotations *bool `protobuf:"varint,8,opt,name=forceCommonAnnotations" json:"forceCommonAnnotations,omitempty"`
}

func (x *ApplicationSourceKustomize) Reset() {
	*x = ApplicationSourceKustomize{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourceKustomize) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourceKustomize) ProtoMessage() {}

func (x *ApplicationSourceKustomize) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourceKustomize.ProtoReflect.Descriptor instead.
func (*ApplicationSourceKustomize) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{13}
}

func (x *ApplicationSourceKustomize) GetNamePrefix() string {
	if x != nil && x.NamePrefix != nil {
		return *x.NamePrefix
	}
	return ""
}

func (x *ApplicationSourceKustomize) GetNameSuffix() string {
	if x != nil && x.NameSuffix != nil {
		return *x.NameSuffix
	}
	return ""
}

func (x *ApplicationSourceKustomize) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ApplicationSourceKustomize) GetCommonLabels() map[string]string {
	if x != nil {
		return x.CommonLabels
	}
	return nil
}

func (x *ApplicationSourceKustomize) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ApplicationSourceKustomize) GetCommonAnnotations() map[string]string {
	if x != nil {
		return x.CommonAnnotations
	}
	return nil
}

func (x *ApplicationSourceKustomize) GetForceCommonLabels() bool {
	if x != nil && x.ForceCommonLabels != nil {
		return *x.ForceCommonLabels
	}
	return false
}

func (x *ApplicationSourceKustomize) GetForceCommonAnnotations() bool {
	if x != nil && x.ForceCommonAnnotations != nil {
		return *x.ForceCommonAnnotations
	}
	return false
}

// ApplicationSourcePlugin holds options specific to config management plugins
type ApplicationSourcePlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Env  []*EnvEntry `protobuf:"bytes,2,rep,name=env" json:"env,omitempty"`
}

func (x *ApplicationSourcePlugin) Reset() {
	*x = ApplicationSourcePlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSourcePlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSourcePlugin) ProtoMessage() {}

func (x *ApplicationSourcePlugin) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSourcePlugin.ProtoReflect.Descriptor instead.
func (*ApplicationSourcePlugin) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{14}
}

func (x *ApplicationSourcePlugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ApplicationSourcePlugin) GetEnv() []*EnvEntry {
	if x != nil {
		return x.Env
	}
	return nil
}

// ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision.
type ApplicationSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source is a reference to the location of the application's manifests or chart
	Source *ApplicationSource `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	// Destination is a reference to the target Kubernetes server and namespace
	Destination *ApplicationDestination `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
	// Project is a reference to the project this application belongs to.
	// The empty string means that application belongs to the 'default' project.
	Project *string `protobuf:"bytes,3,opt,name=project" json:"project,omitempty"`
	// SyncPolicy controls when and how a sync will be performed
	SyncPolicy *SyncPolicy `protobuf:"bytes,4,opt,name=syncPolicy" json:"syncPolicy,omitempty"`
	// IgnoreDifferences is a list of resources and their fields which should be ignored during comparison
	IgnoreDifferences []*ResourceIgnoreDifferences `protobuf:"bytes,5,rep,name=ignoreDifferences" json:"ignoreDifferences,omitempty"`
	// Info contains a list of information (URLs, email addresses, and plain text) that relates to the application
	Info []*Info `protobuf:"bytes,6,rep,name=info" json:"info,omitempty"`
	// RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.
	// This should only be changed in exceptional circumstances.
	// Setting to zero will store no history. This will reduce storage used.
	// Increasing will increase the space used to store the history, so we do not recommend increasing it.
	// Default is 10.
	RevisionHistoryLimit *int64 `protobuf:"varint,7,opt,name=revisionHistoryLimit" json:"revisionHistoryLimit,omitempty"`
}

func (x *ApplicationSpec) Reset() {
	*x = ApplicationSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSpec) ProtoMessage() {}

func (x *ApplicationSpec) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSpec.ProtoReflect.Descriptor instead.
func (*ApplicationSpec) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{15}
}

func (x *ApplicationSpec) GetSource() *ApplicationSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ApplicationSpec) GetDestination() *ApplicationDestination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *ApplicationSpec) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *ApplicationSpec) GetSyncPolicy() *SyncPolicy {
	if x != nil {
		return x.SyncPolicy
	}
	return nil
}

func (x *ApplicationSpec) GetIgnoreDifferences() []*ResourceIgnoreDifferences {
	if x != nil {
		return x.IgnoreDifferences
	}
	return nil
}

func (x *ApplicationSpec) GetInfo() []*Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ApplicationSpec) GetRevisionHistoryLimit() int64 {
	if x != nil && x.RevisionHistoryLimit != nil {
		return *x.RevisionHistoryLimit
	}
	return 0
}

// ApplicationStatus contains status information for the application
type ApplicationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resources is a list of Kubernetes resources managed by this application
	Resources []*ResourceStatus `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
	// Sync contains information about the application's current sync status
	Sync *SyncStatus `protobuf:"bytes,2,opt,name=sync" json:"sync,omitempty"`
	// Health contains information about the application's current health status
	Health *HealthStatus `protobuf:"bytes,3,opt,name=health" json:"health,omitempty"`
	// History contains information about the application's sync history
	History []*RevisionHistory `protobuf:"bytes,4,rep,name=history" json:"history,omitempty"`
	// Conditions is a list of currently observed application conditions
	Conditions []*ApplicationCondition `protobuf:"bytes,5,rep,name=conditions" json:"conditions,omitempty"`
	// ReconciledAt indicates when the application state was reconciled using the latest git version
	ReconciledAt *v1.Time `protobuf:"bytes,6,opt,name=reconciledAt" json:"reconciledAt,omitempty"`
	// OperationState contains information about any ongoing operations, such as a sync
	OperationState *OperationState `protobuf:"bytes,7,opt,name=operationState" json:"operationState,omitempty"`
	// ObservedAt indicates when the application state was updated without querying latest git state
	// Deprecated: controller no longer updates ObservedAt field
	ObservedAt *v1.Time `protobuf:"bytes,8,opt,name=observedAt" json:"observedAt,omitempty"`
	// SourceType specifies the type of this application
	SourceType *string `protobuf:"bytes,9,opt,name=sourceType" json:"sourceType,omitempty"`
	// Summary contains a list of URLs and container images used by this application
	Summary *ApplicationSummary `protobuf:"bytes,10,opt,name=summary" json:"summary,omitempty"`
}

func (x *ApplicationStatus) Reset() {
	*x = ApplicationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationStatus) ProtoMessage() {}

func (x *ApplicationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationStatus.ProtoReflect.Descriptor instead.
func (*ApplicationStatus) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{16}
}

func (x *ApplicationStatus) GetResources() []*ResourceStatus {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ApplicationStatus) GetSync() *SyncStatus {
	if x != nil {
		return x.Sync
	}
	return nil
}

func (x *ApplicationStatus) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ApplicationStatus) GetHistory() []*RevisionHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ApplicationStatus) GetConditions() []*ApplicationCondition {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ApplicationStatus) GetReconciledAt() *v1.Time {
	if x != nil {
		return x.ReconciledAt
	}
	return nil
}

func (x *ApplicationStatus) GetOperationState() *OperationState {
	if x != nil {
		return x.OperationState
	}
	return nil
}

func (x *ApplicationStatus) GetObservedAt() *v1.Time {
	if x != nil {
		return x.ObservedAt
	}
	return nil
}

func (x *ApplicationStatus) GetSourceType() string {
	if x != nil && x.SourceType != nil {
		return *x.SourceType
	}
	return ""
}

func (x *ApplicationStatus) GetSummary() *ApplicationSummary {
	if x != nil {
		return x.Summary
	}
	return nil
}

// ApplicationSummary contains information about URLs and container images used by an application
type ApplicationSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ExternalURLs holds all external URLs of application child resources.
	ExternalURLs []string `protobuf:"bytes,1,rep,name=externalURLs" json:"externalURLs,omitempty"`
	// Images holds all images of application child resources.
	Images []string `protobuf:"bytes,2,rep,name=images" json:"images,omitempty"`
}

func (x *ApplicationSummary) Reset() {
	*x = ApplicationSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSummary) ProtoMessage() {}

func (x *ApplicationSummary) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSummary.ProtoReflect.Descriptor instead.
func (*ApplicationSummary) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{17}
}

func (x *ApplicationSummary) GetExternalURLs() []string {
	if x != nil {
		return x.ExternalURLs
	}
	return nil
}

func (x *ApplicationSummary) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

// ApplicationTree holds nodes which belongs to the application
// TODO: describe purpose of this type
type ApplicationTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Nodes contains list of nodes which either directly managed by the application and children of directly managed nodes.
	Nodes []*ResourceNode `protobuf:"bytes,1,rep,name=nodes" json:"nodes,omitempty"`
	// OrphanedNodes contains if or orphaned nodes: nodes which are not managed by the app but in the same namespace. List is populated only if orphaned resources enabled in app project.
	OrphanedNodes []*ResourceNode `protobuf:"bytes,2,rep,name=orphanedNodes" json:"orphanedNodes,omitempty"`
	// Hosts holds list of Kubernetes nodes that run application related pods
	Hosts []*HostInfo `protobuf:"bytes,3,rep,name=hosts" json:"hosts,omitempty"`
}

func (x *ApplicationTree) Reset() {
	*x = ApplicationTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationTree) ProtoMessage() {}

func (x *ApplicationTree) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationTree.ProtoReflect.Descriptor instead.
func (*ApplicationTree) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{18}
}

func (x *ApplicationTree) GetNodes() []*ResourceNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ApplicationTree) GetOrphanedNodes() []*ResourceNode {
	if x != nil {
		return x.OrphanedNodes
	}
	return nil
}

func (x *ApplicationTree) GetHosts() []*HostInfo {
	if x != nil {
		return x.Hosts
	}
	return nil
}

// ApplicationWatchEvent contains information about application change.
type ApplicationWatchEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type *string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	// Application is:
	//  * If Type is Added or Modified: the new state of the object.
	//  * If Type is Deleted: the state of the object immediately before deletion.
	//  * If Type is Error: *api.Status is recommended; other types may make sense
	//    depending on context.
	Application *Application `protobuf:"bytes,2,opt,name=application" json:"application,omitempty"`
}

func (x *ApplicationWatchEvent) Reset() {
	*x = ApplicationWatchEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationWatchEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationWatchEvent) ProtoMessage() {}

func (x *ApplicationWatchEvent) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationWatchEvent.ProtoReflect.Descriptor instead.
func (*ApplicationWatchEvent) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{19}
}

func (x *ApplicationWatchEvent) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ApplicationWatchEvent) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

// Backoff is the backoff strategy to use on subsequent retries for failing syncs
type Backoff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
	Duration *string `protobuf:"bytes,1,opt,name=duration" json:"duration,omitempty"`
	// Factor is a factor to multiply the base duration after each failed retry
	Factor *int64 `protobuf:"varint,2,opt,name=factor" json:"factor,omitempty"`
	// MaxDuration is the maximum amount of time allowed for the backoff strategy
	MaxDuration *string `protobuf:"bytes,3,opt,name=maxDuration" json:"maxDuration,omitempty"`
}

func (x *Backoff) Reset() {
	*x = Backoff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backoff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backoff) ProtoMessage() {}

func (x *Backoff) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backoff.ProtoReflect.Descriptor instead.
func (*Backoff) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{20}
}

func (x *Backoff) GetDuration() string {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return ""
}

func (x *Backoff) GetFactor() int64 {
	if x != nil && x.Factor != nil {
		return *x.Factor
	}
	return 0
}

func (x *Backoff) GetMaxDuration() string {
	if x != nil && x.MaxDuration != nil {
		return *x.MaxDuration
	}
	return ""
}

// Cluster is the definition of a cluster resource
type Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server is the API server URL of the Kubernetes cluster
	Server *string `protobuf:"bytes,1,opt,name=server" json:"server,omitempty"`
	// Name of the cluster. If omitted, will use the server address
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// Config holds cluster information for connecting to a cluster
	Config *ClusterConfig `protobuf:"bytes,3,opt,name=config" json:"config,omitempty"`
	// DEPRECATED: use Info.ConnectionState field instead.
	// ConnectionState contains information about cluster connection state
	ConnectionState *ConnectionState `protobuf:"bytes,4,opt,name=connectionState" json:"connectionState,omitempty"`
	// DEPRECATED: use Info.ServerVersion field instead.
	// The server version
	ServerVersion *string `protobuf:"bytes,5,opt,name=serverVersion" json:"serverVersion,omitempty"`
	// Holds list of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty.
	Namespaces []string `protobuf:"bytes,6,rep,name=namespaces" json:"namespaces,omitempty"`
	// RefreshRequestedAt holds time when cluster cache refresh has been requested
	RefreshRequestedAt *v1.Time `protobuf:"bytes,7,opt,name=refreshRequestedAt" json:"refreshRequestedAt,omitempty"`
	// Info holds information about cluster cache and state
	Info *ClusterInfo `protobuf:"bytes,8,opt,name=info" json:"info,omitempty"`
	// Shard contains optional shard number. Calculated on the fly by the application controller if not specified.
	Shard *int64 `protobuf:"varint,9,opt,name=shard" json:"shard,omitempty"`
	// Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode.
	ClusterResources *bool `protobuf:"varint,10,opt,name=clusterResources" json:"clusterResources,omitempty"`
	// Reference between project and cluster that allow you automatically to be added as item inside Destinations project entity
	Project *string `protobuf:"bytes,11,opt,name=project" json:"project,omitempty"`
	// Labels for cluster secret metadata
	Labels map[string]string `protobuf:"bytes,12,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Annotations for cluster secret metadata
	Annotations map[string]string `protobuf:"bytes,13,rep,name=annotations" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *Cluster) Reset() {
	*x = Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cluster) ProtoMessage() {}

func (x *Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cluster.ProtoReflect.Descriptor instead.
func (*Cluster) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{21}
}

func (x *Cluster) GetServer() string {
	if x != nil && x.Server != nil {
		return *x.Server
	}
	return ""
}

func (x *Cluster) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Cluster) GetConfig() *ClusterConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Cluster) GetConnectionState() *ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return nil
}

func (x *Cluster) GetServerVersion() string {
	if x != nil && x.ServerVersion != nil {
		return *x.ServerVersion
	}
	return ""
}

func (x *Cluster) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *Cluster) GetRefreshRequestedAt() *v1.Time {
	if x != nil {
		return x.RefreshRequestedAt
	}
	return nil
}

func (x *Cluster) GetInfo() *ClusterInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Cluster) GetShard() int64 {
	if x != nil && x.Shard != nil {
		return *x.Shard
	}
	return 0
}

func (x *Cluster) GetClusterResources() bool {
	if x != nil && x.ClusterResources != nil {
		return *x.ClusterResources
	}
	return false
}

func (x *Cluster) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

func (x *Cluster) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Cluster) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// ClusterCacheInfo contains information about the cluster cache
type ClusterCacheInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ResourcesCount holds number of observed Kubernetes resources
	ResourcesCount *int64 `protobuf:"varint,1,opt,name=resourcesCount" json:"resourcesCount,omitempty"`
	// APIsCount holds number of observed Kubernetes API count
	ApisCount *int64 `protobuf:"varint,2,opt,name=apisCount" json:"apisCount,omitempty"`
	// LastCacheSyncTime holds time of most recent cache synchronization
	LastCacheSyncTime *v1.Time `protobuf:"bytes,3,opt,name=lastCacheSyncTime" json:"lastCacheSyncTime,omitempty"`
}

func (x *ClusterCacheInfo) Reset() {
	*x = ClusterCacheInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterCacheInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterCacheInfo) ProtoMessage() {}

func (x *ClusterCacheInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterCacheInfo.ProtoReflect.Descriptor instead.
func (*ClusterCacheInfo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{22}
}

func (x *ClusterCacheInfo) GetResourcesCount() int64 {
	if x != nil && x.ResourcesCount != nil {
		return *x.ResourcesCount
	}
	return 0
}

func (x *ClusterCacheInfo) GetApisCount() int64 {
	if x != nil && x.ApisCount != nil {
		return *x.ApisCount
	}
	return 0
}

func (x *ClusterCacheInfo) GetLastCacheSyncTime() *v1.Time {
	if x != nil {
		return x.LastCacheSyncTime
	}
	return nil
}

// ClusterConfig is the configuration attributes. This structure is subset of the go-client
// rest.Config with annotations added for marshalling.
type ClusterConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Server requires Basic authentication
	Username *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password *string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	// Server requires Bearer authentication. This client will not attempt to use
	// refresh tokens for an OAuth2 flow.
	// TODO: demonstrate an OAuth2 compatible client.
	BearerToken *string `protobuf:"bytes,3,opt,name=bearerToken" json:"bearerToken,omitempty"`
	// TLSClientConfig contains settings to enable transport layer security
	TlsClientConfig *TLSClientConfig `protobuf:"bytes,4,opt,name=tlsClientConfig" json:"tlsClientConfig,omitempty"`
	// AWSAuthConfig contains IAM authentication configuration
	AwsAuthConfig *AWSAuthConfig `protobuf:"bytes,5,opt,name=awsAuthConfig" json:"awsAuthConfig,omitempty"`
	// ExecProviderConfig contains configuration for an exec provider
	ExecProviderConfig *ExecProviderConfig `protobuf:"bytes,6,opt,name=execProviderConfig" json:"execProviderConfig,omitempty"`
}

func (x *ClusterConfig) Reset() {
	*x = ClusterConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterConfig) ProtoMessage() {}

func (x *ClusterConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterConfig.ProtoReflect.Descriptor instead.
func (*ClusterConfig) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{23}
}

func (x *ClusterConfig) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *ClusterConfig) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *ClusterConfig) GetBearerToken() string {
	if x != nil && x.BearerToken != nil {
		return *x.BearerToken
	}
	return ""
}

func (x *ClusterConfig) GetTlsClientConfig() *TLSClientConfig {
	if x != nil {
		return x.TlsClientConfig
	}
	return nil
}

func (x *ClusterConfig) GetAwsAuthConfig() *AWSAuthConfig {
	if x != nil {
		return x.AwsAuthConfig
	}
	return nil
}

func (x *ClusterConfig) GetExecProviderConfig() *ExecProviderConfig {
	if x != nil {
		return x.ExecProviderConfig
	}
	return nil
}

// ClusterInfo contains information about the cluster
type ClusterInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConnectionState contains information about the connection to the cluster
	ConnectionState *ConnectionState `protobuf:"bytes,1,opt,name=connectionState" json:"connectionState,omitempty"`
	// ServerVersion contains information about the Kubernetes version of the cluster
	ServerVersion *string `protobuf:"bytes,2,opt,name=serverVersion" json:"serverVersion,omitempty"`
	// CacheInfo contains information about the cluster cache
	CacheInfo *ClusterCacheInfo `protobuf:"bytes,3,opt,name=cacheInfo" json:"cacheInfo,omitempty"`
	// ApplicationsCount is the number of applications managed by Argo CD on the cluster
	ApplicationsCount *int64 `protobuf:"varint,4,opt,name=applicationsCount" json:"applicationsCount,omitempty"`
	// APIVersions contains list of API versions supported by the cluster
	ApiVersions []string `protobuf:"bytes,5,rep,name=apiVersions" json:"apiVersions,omitempty"`
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{24}
}

func (x *ClusterInfo) GetConnectionState() *ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return nil
}

func (x *ClusterInfo) GetServerVersion() string {
	if x != nil && x.ServerVersion != nil {
		return *x.ServerVersion
	}
	return ""
}

func (x *ClusterInfo) GetCacheInfo() *ClusterCacheInfo {
	if x != nil {
		return x.CacheInfo
	}
	return nil
}

func (x *ClusterInfo) GetApplicationsCount() int64 {
	if x != nil && x.ApplicationsCount != nil {
		return *x.ApplicationsCount
	}
	return 0
}

func (x *ClusterInfo) GetApiVersions() []string {
	if x != nil {
		return x.ApiVersions
	}
	return nil
}

// ClusterList is a collection of Clusters.
type ClusterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*Cluster   `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *ClusterList) Reset() {
	*x = ClusterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClusterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterList) ProtoMessage() {}

func (x *ClusterList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterList.ProtoReflect.Descriptor instead.
func (*ClusterList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{25}
}

func (x *ClusterList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ClusterList) GetItems() []*Cluster {
	if x != nil {
		return x.Items
	}
	return nil
}

// Command holds binary path and arguments list
type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []string `protobuf:"bytes,1,rep,name=command" json:"command,omitempty"`
	Args    []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{26}
}

func (x *Command) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Command) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

// ComparedTo contains application source and target which was used for resources comparison
type ComparedTo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Source is a reference to the application's source used for comparison
	Source *ApplicationSource `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	// Destination is a reference to the application's destination used for comparison
	Destination *ApplicationDestination `protobuf:"bytes,2,opt,name=destination" json:"destination,omitempty"`
}

func (x *ComparedTo) Reset() {
	*x = ComparedTo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComparedTo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComparedTo) ProtoMessage() {}

func (x *ComparedTo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComparedTo.ProtoReflect.Descriptor instead.
func (*ComparedTo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{27}
}

func (x *ComparedTo) GetSource() *ApplicationSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *ComparedTo) GetDestination() *ApplicationDestination {
	if x != nil {
		return x.Destination
	}
	return nil
}

// ComponentParameter contains information about component parameter value
type ComponentParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component *string `protobuf:"bytes,1,opt,name=component" json:"component,omitempty"`
	Name      *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Value     *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *ComponentParameter) Reset() {
	*x = ComponentParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentParameter) ProtoMessage() {}

func (x *ComponentParameter) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentParameter.ProtoReflect.Descriptor instead.
func (*ComponentParameter) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{28}
}

func (x *ComponentParameter) GetComponent() string {
	if x != nil && x.Component != nil {
		return *x.Component
	}
	return ""
}

func (x *ComponentParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ComponentParameter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// ConfigManagementPlugin contains config management plugin configuration
type ConfigManagementPlugin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Init     *Command `protobuf:"bytes,2,opt,name=init" json:"init,omitempty"`
	Generate *Command `protobuf:"bytes,3,opt,name=generate" json:"generate,omitempty"`
	LockRepo *bool    `protobuf:"varint,4,opt,name=lockRepo" json:"lockRepo,omitempty"`
}

func (x *ConfigManagementPlugin) Reset() {
	*x = ConfigManagementPlugin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigManagementPlugin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigManagementPlugin) ProtoMessage() {}

func (x *ConfigManagementPlugin) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigManagementPlugin.ProtoReflect.Descriptor instead.
func (*ConfigManagementPlugin) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{29}
}

func (x *ConfigManagementPlugin) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ConfigManagementPlugin) GetInit() *Command {
	if x != nil {
		return x.Init
	}
	return nil
}

func (x *ConfigManagementPlugin) GetGenerate() *Command {
	if x != nil {
		return x.Generate
	}
	return nil
}

func (x *ConfigManagementPlugin) GetLockRepo() bool {
	if x != nil && x.LockRepo != nil {
		return *x.LockRepo
	}
	return false
}

// ConnectionState contains information about remote resource connection state, currently used for clusters and repositories
type ConnectionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status contains the current status indicator for the connection
	Status *string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Message contains human readable information about the connection status
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	// ModifiedAt contains the timestamp when this connection status has been determined
	AttemptedAt *v1.Time `protobuf:"bytes,3,opt,name=attemptedAt" json:"attemptedAt,omitempty"`
}

func (x *ConnectionState) Reset() {
	*x = ConnectionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionState) ProtoMessage() {}

func (x *ConnectionState) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionState.ProtoReflect.Descriptor instead.
func (*ConnectionState) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{30}
}

func (x *ConnectionState) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ConnectionState) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ConnectionState) GetAttemptedAt() *v1.Time {
	if x != nil {
		return x.AttemptedAt
	}
	return nil
}

// EnvEntry represents an entry in the application's environment
type EnvEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the variable, usually expressed in uppercase
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Value is the value of the variable
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *EnvEntry) Reset() {
	*x = EnvEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnvEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvEntry) ProtoMessage() {}

func (x *EnvEntry) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvEntry.ProtoReflect.Descriptor instead.
func (*EnvEntry) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{31}
}

func (x *EnvEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *EnvEntry) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// ExecProviderConfig is config used to call an external command to perform cluster authentication
// See: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig
type ExecProviderConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Command to execute
	Command *string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	// Arguments to pass to the command when executing it
	Args []string `protobuf:"bytes,2,rep,name=args" json:"args,omitempty"`
	// Env defines additional environment variables to expose to the process
	Env map[string]string `protobuf:"bytes,3,rep,name=env" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Preferred input version of the ExecInfo
	ApiVersion *string `protobuf:"bytes,4,opt,name=apiVersion" json:"apiVersion,omitempty"`
	// This text is shown to the user when the executable doesn't seem to be present
	InstallHint *string `protobuf:"bytes,5,opt,name=installHint" json:"installHint,omitempty"`
}

func (x *ExecProviderConfig) Reset() {
	*x = ExecProviderConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecProviderConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecProviderConfig) ProtoMessage() {}

func (x *ExecProviderConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecProviderConfig.ProtoReflect.Descriptor instead.
func (*ExecProviderConfig) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{32}
}

func (x *ExecProviderConfig) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *ExecProviderConfig) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecProviderConfig) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *ExecProviderConfig) GetApiVersion() string {
	if x != nil && x.ApiVersion != nil {
		return *x.ApiVersion
	}
	return ""
}

func (x *ExecProviderConfig) GetInstallHint() string {
	if x != nil && x.InstallHint != nil {
		return *x.InstallHint
	}
	return ""
}

// GnuPGPublicKey is a representation of a GnuPG public key
type GnuPGPublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KeyID specifies the key ID, in hexadecimal string format
	KeyID *string `protobuf:"bytes,1,opt,name=keyID" json:"keyID,omitempty"`
	// Fingerprint is the fingerprint of the key
	Fingerprint *string `protobuf:"bytes,2,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// Owner holds the owner identification, e.g. a name and e-mail address
	Owner *string `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	// Trust holds the level of trust assigned to this key
	Trust *string `protobuf:"bytes,4,opt,name=trust" json:"trust,omitempty"`
	// SubType holds the key's sub type (e.g. rsa4096)
	SubType *string `protobuf:"bytes,5,opt,name=subType" json:"subType,omitempty"`
	// KeyData holds the raw key data, in base64 encoded format
	KeyData *string `protobuf:"bytes,6,opt,name=keyData" json:"keyData,omitempty"`
}

func (x *GnuPGPublicKey) Reset() {
	*x = GnuPGPublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnuPGPublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnuPGPublicKey) ProtoMessage() {}

func (x *GnuPGPublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnuPGPublicKey.ProtoReflect.Descriptor instead.
func (*GnuPGPublicKey) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{33}
}

func (x *GnuPGPublicKey) GetKeyID() string {
	if x != nil && x.KeyID != nil {
		return *x.KeyID
	}
	return ""
}

func (x *GnuPGPublicKey) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *GnuPGPublicKey) GetOwner() string {
	if x != nil && x.Owner != nil {
		return *x.Owner
	}
	return ""
}

func (x *GnuPGPublicKey) GetTrust() string {
	if x != nil && x.Trust != nil {
		return *x.Trust
	}
	return ""
}

func (x *GnuPGPublicKey) GetSubType() string {
	if x != nil && x.SubType != nil {
		return *x.SubType
	}
	return ""
}

func (x *GnuPGPublicKey) GetKeyData() string {
	if x != nil && x.KeyData != nil {
		return *x.KeyData
	}
	return ""
}

// GnuPGPublicKeyList is a collection of GnuPGPublicKey objects
type GnuPGPublicKeyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta      `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*GnuPGPublicKey `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *GnuPGPublicKeyList) Reset() {
	*x = GnuPGPublicKeyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GnuPGPublicKeyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GnuPGPublicKeyList) ProtoMessage() {}

func (x *GnuPGPublicKeyList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GnuPGPublicKeyList.ProtoReflect.Descriptor instead.
func (*GnuPGPublicKeyList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{34}
}

func (x *GnuPGPublicKeyList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GnuPGPublicKeyList) GetItems() []*GnuPGPublicKey {
	if x != nil {
		return x.Items
	}
	return nil
}

// HealthStatus contains information about the currently observed health state of an application or resource
type HealthStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status holds the status code of the application or resource
	Status *string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// Message is a human-readable informational message describing the health status
	Message *string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{35}
}

func (x *HealthStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *HealthStatus) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

// HelmFileParameter is a file parameter that's passed to helm template during manifest generation
type HelmFileParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the Helm parameter
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Path is the path to the file containing the values for the Helm parameter
	Path *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (x *HelmFileParameter) Reset() {
	*x = HelmFileParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmFileParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmFileParameter) ProtoMessage() {}

func (x *HelmFileParameter) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmFileParameter.ProtoReflect.Descriptor instead.
func (*HelmFileParameter) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{36}
}

func (x *HelmFileParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HelmFileParameter) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

// HelmOptions holds helm options
type HelmOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValuesFileSchemes []string `protobuf:"bytes,1,rep,name=valuesFileSchemes" json:"valuesFileSchemes,omitempty"`
}

func (x *HelmOptions) Reset() {
	*x = HelmOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmOptions) ProtoMessage() {}

func (x *HelmOptions) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmOptions.ProtoReflect.Descriptor instead.
func (*HelmOptions) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{37}
}

func (x *HelmOptions) GetValuesFileSchemes() []string {
	if x != nil {
		return x.ValuesFileSchemes
	}
	return nil
}

// HelmParameter is a parameter that's passed to helm template during manifest generation
type HelmParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is the name of the Helm parameter
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Value is the value for the Helm parameter
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	// ForceString determines whether to tell Helm to interpret booleans and numbers as strings
	ForceString *bool `protobuf:"varint,3,opt,name=forceString" json:"forceString,omitempty"`
}

func (x *HelmParameter) Reset() {
	*x = HelmParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HelmParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HelmParameter) ProtoMessage() {}

func (x *HelmParameter) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HelmParameter.ProtoReflect.Descriptor instead.
func (*HelmParameter) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{38}
}

func (x *HelmParameter) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HelmParameter) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *HelmParameter) GetForceString() bool {
	if x != nil && x.ForceString != nil {
		return *x.ForceString
	}
	return false
}

// HostInfo holds host name and resources metrics
// TODO: describe purpose of this type
// TODO: describe members of this type
type HostInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          *string             `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ResourcesInfo []*HostResourceInfo `protobuf:"bytes,2,rep,name=resourcesInfo" json:"resourcesInfo,omitempty"`
	SystemInfo    *v11.NodeSystemInfo `protobuf:"bytes,3,opt,name=systemInfo" json:"systemInfo,omitempty"`
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{39}
}

func (x *HostInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HostInfo) GetResourcesInfo() []*HostResourceInfo {
	if x != nil {
		return x.ResourcesInfo
	}
	return nil
}

func (x *HostInfo) GetSystemInfo() *v11.NodeSystemInfo {
	if x != nil {
		return x.SystemInfo
	}
	return nil
}

// TODO: describe this type
type HostResourceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceName         *string `protobuf:"bytes,1,opt,name=resourceName" json:"resourceName,omitempty"`
	RequestedByApp       *int64  `protobuf:"varint,2,opt,name=requestedByApp" json:"requestedByApp,omitempty"`
	RequestedByNeighbors *int64  `protobuf:"varint,3,opt,name=requestedByNeighbors" json:"requestedByNeighbors,omitempty"`
	Capacity             *int64  `protobuf:"varint,4,opt,name=capacity" json:"capacity,omitempty"`
}

func (x *HostResourceInfo) Reset() {
	*x = HostResourceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostResourceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostResourceInfo) ProtoMessage() {}

func (x *HostResourceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostResourceInfo.ProtoReflect.Descriptor instead.
func (*HostResourceInfo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{40}
}

func (x *HostResourceInfo) GetResourceName() string {
	if x != nil && x.ResourceName != nil {
		return *x.ResourceName
	}
	return ""
}

func (x *HostResourceInfo) GetRequestedByApp() int64 {
	if x != nil && x.RequestedByApp != nil {
		return *x.RequestedByApp
	}
	return 0
}

func (x *HostResourceInfo) GetRequestedByNeighbors() int64 {
	if x != nil && x.RequestedByNeighbors != nil {
		return *x.RequestedByNeighbors
	}
	return 0
}

func (x *HostResourceInfo) GetCapacity() int64 {
	if x != nil && x.Capacity != nil {
		return *x.Capacity
	}
	return 0
}

type Info struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *Info) Reset() {
	*x = Info{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Info) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Info) ProtoMessage() {}

func (x *Info) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Info.ProtoReflect.Descriptor instead.
func (*Info) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{41}
}

func (x *Info) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Info) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// InfoItem contains arbitrary, human readable information about an application
type InfoItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a human readable title for this piece of information.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Value is human readable content.
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *InfoItem) Reset() {
	*x = InfoItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InfoItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InfoItem) ProtoMessage() {}

func (x *InfoItem) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InfoItem.ProtoReflect.Descriptor instead.
func (*InfoItem) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{42}
}

func (x *InfoItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *InfoItem) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// JWTToken holds the issuedAt and expiresAt values of a token
type JWTToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Iat *int64  `protobuf:"varint,1,opt,name=iat" json:"iat,omitempty"`
	Exp *int64  `protobuf:"varint,2,opt,name=exp" json:"exp,omitempty"`
	Id  *string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (x *JWTToken) Reset() {
	*x = JWTToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTToken) ProtoMessage() {}

func (x *JWTToken) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTToken.ProtoReflect.Descriptor instead.
func (*JWTToken) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{43}
}

func (x *JWTToken) GetIat() int64 {
	if x != nil && x.Iat != nil {
		return *x.Iat
	}
	return 0
}

func (x *JWTToken) GetExp() int64 {
	if x != nil && x.Exp != nil {
		return *x.Exp
	}
	return 0
}

func (x *JWTToken) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// JWTTokens represents a list of JWT tokens
type JWTTokens struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*JWTToken `protobuf:"bytes,1,rep,name=items" json:"items,omitempty"`
}

func (x *JWTTokens) Reset() {
	*x = JWTTokens{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JWTTokens) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JWTTokens) ProtoMessage() {}

func (x *JWTTokens) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JWTTokens.ProtoReflect.Descriptor instead.
func (*JWTTokens) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{44}
}

func (x *JWTTokens) GetItems() []*JWTToken {
	if x != nil {
		return x.Items
	}
	return nil
}

// JsonnetVar represents a variable to be passed to jsonnet during manifest generation
type JsonnetVar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Code  *bool   `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
}

func (x *JsonnetVar) Reset() {
	*x = JsonnetVar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JsonnetVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonnetVar) ProtoMessage() {}

func (x *JsonnetVar) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonnetVar.ProtoReflect.Descriptor instead.
func (*JsonnetVar) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{45}
}

func (x *JsonnetVar) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *JsonnetVar) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *JsonnetVar) GetCode() bool {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return false
}

// KnownTypeField contains mapping between CRD field and known Kubernetes type.
// This is mainly used for unit conversion in unknown resources (e.g. 0.1 == 100mi)
// TODO: Describe the members of this type
type KnownTypeField struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field *string `protobuf:"bytes,1,opt,name=field" json:"field,omitempty"`
	Type  *string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
}

func (x *KnownTypeField) Reset() {
	*x = KnownTypeField{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KnownTypeField) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KnownTypeField) ProtoMessage() {}

func (x *KnownTypeField) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KnownTypeField.ProtoReflect.Descriptor instead.
func (*KnownTypeField) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{46}
}

func (x *KnownTypeField) GetField() string {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return ""
}

func (x *KnownTypeField) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// KustomizeOptions are options for kustomize to use when building manifests
type KustomizeOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// BuildOptions is a string of build parameters to use when calling `kustomize build`
	BuildOptions *string `protobuf:"bytes,1,opt,name=buildOptions" json:"buildOptions,omitempty"`
	// BinaryPath holds optional path to kustomize binary
	BinaryPath *string `protobuf:"bytes,2,opt,name=binaryPath" json:"binaryPath,omitempty"`
}

func (x *KustomizeOptions) Reset() {
	*x = KustomizeOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KustomizeOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KustomizeOptions) ProtoMessage() {}

func (x *KustomizeOptions) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KustomizeOptions.ProtoReflect.Descriptor instead.
func (*KustomizeOptions) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{47}
}

func (x *KustomizeOptions) GetBuildOptions() string {
	if x != nil && x.BuildOptions != nil {
		return *x.BuildOptions
	}
	return ""
}

func (x *KustomizeOptions) GetBinaryPath() string {
	if x != nil && x.BinaryPath != nil {
		return *x.BinaryPath
	}
	return ""
}

// Operation contains information about a requested or running operation
type Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Sync contains parameters for the operation
	Sync *SyncOperation `protobuf:"bytes,1,opt,name=sync" json:"sync,omitempty"`
	// InitiatedBy contains information about who initiated the operations
	InitiatedBy *OperationInitiator `protobuf:"bytes,2,opt,name=initiatedBy" json:"initiatedBy,omitempty"`
	// Info is a list of informational items for this operation
	Info []*Info `protobuf:"bytes,3,rep,name=info" json:"info,omitempty"`
	// Retry controls the strategy to apply if a sync fails
	Retry *RetryStrategy `protobuf:"bytes,4,opt,name=retry" json:"retry,omitempty"`
}

func (x *Operation) Reset() {
	*x = Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{48}
}

func (x *Operation) GetSync() *SyncOperation {
	if x != nil {
		return x.Sync
	}
	return nil
}

func (x *Operation) GetInitiatedBy() *OperationInitiator {
	if x != nil {
		return x.InitiatedBy
	}
	return nil
}

func (x *Operation) GetInfo() []*Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *Operation) GetRetry() *RetryStrategy {
	if x != nil {
		return x.Retry
	}
	return nil
}

// OperationInitiator contains information about the initiator of an operation
type OperationInitiator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username contains the name of a user who started operation
	Username *string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	// Automated is set to true if operation was initiated automatically by the application controller.
	Automated *bool `protobuf:"varint,2,opt,name=automated" json:"automated,omitempty"`
}

func (x *OperationInitiator) Reset() {
	*x = OperationInitiator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationInitiator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationInitiator) ProtoMessage() {}

func (x *OperationInitiator) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationInitiator.ProtoReflect.Descriptor instead.
func (*OperationInitiator) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{49}
}

func (x *OperationInitiator) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *OperationInitiator) GetAutomated() bool {
	if x != nil && x.Automated != nil {
		return *x.Automated
	}
	return false
}

// OperationState contains information about state of a running operation
type OperationState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Operation is the original requested operation
	Operation *Operation `protobuf:"bytes,1,opt,name=operation" json:"operation,omitempty"`
	// Phase is the current phase of the operation
	Phase *string `protobuf:"bytes,2,opt,name=phase" json:"phase,omitempty"`
	// Message holds any pertinent messages when attempting to perform operation (typically errors).
	Message *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	// SyncResult is the result of a Sync operation
	SyncResult *SyncOperationResult `protobuf:"bytes,4,opt,name=syncResult" json:"syncResult,omitempty"`
	// StartedAt contains time of operation start
	StartedAt *v1.Time `protobuf:"bytes,6,opt,name=startedAt" json:"startedAt,omitempty"`
	// FinishedAt contains time of operation completion
	FinishedAt *v1.Time `protobuf:"bytes,7,opt,name=finishedAt" json:"finishedAt,omitempty"`
	// RetryCount contains time of operation retries
	RetryCount *int64 `protobuf:"varint,8,opt,name=retryCount" json:"retryCount,omitempty"`
}

func (x *OperationState) Reset() {
	*x = OperationState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationState) ProtoMessage() {}

func (x *OperationState) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationState.ProtoReflect.Descriptor instead.
func (*OperationState) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{50}
}

func (x *OperationState) GetOperation() *Operation {
	if x != nil {
		return x.Operation
	}
	return nil
}

func (x *OperationState) GetPhase() string {
	if x != nil && x.Phase != nil {
		return *x.Phase
	}
	return ""
}

func (x *OperationState) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *OperationState) GetSyncResult() *SyncOperationResult {
	if x != nil {
		return x.SyncResult
	}
	return nil
}

func (x *OperationState) GetStartedAt() *v1.Time {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *OperationState) GetFinishedAt() *v1.Time {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *OperationState) GetRetryCount() int64 {
	if x != nil && x.RetryCount != nil {
		return *x.RetryCount
	}
	return 0
}

// OrphanedResourceKey is a reference to a resource to be ignored from
type OrphanedResourceKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Kind  *string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Name  *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
}

func (x *OrphanedResourceKey) Reset() {
	*x = OrphanedResourceKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrphanedResourceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrphanedResourceKey) ProtoMessage() {}

func (x *OrphanedResourceKey) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrphanedResourceKey.ProtoReflect.Descriptor instead.
func (*OrphanedResourceKey) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{51}
}

func (x *OrphanedResourceKey) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *OrphanedResourceKey) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *OrphanedResourceKey) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

// OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring
type OrphanedResourcesMonitorSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Warn indicates if warning condition should be created for apps which have orphaned resources
	Warn *bool `protobuf:"varint,1,opt,name=warn" json:"warn,omitempty"`
	// Ignore contains a list of resources that are to be excluded from orphaned resources monitoring
	Ignore []*OrphanedResourceKey `protobuf:"bytes,2,rep,name=ignore" json:"ignore,omitempty"`
}

func (x *OrphanedResourcesMonitorSettings) Reset() {
	*x = OrphanedResourcesMonitorSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrphanedResourcesMonitorSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrphanedResourcesMonitorSettings) ProtoMessage() {}

func (x *OrphanedResourcesMonitorSettings) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrphanedResourcesMonitorSettings.ProtoReflect.Descriptor instead.
func (*OrphanedResourcesMonitorSettings) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{52}
}

func (x *OrphanedResourcesMonitorSettings) GetWarn() bool {
	if x != nil && x.Warn != nil {
		return *x.Warn
	}
	return false
}

func (x *OrphanedResourcesMonitorSettings) GetIgnore() []*OrphanedResourceKey {
	if x != nil {
		return x.Ignore
	}
	return nil
}

// OverrideIgnoreDiff contains configurations about how fields should be ignored during diffs between
// the desired state and live state
type OverrideIgnoreDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// JSONPointers is a JSON path list following the format defined in RFC4627 (https://datatracker.ietf.org/doc/html/rfc6902#section-3)
	JSONPointers []string `protobuf:"bytes,1,rep,name=jSONPointers" json:"jSONPointers,omitempty"`
	// JQPathExpressions is a JQ path list that will be evaludated during the diff process
	JqPathExpressions []string `protobuf:"bytes,2,rep,name=jqPathExpressions" json:"jqPathExpressions,omitempty"`
	// ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the
	// desired state defined in the SCM and won't be displayed in diffs
	ManagedFieldsManagers []string `protobuf:"bytes,3,rep,name=managedFieldsManagers" json:"managedFieldsManagers,omitempty"`
}

func (x *OverrideIgnoreDiff) Reset() {
	*x = OverrideIgnoreDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideIgnoreDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideIgnoreDiff) ProtoMessage() {}

func (x *OverrideIgnoreDiff) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideIgnoreDiff.ProtoReflect.Descriptor instead.
func (*OverrideIgnoreDiff) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{53}
}

func (x *OverrideIgnoreDiff) GetJSONPointers() []string {
	if x != nil {
		return x.JSONPointers
	}
	return nil
}

func (x *OverrideIgnoreDiff) GetJqPathExpressions() []string {
	if x != nil {
		return x.JqPathExpressions
	}
	return nil
}

func (x *OverrideIgnoreDiff) GetManagedFieldsManagers() []string {
	if x != nil {
		return x.ManagedFieldsManagers
	}
	return nil
}

// ProjectRole represents a role that has access to a project
type ProjectRole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name is a name for this role
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Description is a description of the role
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	// Policies Stores a list of casbin formatted strings that define access policies for the role in the project
	Policies []string `protobuf:"bytes,3,rep,name=policies" json:"policies,omitempty"`
	// JWTTokens are a list of generated JWT tokens bound to this role
	JwtTokens []*JWTToken `protobuf:"bytes,4,rep,name=jwtTokens" json:"jwtTokens,omitempty"`
	// Groups are a list of OIDC group claims bound to this role
	Groups []string `protobuf:"bytes,5,rep,name=groups" json:"groups,omitempty"`
}

func (x *ProjectRole) Reset() {
	*x = ProjectRole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRole) ProtoMessage() {}

func (x *ProjectRole) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRole.ProtoReflect.Descriptor instead.
func (*ProjectRole) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{54}
}

func (x *ProjectRole) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectRole) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProjectRole) GetPolicies() []string {
	if x != nil {
		return x.Policies
	}
	return nil
}

func (x *ProjectRole) GetJwtTokens() []*JWTToken {
	if x != nil {
		return x.JwtTokens
	}
	return nil
}

func (x *ProjectRole) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

// RepoCreds holds the definition for repository credentials
type RepoCreds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL is the URL that this credentials matches to
	Url *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	// Username for authenticating at the repo server
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// Password for authenticating at the repo server
	Password *string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	// SSHPrivateKey contains the private key data for authenticating at the repo server using SSH (only Git repos)
	SshPrivateKey *string `protobuf:"bytes,4,opt,name=sshPrivateKey" json:"sshPrivateKey,omitempty"`
	// TLSClientCertData specifies the TLS client cert data for authenticating at the repo server
	TlsClientCertData *string `protobuf:"bytes,5,opt,name=tlsClientCertData" json:"tlsClientCertData,omitempty"`
	// TLSClientCertKey specifies the TLS client cert key for authenticating at the repo server
	TlsClientCertKey *string `protobuf:"bytes,6,opt,name=tlsClientCertKey" json:"tlsClientCertKey,omitempty"`
	// GithubAppPrivateKey specifies the private key PEM data for authentication via GitHub app
	GithubAppPrivateKey *string `protobuf:"bytes,7,opt,name=githubAppPrivateKey" json:"githubAppPrivateKey,omitempty"`
	// GithubAppId specifies the Github App ID of the app used to access the repo for GitHub app authentication
	GithubAppID *int64 `protobuf:"varint,8,opt,name=githubAppID" json:"githubAppID,omitempty"`
	// GithubAppInstallationId specifies the ID of the installed GitHub App for GitHub app authentication
	GithubAppInstallationID *int64 `protobuf:"varint,9,opt,name=githubAppInstallationID" json:"githubAppInstallationID,omitempty"`
	// GithubAppEnterpriseBaseURL specifies the GitHub API URL for GitHub app authentication. If empty will default to https://api.github.com
	GithubAppEnterpriseBaseUrl *string `protobuf:"bytes,10,opt,name=githubAppEnterpriseBaseUrl" json:"githubAppEnterpriseBaseUrl,omitempty"`
	// EnableOCI specifies whether helm-oci support should be enabled for this repo
	EnableOCI *bool `protobuf:"varint,11,opt,name=enableOCI" json:"enableOCI,omitempty"`
	// Type specifies the type of the repoCreds. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type *string `protobuf:"bytes,12,opt,name=type" json:"type,omitempty"`
}

func (x *RepoCreds) Reset() {
	*x = RepoCreds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoCreds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoCreds) ProtoMessage() {}

func (x *RepoCreds) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoCreds.ProtoReflect.Descriptor instead.
func (*RepoCreds) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{55}
}

func (x *RepoCreds) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *RepoCreds) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *RepoCreds) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *RepoCreds) GetSshPrivateKey() string {
	if x != nil && x.SshPrivateKey != nil {
		return *x.SshPrivateKey
	}
	return ""
}

func (x *RepoCreds) GetTlsClientCertData() string {
	if x != nil && x.TlsClientCertData != nil {
		return *x.TlsClientCertData
	}
	return ""
}

func (x *RepoCreds) GetTlsClientCertKey() string {
	if x != nil && x.TlsClientCertKey != nil {
		return *x.TlsClientCertKey
	}
	return ""
}

func (x *RepoCreds) GetGithubAppPrivateKey() string {
	if x != nil && x.GithubAppPrivateKey != nil {
		return *x.GithubAppPrivateKey
	}
	return ""
}

func (x *RepoCreds) GetGithubAppID() int64 {
	if x != nil && x.GithubAppID != nil {
		return *x.GithubAppID
	}
	return 0
}

func (x *RepoCreds) GetGithubAppInstallationID() int64 {
	if x != nil && x.GithubAppInstallationID != nil {
		return *x.GithubAppInstallationID
	}
	return 0
}

func (x *RepoCreds) GetGithubAppEnterpriseBaseUrl() string {
	if x != nil && x.GithubAppEnterpriseBaseUrl != nil {
		return *x.GithubAppEnterpriseBaseUrl
	}
	return ""
}

func (x *RepoCreds) GetEnableOCI() bool {
	if x != nil && x.EnableOCI != nil {
		return *x.EnableOCI
	}
	return false
}

func (x *RepoCreds) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

// RepositoryList is a collection of Repositories.
type RepoCredsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*RepoCreds `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *RepoCredsList) Reset() {
	*x = RepoCredsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepoCredsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepoCredsList) ProtoMessage() {}

func (x *RepoCredsList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepoCredsList.ProtoReflect.Descriptor instead.
func (*RepoCredsList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{56}
}

func (x *RepoCredsList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RepoCredsList) GetItems() []*RepoCreds {
	if x != nil {
		return x.Items
	}
	return nil
}

// Repository is a repository holding application configurations
type Repository struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Repo contains the URL to the remote repository
	Repo *string `protobuf:"bytes,1,opt,name=repo" json:"repo,omitempty"`
	// Username contains the user name used for authenticating at the remote repository
	Username *string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	// Password contains the password or PAT used for authenticating at the remote repository
	Password *string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	// SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos.
	SshPrivateKey *string `protobuf:"bytes,4,opt,name=sshPrivateKey" json:"sshPrivateKey,omitempty"`
	// ConnectionState contains information about the current state of connection to the repository server
	ConnectionState *ConnectionState `protobuf:"bytes,5,opt,name=connectionState" json:"connectionState,omitempty"`
	// InsecureIgnoreHostKey should not be used anymore, Insecure is favoured
	// Used only for Git repos
	InsecureIgnoreHostKey *bool `protobuf:"varint,6,opt,name=insecureIgnoreHostKey" json:"insecureIgnoreHostKey,omitempty"`
	// Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys
	Insecure *bool `protobuf:"varint,7,opt,name=insecure" json:"insecure,omitempty"`
	// EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories.
	EnableLfs *bool `protobuf:"varint,8,opt,name=enableLfs" json:"enableLfs,omitempty"`
	// TLSClientCertData contains a certificate in PEM format for authenticating at the repo server
	TlsClientCertData *string `protobuf:"bytes,9,opt,name=tlsClientCertData" json:"tlsClientCertData,omitempty"`
	// TLSClientCertKey contains a private key in PEM format for authenticating at the repo server
	TlsClientCertKey *string `protobuf:"bytes,10,opt,name=tlsClientCertKey" json:"tlsClientCertKey,omitempty"`
	// Type specifies the type of the repo. Can be either "git" or "helm. "git" is assumed if empty or absent.
	Type *string `protobuf:"bytes,11,opt,name=type" json:"type,omitempty"`
	// Name specifies a name to be used for this repo. Only used with Helm repos
	Name *string `protobuf:"bytes,12,opt,name=name" json:"name,omitempty"`
	// Whether credentials were inherited from a credential set
	InheritedCreds *bool `protobuf:"varint,13,opt,name=inheritedCreds" json:"inheritedCreds,omitempty"`
	// EnableOCI specifies whether helm-oci support should be enabled for this repo
	EnableOCI *bool `protobuf:"varint,14,opt,name=enableOCI" json:"enableOCI,omitempty"`
	// Github App Private Key PEM data
	GithubAppPrivateKey *string `protobuf:"bytes,15,opt,name=githubAppPrivateKey" json:"githubAppPrivateKey,omitempty"`
	// GithubAppId specifies the ID of the GitHub app used to access the repo
	GithubAppID *int64 `protobuf:"varint,16,opt,name=githubAppID" json:"githubAppID,omitempty"`
	// GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo
	GithubAppInstallationID *int64 `protobuf:"varint,17,opt,name=githubAppInstallationID" json:"githubAppInstallationID,omitempty"`
	// GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com
	GithubAppEnterpriseBaseUrl *string `protobuf:"bytes,18,opt,name=githubAppEnterpriseBaseUrl" json:"githubAppEnterpriseBaseUrl,omitempty"`
	// Proxy specifies the HTTP/HTTPS proxy used to access the repo
	Proxy *string `protobuf:"bytes,19,opt,name=proxy" json:"proxy,omitempty"`
	// Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity
	Project *string `protobuf:"bytes,20,opt,name=project" json:"project,omitempty"`
}

func (x *Repository) Reset() {
	*x = Repository{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Repository) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repository) ProtoMessage() {}

func (x *Repository) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repository.ProtoReflect.Descriptor instead.
func (*Repository) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{57}
}

func (x *Repository) GetRepo() string {
	if x != nil && x.Repo != nil {
		return *x.Repo
	}
	return ""
}

func (x *Repository) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *Repository) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *Repository) GetSshPrivateKey() string {
	if x != nil && x.SshPrivateKey != nil {
		return *x.SshPrivateKey
	}
	return ""
}

func (x *Repository) GetConnectionState() *ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return nil
}

func (x *Repository) GetInsecureIgnoreHostKey() bool {
	if x != nil && x.InsecureIgnoreHostKey != nil {
		return *x.InsecureIgnoreHostKey
	}
	return false
}

func (x *Repository) GetInsecure() bool {
	if x != nil && x.Insecure != nil {
		return *x.Insecure
	}
	return false
}

func (x *Repository) GetEnableLfs() bool {
	if x != nil && x.EnableLfs != nil {
		return *x.EnableLfs
	}
	return false
}

func (x *Repository) GetTlsClientCertData() string {
	if x != nil && x.TlsClientCertData != nil {
		return *x.TlsClientCertData
	}
	return ""
}

func (x *Repository) GetTlsClientCertKey() string {
	if x != nil && x.TlsClientCertKey != nil {
		return *x.TlsClientCertKey
	}
	return ""
}

func (x *Repository) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Repository) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Repository) GetInheritedCreds() bool {
	if x != nil && x.InheritedCreds != nil {
		return *x.InheritedCreds
	}
	return false
}

func (x *Repository) GetEnableOCI() bool {
	if x != nil && x.EnableOCI != nil {
		return *x.EnableOCI
	}
	return false
}

func (x *Repository) GetGithubAppPrivateKey() string {
	if x != nil && x.GithubAppPrivateKey != nil {
		return *x.GithubAppPrivateKey
	}
	return ""
}

func (x *Repository) GetGithubAppID() int64 {
	if x != nil && x.GithubAppID != nil {
		return *x.GithubAppID
	}
	return 0
}

func (x *Repository) GetGithubAppInstallationID() int64 {
	if x != nil && x.GithubAppInstallationID != nil {
		return *x.GithubAppInstallationID
	}
	return 0
}

func (x *Repository) GetGithubAppEnterpriseBaseUrl() string {
	if x != nil && x.GithubAppEnterpriseBaseUrl != nil {
		return *x.GithubAppEnterpriseBaseUrl
	}
	return ""
}

func (x *Repository) GetProxy() string {
	if x != nil && x.Proxy != nil {
		return *x.Proxy
	}
	return ""
}

func (x *Repository) GetProject() string {
	if x != nil && x.Project != nil {
		return *x.Project
	}
	return ""
}

// A RepositoryCertificate is either SSH known hosts entry or TLS certificate
type RepositoryCertificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ServerName specifies the DNS name of the server this certificate is intended for
	ServerName *string `protobuf:"bytes,1,opt,name=serverName" json:"serverName,omitempty"`
	// CertType specifies the type of the certificate - currently one of "https" or "ssh"
	CertType *string `protobuf:"bytes,2,opt,name=certType" json:"certType,omitempty"`
	// CertSubType specifies the sub type of the cert, i.e. "ssh-rsa"
	CertSubType *string `protobuf:"bytes,3,opt,name=certSubType" json:"certSubType,omitempty"`
	// CertData contains the actual certificate data, dependent on the certificate type
	CertData []byte `protobuf:"bytes,4,opt,name=certData" json:"certData,omitempty"`
	// CertInfo will hold additional certificate info, depdendent on the certificate type (e.g. SSH fingerprint, X509 CommonName)
	CertInfo *string `protobuf:"bytes,5,opt,name=certInfo" json:"certInfo,omitempty"`
}

func (x *RepositoryCertificate) Reset() {
	*x = RepositoryCertificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryCertificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryCertificate) ProtoMessage() {}

func (x *RepositoryCertificate) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryCertificate.ProtoReflect.Descriptor instead.
func (*RepositoryCertificate) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{58}
}

func (x *RepositoryCertificate) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *RepositoryCertificate) GetCertType() string {
	if x != nil && x.CertType != nil {
		return *x.CertType
	}
	return ""
}

func (x *RepositoryCertificate) GetCertSubType() string {
	if x != nil && x.CertSubType != nil {
		return *x.CertSubType
	}
	return ""
}

func (x *RepositoryCertificate) GetCertData() []byte {
	if x != nil {
		return x.CertData
	}
	return nil
}

func (x *RepositoryCertificate) GetCertInfo() string {
	if x != nil && x.CertInfo != nil {
		return *x.CertInfo
	}
	return ""
}

// RepositoryCertificateList is a collection of RepositoryCertificates
type RepositoryCertificateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	// List of certificates to be processed
	Items []*RepositoryCertificate `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *RepositoryCertificateList) Reset() {
	*x = RepositoryCertificateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryCertificateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryCertificateList) ProtoMessage() {}

func (x *RepositoryCertificateList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryCertificateList.ProtoReflect.Descriptor instead.
func (*RepositoryCertificateList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{59}
}

func (x *RepositoryCertificateList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RepositoryCertificateList) GetItems() []*RepositoryCertificate {
	if x != nil {
		return x.Items
	}
	return nil
}

// RepositoryList is a collection of Repositories.
type RepositoryList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata *v1.ListMeta  `protobuf:"bytes,1,opt,name=metadata" json:"metadata,omitempty"`
	Items    []*Repository `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
}

func (x *RepositoryList) Reset() {
	*x = RepositoryList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepositoryList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepositoryList) ProtoMessage() {}

func (x *RepositoryList) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepositoryList.ProtoReflect.Descriptor instead.
func (*RepositoryList) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{60}
}

func (x *RepositoryList) GetMetadata() *v1.ListMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *RepositoryList) GetItems() []*Repository {
	if x != nil {
		return x.Items
	}
	return nil
}

// TODO: describe this type
// TODO: describe members of this type
type ResourceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Params   []*ResourceActionParam `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
	Disabled *bool                  `protobuf:"varint,3,opt,name=disabled" json:"disabled,omitempty"`
}

func (x *ResourceAction) Reset() {
	*x = ResourceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceAction) ProtoMessage() {}

func (x *ResourceAction) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceAction.ProtoReflect.Descriptor instead.
func (*ResourceAction) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{61}
}

func (x *ResourceAction) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceAction) GetParams() []*ResourceActionParam {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ResourceAction) GetDisabled() bool {
	if x != nil && x.Disabled != nil {
		return *x.Disabled
	}
	return false
}

// TODO: describe this type
// TODO: describe members of this type
type ResourceActionDefinition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ActionLua *string `protobuf:"bytes,2,opt,name=actionLua" json:"actionLua,omitempty"`
}

func (x *ResourceActionDefinition) Reset() {
	*x = ResourceActionDefinition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActionDefinition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActionDefinition) ProtoMessage() {}

func (x *ResourceActionDefinition) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActionDefinition.ProtoReflect.Descriptor instead.
func (*ResourceActionDefinition) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{62}
}

func (x *ResourceActionDefinition) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceActionDefinition) GetActionLua() string {
	if x != nil && x.ActionLua != nil {
		return *x.ActionLua
	}
	return ""
}

// TODO: describe this type
// TODO: describe members of this type
type ResourceActionParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value   *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Type    *string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
	Default *string `protobuf:"bytes,4,opt,name=default" json:"default,omitempty"`
}

func (x *ResourceActionParam) Reset() {
	*x = ResourceActionParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActionParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActionParam) ProtoMessage() {}

func (x *ResourceActionParam) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActionParam.ProtoReflect.Descriptor instead.
func (*ResourceActionParam) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{63}
}

func (x *ResourceActionParam) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceActionParam) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *ResourceActionParam) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *ResourceActionParam) GetDefault() string {
	if x != nil && x.Default != nil {
		return *x.Default
	}
	return ""
}

// TODO: describe this type
// TODO: describe members of this type
type ResourceActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionDiscoveryLua *string                     `protobuf:"bytes,1,opt,name=actionDiscoveryLua" json:"actionDiscoveryLua,omitempty"`
	Definitions        []*ResourceActionDefinition `protobuf:"bytes,2,rep,name=definitions" json:"definitions,omitempty"`
}

func (x *ResourceActions) Reset() {
	*x = ResourceActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceActions) ProtoMessage() {}

func (x *ResourceActions) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceActions.ProtoReflect.Descriptor instead.
func (*ResourceActions) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{64}
}

func (x *ResourceActions) GetActionDiscoveryLua() string {
	if x != nil && x.ActionDiscoveryLua != nil {
		return *x.ActionDiscoveryLua
	}
	return ""
}

func (x *ResourceActions) GetDefinitions() []*ResourceActionDefinition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

// ResourceDiff holds the diff of a live and target resource object
// TODO: describe members of this type
type ResourceDiff struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Kind      *string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Namespace *string `protobuf:"bytes,3,opt,name=namespace" json:"namespace,omitempty"`
	Name      *string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	// TargetState contains the JSON serialized resource manifest defined in the Git/Helm
	TargetState *string `protobuf:"bytes,5,opt,name=targetState" json:"targetState,omitempty"`
	// TargetState contains the JSON live resource manifest
	LiveState *string `protobuf:"bytes,6,opt,name=liveState" json:"liveState,omitempty"`
	// Diff contains the JSON patch between target and live resource
	// Deprecated: use NormalizedLiveState and PredictedLiveState to render the difference
	Diff *string `protobuf:"bytes,7,opt,name=diff" json:"diff,omitempty"`
	Hook *bool   `protobuf:"varint,8,opt,name=hook" json:"hook,omitempty"`
	// NormalizedLiveState contains JSON serialized live resource state with applied normalizations
	NormalizedLiveState *string `protobuf:"bytes,9,opt,name=normalizedLiveState" json:"normalizedLiveState,omitempty"`
	// PredictedLiveState contains JSON serialized resource state that is calculated based on normalized and target resource state
	PredictedLiveState *string `protobuf:"bytes,10,opt,name=predictedLiveState" json:"predictedLiveState,omitempty"`
	ResourceVersion    *string `protobuf:"bytes,11,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	Modified           *bool   `protobuf:"varint,12,opt,name=modified" json:"modified,omitempty"`
}

func (x *ResourceDiff) Reset() {
	*x = ResourceDiff{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceDiff) ProtoMessage() {}

func (x *ResourceDiff) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceDiff.ProtoReflect.Descriptor instead.
func (*ResourceDiff) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{65}
}

func (x *ResourceDiff) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceDiff) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceDiff) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceDiff) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceDiff) GetTargetState() string {
	if x != nil && x.TargetState != nil {
		return *x.TargetState
	}
	return ""
}

func (x *ResourceDiff) GetLiveState() string {
	if x != nil && x.LiveState != nil {
		return *x.LiveState
	}
	return ""
}

func (x *ResourceDiff) GetDiff() string {
	if x != nil && x.Diff != nil {
		return *x.Diff
	}
	return ""
}

func (x *ResourceDiff) GetHook() bool {
	if x != nil && x.Hook != nil {
		return *x.Hook
	}
	return false
}

func (x *ResourceDiff) GetNormalizedLiveState() string {
	if x != nil && x.NormalizedLiveState != nil {
		return *x.NormalizedLiveState
	}
	return ""
}

func (x *ResourceDiff) GetPredictedLiveState() string {
	if x != nil && x.PredictedLiveState != nil {
		return *x.PredictedLiveState
	}
	return ""
}

func (x *ResourceDiff) GetResourceVersion() string {
	if x != nil && x.ResourceVersion != nil {
		return *x.ResourceVersion
	}
	return ""
}

func (x *ResourceDiff) GetModified() bool {
	if x != nil && x.Modified != nil {
		return *x.Modified
	}
	return false
}

// ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state.
type ResourceIgnoreDifferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group             *string  `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Kind              *string  `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Name              *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Namespace         *string  `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	JsonPointers      []string `protobuf:"bytes,5,rep,name=jsonPointers" json:"jsonPointers,omitempty"`
	JqPathExpressions []string `protobuf:"bytes,6,rep,name=jqPathExpressions" json:"jqPathExpressions,omitempty"`
	// ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the
	// desired state defined in the SCM and won't be displayed in diffs
	ManagedFieldsManagers []string `protobuf:"bytes,7,rep,name=managedFieldsManagers" json:"managedFieldsManagers,omitempty"`
}

func (x *ResourceIgnoreDifferences) Reset() {
	*x = ResourceIgnoreDifferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceIgnoreDifferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceIgnoreDifferences) ProtoMessage() {}

func (x *ResourceIgnoreDifferences) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceIgnoreDifferences.ProtoReflect.Descriptor instead.
func (*ResourceIgnoreDifferences) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{66}
}

func (x *ResourceIgnoreDifferences) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceIgnoreDifferences) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceIgnoreDifferences) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceIgnoreDifferences) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceIgnoreDifferences) GetJsonPointers() []string {
	if x != nil {
		return x.JsonPointers
	}
	return nil
}

func (x *ResourceIgnoreDifferences) GetJqPathExpressions() []string {
	if x != nil {
		return x.JqPathExpressions
	}
	return nil
}

func (x *ResourceIgnoreDifferences) GetManagedFieldsManagers() []string {
	if x != nil {
		return x.ManagedFieldsManagers
	}
	return nil
}

// ResourceNetworkingInfo holds networking resource related information
// TODO: describe members of this type
type ResourceNetworkingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetLabels map[string]string          `protobuf:"bytes,1,rep,name=targetLabels" json:"targetLabels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TargetRefs   []*ResourceRef             `protobuf:"bytes,2,rep,name=targetRefs" json:"targetRefs,omitempty"`
	Labels       map[string]string          `protobuf:"bytes,3,rep,name=labels" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Ingress      []*v11.LoadBalancerIngress `protobuf:"bytes,4,rep,name=ingress" json:"ingress,omitempty"`
	// ExternalURLs holds list of URLs which should be available externally. List is populated for ingress resources using rules hostnames.
	ExternalURLs []string `protobuf:"bytes,5,rep,name=externalURLs" json:"externalURLs,omitempty"`
}

func (x *ResourceNetworkingInfo) Reset() {
	*x = ResourceNetworkingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNetworkingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNetworkingInfo) ProtoMessage() {}

func (x *ResourceNetworkingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNetworkingInfo.ProtoReflect.Descriptor instead.
func (*ResourceNetworkingInfo) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{67}
}

func (x *ResourceNetworkingInfo) GetTargetLabels() map[string]string {
	if x != nil {
		return x.TargetLabels
	}
	return nil
}

func (x *ResourceNetworkingInfo) GetTargetRefs() []*ResourceRef {
	if x != nil {
		return x.TargetRefs
	}
	return nil
}

func (x *ResourceNetworkingInfo) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ResourceNetworkingInfo) GetIngress() []*v11.LoadBalancerIngress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

func (x *ResourceNetworkingInfo) GetExternalURLs() []string {
	if x != nil {
		return x.ExternalURLs
	}
	return nil
}

// ResourceNode contains information about live resource and its children
// TODO: describe members of this type
type ResourceNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResourceRef     *ResourceRef            `protobuf:"bytes,1,opt,name=resourceRef" json:"resourceRef,omitempty"`
	ParentRefs      []*ResourceRef          `protobuf:"bytes,2,rep,name=parentRefs" json:"parentRefs,omitempty"`
	Info            []*InfoItem             `protobuf:"bytes,3,rep,name=info" json:"info,omitempty"`
	NetworkingInfo  *ResourceNetworkingInfo `protobuf:"bytes,4,opt,name=networkingInfo" json:"networkingInfo,omitempty"`
	ResourceVersion *string                 `protobuf:"bytes,5,opt,name=resourceVersion" json:"resourceVersion,omitempty"`
	Images          []string                `protobuf:"bytes,6,rep,name=images" json:"images,omitempty"`
	Health          *HealthStatus           `protobuf:"bytes,7,opt,name=health" json:"health,omitempty"`
	CreatedAt       *v1.Time                `protobuf:"bytes,8,opt,name=createdAt" json:"createdAt,omitempty"`
}

func (x *ResourceNode) Reset() {
	*x = ResourceNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceNode) ProtoMessage() {}

func (x *ResourceNode) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceNode.ProtoReflect.Descriptor instead.
func (*ResourceNode) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{68}
}

func (x *ResourceNode) GetResourceRef() *ResourceRef {
	if x != nil {
		return x.ResourceRef
	}
	return nil
}

func (x *ResourceNode) GetParentRefs() []*ResourceRef {
	if x != nil {
		return x.ParentRefs
	}
	return nil
}

func (x *ResourceNode) GetInfo() []*InfoItem {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ResourceNode) GetNetworkingInfo() *ResourceNetworkingInfo {
	if x != nil {
		return x.NetworkingInfo
	}
	return nil
}

func (x *ResourceNode) GetResourceVersion() string {
	if x != nil && x.ResourceVersion != nil {
		return *x.ResourceVersion
	}
	return ""
}

func (x *ResourceNode) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *ResourceNode) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ResourceNode) GetCreatedAt() *v1.Time {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// ResourceOverride holds configuration to customize resource diffing and health assessment
// TODO: describe the members of this type
type ResourceOverride struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HealthLua         *string             `protobuf:"bytes,1,opt,name=healthLua" json:"healthLua,omitempty"`
	UseOpenLibs       *bool               `protobuf:"varint,5,opt,name=useOpenLibs" json:"useOpenLibs,omitempty"`
	Actions           *string             `protobuf:"bytes,3,opt,name=actions" json:"actions,omitempty"`
	IgnoreDifferences *OverrideIgnoreDiff `protobuf:"bytes,2,opt,name=ignoreDifferences" json:"ignoreDifferences,omitempty"`
	KnownTypeFields   []*KnownTypeField   `protobuf:"bytes,4,rep,name=knownTypeFields" json:"knownTypeFields,omitempty"`
}

func (x *ResourceOverride) Reset() {
	*x = ResourceOverride{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceOverride) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceOverride) ProtoMessage() {}

func (x *ResourceOverride) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceOverride.ProtoReflect.Descriptor instead.
func (*ResourceOverride) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{69}
}

func (x *ResourceOverride) GetHealthLua() string {
	if x != nil && x.HealthLua != nil {
		return *x.HealthLua
	}
	return ""
}

func (x *ResourceOverride) GetUseOpenLibs() bool {
	if x != nil && x.UseOpenLibs != nil {
		return *x.UseOpenLibs
	}
	return false
}

func (x *ResourceOverride) GetActions() string {
	if x != nil && x.Actions != nil {
		return *x.Actions
	}
	return ""
}

func (x *ResourceOverride) GetIgnoreDifferences() *OverrideIgnoreDiff {
	if x != nil {
		return x.IgnoreDifferences
	}
	return nil
}

func (x *ResourceOverride) GetKnownTypeFields() []*KnownTypeField {
	if x != nil {
		return x.KnownTypeFields
	}
	return nil
}

// ResourceRef includes fields which uniquely identify a resource
type ResourceRef struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Version   *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Kind      *string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	Namespace *string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	Name      *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Uid       *string `protobuf:"bytes,6,opt,name=uid" json:"uid,omitempty"`
}

func (x *ResourceRef) Reset() {
	*x = ResourceRef{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRef) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRef) ProtoMessage() {}

func (x *ResourceRef) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRef.ProtoReflect.Descriptor instead.
func (*ResourceRef) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{70}
}

func (x *ResourceRef) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceRef) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ResourceRef) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceRef) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceRef) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceRef) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

// ResourceResult holds the operation result details of a specific resource
type ResourceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Group specifies the API group of the resource
	Group *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	// Version specifies the API version of the resource
	Version *string `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	// Kind specifies the API kind of the resource
	Kind *string `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	// Namespace specifies the target namespace of the resource
	Namespace *string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	// Name specifies the name of the resource
	Name *string `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	// Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks
	Status *string `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	// Message contains an informational or error message for the last sync OR operation
	Message *string `protobuf:"bytes,7,opt,name=message" json:"message,omitempty"`
	// HookType specifies the type of the hook. Empty for non-hook resources
	HookType *string `protobuf:"bytes,8,opt,name=hookType" json:"hookType,omitempty"`
	// HookPhase contains the state of any operation associated with this resource OR hook
	// This can also contain values for non-hook resources.
	HookPhase *string `protobuf:"bytes,9,opt,name=hookPhase" json:"hookPhase,omitempty"`
	// SyncPhase indicates the particular phase of the sync that this result was acquired in
	SyncPhase *string `protobuf:"bytes,10,opt,name=syncPhase" json:"syncPhase,omitempty"`
}

func (x *ResourceResult) Reset() {
	*x = ResourceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceResult) ProtoMessage() {}

func (x *ResourceResult) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceResult.ProtoReflect.Descriptor instead.
func (*ResourceResult) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{71}
}

func (x *ResourceResult) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceResult) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ResourceResult) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceResult) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceResult) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceResult) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ResourceResult) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *ResourceResult) GetHookType() string {
	if x != nil && x.HookType != nil {
		return *x.HookType
	}
	return ""
}

func (x *ResourceResult) GetHookPhase() string {
	if x != nil && x.HookPhase != nil {
		return *x.HookPhase
	}
	return ""
}

func (x *ResourceResult) GetSyncPhase() string {
	if x != nil && x.SyncPhase != nil {
		return *x.SyncPhase
	}
	return ""
}

// ResourceStatus holds the current sync and health status of a resource
// TODO: describe members of this type
type ResourceStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group           *string       `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Version         *string       `protobuf:"bytes,2,opt,name=version" json:"version,omitempty"`
	Kind            *string       `protobuf:"bytes,3,opt,name=kind" json:"kind,omitempty"`
	Namespace       *string       `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
	Name            *string       `protobuf:"bytes,5,opt,name=name" json:"name,omitempty"`
	Status          *string       `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	Health          *HealthStatus `protobuf:"bytes,7,opt,name=health" json:"health,omitempty"`
	Hook            *bool         `protobuf:"varint,8,opt,name=hook" json:"hook,omitempty"`
	RequiresPruning *bool         `protobuf:"varint,9,opt,name=requiresPruning" json:"requiresPruning,omitempty"`
}

func (x *ResourceStatus) Reset() {
	*x = ResourceStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStatus) ProtoMessage() {}

func (x *ResourceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStatus.ProtoReflect.Descriptor instead.
func (*ResourceStatus) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{72}
}

func (x *ResourceStatus) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *ResourceStatus) GetVersion() string {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return ""
}

func (x *ResourceStatus) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *ResourceStatus) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

func (x *ResourceStatus) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ResourceStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ResourceStatus) GetHealth() *HealthStatus {
	if x != nil {
		return x.Health
	}
	return nil
}

func (x *ResourceStatus) GetHook() bool {
	if x != nil && x.Hook != nil {
		return *x.Hook
	}
	return false
}

func (x *ResourceStatus) GetRequiresPruning() bool {
	if x != nil && x.RequiresPruning != nil {
		return *x.RequiresPruning
	}
	return false
}

// RetryStrategy contains information about the strategy to apply when a sync failed
type RetryStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed.
	Limit *int64 `protobuf:"varint,1,opt,name=limit" json:"limit,omitempty"`
	// Backoff controls how to backoff on subsequent retries of failed syncs
	Backoff *Backoff `protobuf:"bytes,2,opt,name=backoff" json:"backoff,omitempty"`
}

func (x *RetryStrategy) Reset() {
	*x = RetryStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryStrategy) ProtoMessage() {}

func (x *RetryStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryStrategy.ProtoReflect.Descriptor instead.
func (*RetryStrategy) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{73}
}

func (x *RetryStrategy) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *RetryStrategy) GetBackoff() *Backoff {
	if x != nil {
		return x.Backoff
	}
	return nil
}

// RevisionHistory contains history information about a previous sync
type RevisionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Revision holds the revision the sync was performed against
	Revision *string `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	// DeployedAt holds the time the sync operation completed
	DeployedAt *v1.Time `protobuf:"bytes,4,opt,name=deployedAt" json:"deployedAt,omitempty"`
	// ID is an auto incrementing identifier of the RevisionHistory
	Id *int64 `protobuf:"varint,5,opt,name=id" json:"id,omitempty"`
	// Source is a reference to the application source used for the sync operation
	Source *ApplicationSource `protobuf:"bytes,6,opt,name=source" json:"source,omitempty"`
	// DeployStartedAt holds the time the sync operation started
	DeployStartedAt *v1.Time `protobuf:"bytes,7,opt,name=deployStartedAt" json:"deployStartedAt,omitempty"`
}

func (x *RevisionHistory) Reset() {
	*x = RevisionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevisionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionHistory) ProtoMessage() {}

func (x *RevisionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionHistory.ProtoReflect.Descriptor instead.
func (*RevisionHistory) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{74}
}

func (x *RevisionHistory) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *RevisionHistory) GetDeployedAt() *v1.Time {
	if x != nil {
		return x.DeployedAt
	}
	return nil
}

func (x *RevisionHistory) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *RevisionHistory) GetSource() *ApplicationSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *RevisionHistory) GetDeployStartedAt() *v1.Time {
	if x != nil {
		return x.DeployStartedAt
	}
	return nil
}

// RevisionMetadata contains metadata for a specific revision in a Git repository
type RevisionMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// who authored this revision,
	// typically their name and email, e.g. "John Doe <john_doe@my-company.com>",
	// but might not match this example
	Author *string `protobuf:"bytes,1,opt,name=author" json:"author,omitempty"`
	// Date specifies when the revision was authored
	Date *v1.Time `protobuf:"bytes,2,opt,name=date" json:"date,omitempty"`
	// Tags specifies any tags currently attached to the revision
	// Floating tags can move from one revision to another
	Tags []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
	// Message contains the message associated with the revision, most likely the commit message.
	// The message is truncated to the first newline or 64 characters (which ever comes first)
	Message *string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	// SignatureInfo contains a hint on the signer if the revision was signed with GPG, and signature verification is enabled.
	SignatureInfo *string `protobuf:"bytes,5,opt,name=signatureInfo" json:"signatureInfo,omitempty"`
}

func (x *RevisionMetadata) Reset() {
	*x = RevisionMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevisionMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevisionMetadata) ProtoMessage() {}

func (x *RevisionMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevisionMetadata.ProtoReflect.Descriptor instead.
func (*RevisionMetadata) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{75}
}

func (x *RevisionMetadata) GetAuthor() string {
	if x != nil && x.Author != nil {
		return *x.Author
	}
	return ""
}

func (x *RevisionMetadata) GetDate() *v1.Time {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *RevisionMetadata) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RevisionMetadata) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *RevisionMetadata) GetSignatureInfo() string {
	if x != nil && x.SignatureInfo != nil {
		return *x.SignatureInfo
	}
	return ""
}

// SignatureKey is the specification of a key required to verify commit signatures with
type SignatureKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the key in hexadecimal notation
	KeyID *string `protobuf:"bytes,1,opt,name=keyID" json:"keyID,omitempty"`
}

func (x *SignatureKey) Reset() {
	*x = SignatureKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureKey) ProtoMessage() {}

func (x *SignatureKey) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureKey.ProtoReflect.Descriptor instead.
func (*SignatureKey) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{76}
}

func (x *SignatureKey) GetKeyID() string {
	if x != nil && x.KeyID != nil {
		return *x.KeyID
	}
	return ""
}

// SyncOperation contains details about a sync operation.
type SyncOperation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Revision is the revision (Git) or chart version (Helm) which to sync the application to
	// If omitted, will use the revision specified in app spec.
	Revision *string `protobuf:"bytes,1,opt,name=revision" json:"revision,omitempty"`
	// Prune specifies to delete resources from the cluster that are no longer tracked in git
	Prune *bool `protobuf:"varint,2,opt,name=prune" json:"prune,omitempty"`
	// DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync
	DryRun *bool `protobuf:"varint,3,opt,name=dryRun" json:"dryRun,omitempty"`
	// SyncStrategy describes how to perform the sync
	SyncStrategy *SyncStrategy `protobuf:"bytes,4,opt,name=syncStrategy" json:"syncStrategy,omitempty"`
	// Resources describes which resources shall be part of the sync
	Resources []*SyncOperationResource `protobuf:"bytes,6,rep,name=resources" json:"resources,omitempty"`
	// Source overrides the source definition set in the application.
	// This is typically set in a Rollback operation and is nil during a Sync operation
	Source *ApplicationSource `protobuf:"bytes,7,opt,name=source" json:"source,omitempty"`
	// Manifests is an optional field that overrides sync source with a local directory for development
	Manifests []string `protobuf:"bytes,8,rep,name=manifests" json:"manifests,omitempty"`
	// SyncOptions provide per-sync sync-options, e.g. Validate=false
	SyncOptions []string `protobuf:"bytes,9,rep,name=syncOptions" json:"syncOptions,omitempty"`
}

func (x *SyncOperation) Reset() {
	*x = SyncOperation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperation) ProtoMessage() {}

func (x *SyncOperation) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperation.ProtoReflect.Descriptor instead.
func (*SyncOperation) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{77}
}

func (x *SyncOperation) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *SyncOperation) GetPrune() bool {
	if x != nil && x.Prune != nil {
		return *x.Prune
	}
	return false
}

func (x *SyncOperation) GetDryRun() bool {
	if x != nil && x.DryRun != nil {
		return *x.DryRun
	}
	return false
}

func (x *SyncOperation) GetSyncStrategy() *SyncStrategy {
	if x != nil {
		return x.SyncStrategy
	}
	return nil
}

func (x *SyncOperation) GetResources() []*SyncOperationResource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *SyncOperation) GetSource() *ApplicationSource {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *SyncOperation) GetManifests() []string {
	if x != nil {
		return x.Manifests
	}
	return nil
}

func (x *SyncOperation) GetSyncOptions() []string {
	if x != nil {
		return x.SyncOptions
	}
	return nil
}

// SyncOperationResource contains resources to sync.
type SyncOperationResource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group     *string `protobuf:"bytes,1,opt,name=group" json:"group,omitempty"`
	Kind      *string `protobuf:"bytes,2,opt,name=kind" json:"kind,omitempty"`
	Name      *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Namespace *string `protobuf:"bytes,4,opt,name=namespace" json:"namespace,omitempty"`
}

func (x *SyncOperationResource) Reset() {
	*x = SyncOperationResource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperationResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationResource) ProtoMessage() {}

func (x *SyncOperationResource) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationResource.ProtoReflect.Descriptor instead.
func (*SyncOperationResource) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{78}
}

func (x *SyncOperationResource) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

func (x *SyncOperationResource) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *SyncOperationResource) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SyncOperationResource) GetNamespace() string {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return ""
}

// SyncOperationResult represent result of sync operation
type SyncOperationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Resources contains a list of sync result items for each individual resource in a sync operation
	Resources []*ResourceResult `protobuf:"bytes,1,rep,name=resources" json:"resources,omitempty"`
	// Revision holds the revision this sync operation was performed to
	Revision *string `protobuf:"bytes,2,opt,name=revision" json:"revision,omitempty"`
	// Source records the application source information of the sync, used for comparing auto-sync
	Source *ApplicationSource `protobuf:"bytes,3,opt,name=source" json:"source,omitempty"`
}

func (x *SyncOperationResult) Reset() {
	*x = SyncOperationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperationResult) ProtoMessage() {}

func (x *SyncOperationResult) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperationResult.ProtoReflect.Descriptor instead.
func (*SyncOperationResult) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{79}
}

func (x *SyncOperationResult) GetResources() []*ResourceResult {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *SyncOperationResult) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

func (x *SyncOperationResult) GetSource() *ApplicationSource {
	if x != nil {
		return x.Source
	}
	return nil
}

// SyncPolicy controls when a sync will be performed in response to updates in git
type SyncPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Automated will keep an application synced to the target revision
	Automated *SyncPolicyAutomated `protobuf:"bytes,1,opt,name=automated" json:"automated,omitempty"`
	// Options allow you to specify whole app sync-options
	SyncOptions []string `protobuf:"bytes,2,rep,name=syncOptions" json:"syncOptions,omitempty"`
	// Retry controls failed sync retry behavior
	Retry *RetryStrategy `protobuf:"bytes,3,opt,name=retry" json:"retry,omitempty"`
}

func (x *SyncPolicy) Reset() {
	*x = SyncPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPolicy) ProtoMessage() {}

func (x *SyncPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPolicy.ProtoReflect.Descriptor instead.
func (*SyncPolicy) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{80}
}

func (x *SyncPolicy) GetAutomated() *SyncPolicyAutomated {
	if x != nil {
		return x.Automated
	}
	return nil
}

func (x *SyncPolicy) GetSyncOptions() []string {
	if x != nil {
		return x.SyncOptions
	}
	return nil
}

func (x *SyncPolicy) GetRetry() *RetryStrategy {
	if x != nil {
		return x.Retry
	}
	return nil
}

// SyncPolicyAutomated controls the behavior of an automated sync
type SyncPolicyAutomated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)
	Prune *bool `protobuf:"varint,1,opt,name=prune" json:"prune,omitempty"`
	// SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)
	SelfHeal *bool `protobuf:"varint,2,opt,name=selfHeal" json:"selfHeal,omitempty"`
	// AllowEmpty allows apps have zero live resources (default: false)
	AllowEmpty *bool `protobuf:"varint,3,opt,name=allowEmpty" json:"allowEmpty,omitempty"`
}

func (x *SyncPolicyAutomated) Reset() {
	*x = SyncPolicyAutomated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncPolicyAutomated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncPolicyAutomated) ProtoMessage() {}

func (x *SyncPolicyAutomated) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncPolicyAutomated.ProtoReflect.Descriptor instead.
func (*SyncPolicyAutomated) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{81}
}

func (x *SyncPolicyAutomated) GetPrune() bool {
	if x != nil && x.Prune != nil {
		return *x.Prune
	}
	return false
}

func (x *SyncPolicyAutomated) GetSelfHeal() bool {
	if x != nil && x.SelfHeal != nil {
		return *x.SelfHeal
	}
	return false
}

func (x *SyncPolicyAutomated) GetAllowEmpty() bool {
	if x != nil && x.AllowEmpty != nil {
		return *x.AllowEmpty
	}
	return false
}

// SyncStatus contains information about the currently observed live and desired states of an application
type SyncStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status is the sync state of the comparison
	Status *string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	// ComparedTo contains information about what has been compared
	ComparedTo *ComparedTo `protobuf:"bytes,2,opt,name=comparedTo" json:"comparedTo,omitempty"`
	// Revision contains information about the revision the comparison has been performed to
	Revision *string `protobuf:"bytes,3,opt,name=revision" json:"revision,omitempty"`
}

func (x *SyncStatus) Reset() {
	*x = SyncStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStatus) ProtoMessage() {}

func (x *SyncStatus) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStatus.ProtoReflect.Descriptor instead.
func (*SyncStatus) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{82}
}

func (x *SyncStatus) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *SyncStatus) GetComparedTo() *ComparedTo {
	if x != nil {
		return x.ComparedTo
	}
	return nil
}

func (x *SyncStatus) GetRevision() string {
	if x != nil && x.Revision != nil {
		return *x.Revision
	}
	return ""
}

// SyncStrategy controls the manner in which a sync is performed
type SyncStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Apply will perform a `kubectl apply` to perform the sync.
	Apply *SyncStrategyApply `protobuf:"bytes,1,opt,name=apply" json:"apply,omitempty"`
	// Hook will submit any referenced resources to perform the sync. This is the default strategy
	Hook *SyncStrategyHook `protobuf:"bytes,2,opt,name=hook" json:"hook,omitempty"`
}

func (x *SyncStrategy) Reset() {
	*x = SyncStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategy) ProtoMessage() {}

func (x *SyncStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategy.ProtoReflect.Descriptor instead.
func (*SyncStrategy) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{83}
}

func (x *SyncStrategy) GetApply() *SyncStrategyApply {
	if x != nil {
		return x.Apply
	}
	return nil
}

func (x *SyncStrategy) GetHook() *SyncStrategyHook {
	if x != nil {
		return x.Hook
	}
	return nil
}

// SyncStrategyApply uses `kubectl apply` to perform the apply
type SyncStrategyApply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Force indicates whether or not to supply the --force flag to `kubectl apply`.
	// The --force flag deletes and re-create the resource, when PATCH encounters conflict and has
	// retried for 5 times.
	Force *bool `protobuf:"varint,1,opt,name=force" json:"force,omitempty"`
}

func (x *SyncStrategyApply) Reset() {
	*x = SyncStrategyApply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategyApply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategyApply) ProtoMessage() {}

func (x *SyncStrategyApply) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategyApply.ProtoReflect.Descriptor instead.
func (*SyncStrategyApply) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{84}
}

func (x *SyncStrategyApply) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

// SyncStrategyHook will perform a sync using hooks annotations.
// If no hook annotation is specified falls back to `kubectl apply`.
type SyncStrategyHook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Embed SyncStrategyApply type to inherit any `apply` options
	// +optional
	SyncStrategyApply *SyncStrategyApply `protobuf:"bytes,1,opt,name=syncStrategyApply" json:"syncStrategyApply,omitempty"`
}

func (x *SyncStrategyHook) Reset() {
	*x = SyncStrategyHook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncStrategyHook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncStrategyHook) ProtoMessage() {}

func (x *SyncStrategyHook) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncStrategyHook.ProtoReflect.Descriptor instead.
func (*SyncStrategyHook) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{85}
}

func (x *SyncStrategyHook) GetSyncStrategyApply() *SyncStrategyApply {
	if x != nil {
		return x.SyncStrategyApply
	}
	return nil
}

// SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps
type SyncWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kind defines if the window allows or blocks syncs
	Kind *string `protobuf:"bytes,1,opt,name=kind" json:"kind,omitempty"`
	// Schedule is the time the window will begin, specified in cron format
	Schedule *string `protobuf:"bytes,2,opt,name=schedule" json:"schedule,omitempty"`
	// Duration is the amount of time the sync window will be open
	Duration *string `protobuf:"bytes,3,opt,name=duration" json:"duration,omitempty"`
	// Applications contains a list of applications that the window will apply to
	Applications []string `protobuf:"bytes,4,rep,name=applications" json:"applications,omitempty"`
	// Namespaces contains a list of namespaces that the window will apply to
	Namespaces []string `protobuf:"bytes,5,rep,name=namespaces" json:"namespaces,omitempty"`
	// Clusters contains a list of clusters that the window will apply to
	Clusters []string `protobuf:"bytes,6,rep,name=clusters" json:"clusters,omitempty"`
	// ManualSync enables manual syncs when they would otherwise be blocked
	ManualSync *bool `protobuf:"varint,7,opt,name=manualSync" json:"manualSync,omitempty"`
	// TimeZone of the sync that will be applied to the schedule
	TimeZone *string `protobuf:"bytes,8,opt,name=timeZone" json:"timeZone,omitempty"`
}

func (x *SyncWindow) Reset() {
	*x = SyncWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncWindow) ProtoMessage() {}

func (x *SyncWindow) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncWindow.ProtoReflect.Descriptor instead.
func (*SyncWindow) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{86}
}

func (x *SyncWindow) GetKind() string {
	if x != nil && x.Kind != nil {
		return *x.Kind
	}
	return ""
}

func (x *SyncWindow) GetSchedule() string {
	if x != nil && x.Schedule != nil {
		return *x.Schedule
	}
	return ""
}

func (x *SyncWindow) GetDuration() string {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return ""
}

func (x *SyncWindow) GetApplications() []string {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *SyncWindow) GetNamespaces() []string {
	if x != nil {
		return x.Namespaces
	}
	return nil
}

func (x *SyncWindow) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

func (x *SyncWindow) GetManualSync() bool {
	if x != nil && x.ManualSync != nil {
		return *x.ManualSync
	}
	return false
}

func (x *SyncWindow) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

// TLSClientConfig contains settings to enable transport layer security
type TLSClientConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Insecure specifies that the server should be accessed without verifying the TLS certificate. For testing only.
	Insecure *bool `protobuf:"varint,1,opt,name=insecure" json:"insecure,omitempty"`
	// ServerName is passed to the server for SNI and is used in the client to check server
	// certificates against. If ServerName is empty, the hostname used to contact the
	// server is used.
	ServerName *string `protobuf:"bytes,2,opt,name=serverName" json:"serverName,omitempty"`
	// CertData holds PEM-encoded bytes (typically read from a client certificate file).
	// CertData takes precedence over CertFile
	CertData []byte `protobuf:"bytes,3,opt,name=certData" json:"certData,omitempty"`
	// KeyData holds PEM-encoded bytes (typically read from a client certificate key file).
	// KeyData takes precedence over KeyFile
	KeyData []byte `protobuf:"bytes,4,opt,name=keyData" json:"keyData,omitempty"`
	// CAData holds PEM-encoded bytes (typically read from a root certificates bundle).
	// CAData takes precedence over CAFile
	CaData []byte `protobuf:"bytes,5,opt,name=caData" json:"caData,omitempty"`
}

func (x *TLSClientConfig) Reset() {
	*x = TLSClientConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TLSClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSClientConfig) ProtoMessage() {}

func (x *TLSClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apis_application_v1alpha1_generated_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSClientConfig.ProtoReflect.Descriptor instead.
func (*TLSClientConfig) Descriptor() ([]byte, []int) {
	return file_apis_application_v1alpha1_generated_proto_rawDescGZIP(), []int{87}
}

func (x *TLSClientConfig) GetInsecure() bool {
	if x != nil && x.Insecure != nil {
		return *x.Insecure
	}
	return false
}

func (x *TLSClientConfig) GetServerName() string {
	if x != nil && x.ServerName != nil {
		return *x.ServerName
	}
	return ""
}

func (x *TLSClientConfig) GetCertData() []byte {
	if x != nil {
		return x.CertData
	}
	return nil
}

func (x *TLSClientConfig) GetKeyData() []byte {
	if x != nil {
		return x.KeyData
	}
	return nil
}

func (x *TLSClientConfig) GetCaData() []byte {
	if x != nil {
		return x.CaData
	}
	return nil
}

var File_apis_application_v1alpha1_generated_proto protoreflect.FileDescriptor

var file_apis_application_v1alpha1_generated_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x22, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x34, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2f, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x36, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69,
	0x6d, 0x65, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x0d, 0x41, 0x57, 0x53,
	0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x6f, 0x6c, 0x65, 0x41, 0x52, 0x4e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x41, 0x52, 0x4e, 0x22, 0xde, 0x01, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70,
	0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x43, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xa8, 0x07, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x70, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x12, 0x55, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3c, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12,
	0x6b, 0x0a, 0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69,
	0x6e, 0x64, 0x52, 0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1a,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4b, 0x69, 0x6e,
	0x64, 0x52, 0x1a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x69, 0x0a,
	0x11, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x11, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x73, 0x12, 0x6f, 0x0a, 0x1a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61,
	0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x1a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x57, 0x68, 0x69, 0x74, 0x65, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x12, 0x6b, 0x0a, 0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4b, 0x69, 0x6e, 0x64, 0x52, 0x18, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x6c, 0x61, 0x63, 0x6b, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xe8,
	0x01, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x6a, 0x0a, 0x0f, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f,
	0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x1a,
	0x68, 0x0a, 0x14, 0x4a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x02, 0x0a, 0x0b, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6b, 0x38,
	0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72,
	0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x42, 0x0a,
	0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x5a, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x62, 0x0a, 0x16, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbb, 0x03, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x04, 0x68, 0x65, 0x6c, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x65,
	0x6c, 0x6d, 0x52, 0x04, 0x68, 0x65, 0x6c, 0x6d, 0x12, 0x53, 0x0a, 0x09, 0x6b, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69,
	0x7a, 0x65, 0x52, 0x09, 0x6b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x53, 0x0a,
	0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x4a, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x52, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x61, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x68, 0x61, 0x72, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4a, 0x73, 0x6f, 0x6e,
	0x6e, 0x65, 0x74, 0x52, 0x07, 0x6a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x22, 0xab, 0x03, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x65, 0x6c, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x54,
	0x0a, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x48, 0x65, 0x6c, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x52, 0x0e, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x72, 0x64, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x6b, 0x69, 0x70, 0x43, 0x72, 0x64, 0x73, 0x22, 0xaa,
	0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x12, 0x3f, 0x0a, 0x07, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74,
	0x56, 0x61, 0x72, 0x52, 0x07, 0x65, 0x78, 0x74, 0x56, 0x61, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x04,
	0x74, 0x6c, 0x61, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74, 0x56, 0x61,
	0x72, 0x52, 0x04, 0x74, 0x6c, 0x61, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x62, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x62, 0x73, 0x22, 0xe4, 0x04, 0x0a, 0x1a,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61,
	0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x53, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x6b, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x7a, 0x0a, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3f, 0x0a, 0x11, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x44, 0x0a, 0x16,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x64, 0x0a, 0x17, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x6e, 0x76, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x22, 0xda, 0x03, 0x0a, 0x0f, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x12, 0x44, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x45, 0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x0a, 0x73, 0x79,
	0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x62, 0x0a, 0x11, 0x69, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69,
	0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72,
	0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x14, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xc7, 0x05, 0x0a, 0x11, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x12,
	0x3f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x12, 0x44, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4f, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4e, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x51, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x6f, 0x62,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x6f, 0x62, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22,
	0x50, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x72, 0x65, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x6f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48,
	0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x6f, 0x73, 0x74, 0x73, 0x22, 0x75,
	0x0a, 0x15, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x06, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x54, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x5a, 0x0a, 0x12,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x12, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x46, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x55, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x70, 0x69, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x70, 0x69, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x58, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x11, 0x6c, 0x61,
	0x73, 0x74, 0x43, 0x61, 0x63, 0x68, 0x65, 0x53, 0x79, 0x6e, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0xee, 0x02, 0x0a, 0x0d, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x54, 0x0a, 0x0f, 0x74,
	0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0f, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x4e, 0x0a, 0x0d, 0x61, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x57, 0x53, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0d, 0x61, 0x77, 0x73, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x5d, 0x0a, 0x12, 0x65, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x65, 0x78,
	0x65, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0xa4, 0x02, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x54, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x09,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x43, 0x61, 0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x61,
	0x63, 0x68, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e,
	0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x37, 0x0a,
	0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x72, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x53, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x5c, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xc0,
	0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x34, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x86, 0x02, 0x0a, 0x12,
	0x45, 0x78, 0x65, 0x63, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x12, 0x48, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e, 0x76,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x48, 0x69, 0x6e, 0x74, 0x1a, 0x36, 0x0a, 0x08,
	0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa8, 0x01, 0x0a, 0x0e, 0x47, 0x6e, 0x75, 0x50, 0x47, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xa1, 0x01, 0x0a, 0x12, 0x47, 0x6e, 0x75, 0x50, 0x47, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x6e,
	0x75, 0x50, 0x47, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x48, 0x65, 0x6c, 0x6d, 0x46, 0x69, 0x6c,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x3b, 0x0a, 0x0b, 0x48, 0x65, 0x6c, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2c, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x73, 0x22,
	0x5b, 0x0a, 0x0d, 0x48, 0x65, 0x6c, 0x6d, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0xb5, 0x01, 0x0a,
	0x08, 0x48, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x42, 0x0a, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xae, 0x01, 0x0a, 0x10, 0x48, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79, 0x41, 0x70, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x14, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x4e, 0x65, 0x69, 0x67, 0x68, 0x62, 0x6f, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x61, 0x70,
	0x61, 0x63, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x34, 0x0a, 0x08, 0x49, 0x6e, 0x66, 0x6f, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3e, 0x0a,
	0x08, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x69, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a,
	0x09, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x0a, 0x4a, 0x73, 0x6f, 0x6e, 0x6e, 0x65, 0x74,
	0x56, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0x3a, 0x0a, 0x0e, 0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a,
	0x10, 0x4b, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x69, 0x7a, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x6e, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x74, 0x68, 0x22, 0x8f, 0x02, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x04, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79,
	0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x73, 0x79, 0x6e,
	0x63, 0x12, 0x4f, 0x0a, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x0b, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x52, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x12, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x74,
	0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x22, 0x8a, 0x03, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x68, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4e,
	0x0a, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x0a, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x48,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b,
	0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x13, 0x4f, 0x72, 0x70, 0x68, 0x61, 0x6e, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x20, 0x4f, 0x72, 0x70,
	0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x77, 0x61, 0x72, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x72,
	0x6e, 0x12, 0x46, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x72,
	0x70, 0x68, 0x61, 0x6e, 0x65, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4b, 0x65,
	0x79, 0x52, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x12, 0x4f, 0x76,
	0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66,
	0x12, 0x22, 0x0a, 0x0c, 0x6a, 0x53, 0x4f, 0x4e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x6a, 0x53, 0x4f, 0x4e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x22, 0xba, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x09, 0x6a, 0x77,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x09, 0x6a, 0x77, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xd5, 0x03, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x72,
	0x65, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6c, 0x73,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x17, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x1a, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x43, 0x49, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x43, 0x49, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x97, 0x01,
	0x0a, 0x0d, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x72, 0x65, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x43, 0x72, 0x65, 0x64, 0x73,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8a, 0x06, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x73, 0x68, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x54, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x34,
	0x0a, 0x15, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x48, 0x6f, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69,
	0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x48, 0x6f, 0x73,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x66, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x66, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x6c, 0x73, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10,
	0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6c, 0x73, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x43, 0x65, 0x72, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x65, 0x64, 0x43, 0x72, 0x65,
	0x64, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69,
	0x74, 0x65, 0x64, 0x43, 0x72, 0x65, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x43, 0x49, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x43, 0x49, 0x12, 0x30, 0x0a, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x41, 0x70, 0x70, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x44, 0x12, 0x3e, 0x0a, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x41, 0x70,
	0x70, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x41, 0x70, 0x70, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x42, 0x61, 0x73,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x65,
	0x72, 0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x65, 0x72, 0x74, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xaf, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70,
	0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x46,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x6f, 0x72, 0x79, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x99, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6b, 0x38,
	0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72,
	0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x4c, 0x0a,
	0x18, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x75, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x75, 0x61, 0x22, 0x6d, 0x0a, 0x13, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x0f, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2e,
	0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x4c, 0x75, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4c, 0x75, 0x61, 0x12, 0x55,
	0x0a, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x44, 0x69, 0x66, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x69, 0x66, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x12, 0x30, 0x0a, 0x13, 0x6e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x12,
	0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63,
	0x74, 0x65, 0x64, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x22, 0xff, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0c, 0x6a, 0x73, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x2c, 0x0a, 0x11, 0x6a, 0x71, 0x50, 0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x6a, 0x71, 0x50,
	0x61, 0x74, 0x68, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x34,
	0x0a, 0x15, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x6d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x4d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x73, 0x22, 0x83, 0x04, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x67, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x52, 0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x65, 0x66, 0x73,
	0x12, 0x55, 0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x3d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x41, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x61, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x55, 0x52, 0x4c, 0x73, 0x1a, 0x3f,
	0x0a, 0x11, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x81, 0x04, 0x0a, 0x0c, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x52, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x46, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x66, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x66, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x73, 0x12, 0x37, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x59, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31,
	0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x12, 0x48, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f,
	0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b,
	0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9e,
	0x02, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x72,
	0x69, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4c, 0x75, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x4c, 0x75,
	0x61, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4c, 0x69, 0x62, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x4c,
	0x69, 0x62, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5b, 0x0a,
	0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x49, 0x67, 0x6e,
	0x6f, 0x72, 0x65, 0x44, 0x69, 0x66, 0x66, 0x52, 0x11, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x44,
	0x69, 0x66, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x0f, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x0f,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22,
	0x95, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x66, 0x12,
	0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x90, 0x02, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6f, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x6f, 0x6f, 0x6b, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x79, 0x6e, 0x63, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x68, 0x61, 0x73, 0x65, 0x22, 0x9d, 0x02, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x50, 0x72, 0x75, 0x6e,
	0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x73, 0x50, 0x72, 0x75, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x63, 0x0a, 0x0d, 0x52, 0x65,
	0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x3c, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42,
	0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x6f, 0x66, 0x66, 0x22,
	0xa5, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69,
	0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x44, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x54, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73,
	0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x6b, 0x67, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x24, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x44, 0x22, 0xfc,
	0x02, 0x0a, 0x0d, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x75, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x75,
	0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x64, 0x72, 0x79, 0x52, 0x75, 0x6e, 0x12, 0x4b, 0x0a, 0x0c, 0x73, 0x79,
	0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x4e, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x6d, 0x61, 0x6e, 0x69, 0x66, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x73, 0x0a,
	0x15, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x09, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x44, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x4c, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x41, 0x75,
	0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3e, 0x0a, 0x05, 0x72, 0x65, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x52, 0x65, 0x74, 0x72, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x52, 0x05, 0x72,
	0x65, 0x74, 0x72, 0x79, 0x22, 0x67, 0x0a, 0x13, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x41, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x75, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x75, 0x6e,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x65, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x48, 0x65, 0x61, 0x6c, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x87, 0x01,
	0x0a, 0x0a, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64,
	0x54, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x52,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x64, 0x54, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x93, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x42, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x3f, 0x0a, 0x04,
	0x68, 0x6f, 0x6f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x68, 0x6f, 0x6f, 0x6b, 0x22, 0x29, 0x0a,
	0x11, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x6e, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63,
	0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x48, 0x6f, 0x6f, 0x6b, 0x12, 0x5a, 0x0a, 0x11,
	0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x11, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x79, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x22, 0xf4, 0x01, 0x0a, 0x0a, 0x53, 0x79, 0x6e,
	0x63, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53, 0x79, 0x6e,
	0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x22,
	0x9b, 0x01, 0x0a, 0x0f, 0x54, 0x4c, 0x53, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x87, 0x02,
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x42,
	0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x50, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72,
	0x67, 0x6f, 0x70, 0x72, 0x6f, 0x6a, 0x2f, 0x61, 0x72, 0x67, 0x6f, 0x2d, 0x63, 0x64, 0x2f, 0x76,
	0x32, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x3b,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x41, 0x41, 0x58, 0xaa, 0x02, 0x19, 0x41, 0x70, 0x69, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x56, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x19, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xe2, 0x02, 0x25, 0x41, 0x70, 0x69, 0x73, 0x5c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x56, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1b, 0x41, 0x70, 0x69, 0x73,
	0x3a, 0x3a, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x3a, 0x56,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
}

var (
	file_apis_application_v1alpha1_generated_proto_rawDescOnce sync.Once
	file_apis_application_v1alpha1_generated_proto_rawDescData = file_apis_application_v1alpha1_generated_proto_rawDesc
)

func file_apis_application_v1alpha1_generated_proto_rawDescGZIP() []byte {
	file_apis_application_v1alpha1_generated_proto_rawDescOnce.Do(func() {
		file_apis_application_v1alpha1_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_apis_application_v1alpha1_generated_proto_rawDescData)
	})
	return file_apis_application_v1alpha1_generated_proto_rawDescData
}

var file_apis_application_v1alpha1_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 96)
var file_apis_application_v1alpha1_generated_proto_goTypes = []interface{}{
	(*AWSAuthConfig)(nil),                    // 0: apis.application.v1alpha1.AWSAuthConfig
	(*AppProject)(nil),                       // 1: apis.application.v1alpha1.AppProject
	(*AppProjectList)(nil),                   // 2: apis.application.v1alpha1.AppProjectList
	(*AppProjectSpec)(nil),                   // 3: apis.application.v1alpha1.AppProjectSpec
	(*AppProjectStatus)(nil),                 // 4: apis.application.v1alpha1.AppProjectStatus
	(*Application)(nil),                      // 5: apis.application.v1alpha1.Application
	(*ApplicationCondition)(nil),             // 6: apis.application.v1alpha1.ApplicationCondition
	(*ApplicationDestination)(nil),           // 7: apis.application.v1alpha1.ApplicationDestination
	(*ApplicationList)(nil),                  // 8: apis.application.v1alpha1.ApplicationList
	(*ApplicationSource)(nil),                // 9: apis.application.v1alpha1.ApplicationSource
	(*ApplicationSourceDirectory)(nil),       // 10: apis.application.v1alpha1.ApplicationSourceDirectory
	(*ApplicationSourceHelm)(nil),            // 11: apis.application.v1alpha1.ApplicationSourceHelm
	(*ApplicationSourceJsonnet)(nil),         // 12: apis.application.v1alpha1.ApplicationSourceJsonnet
	(*ApplicationSourceKustomize)(nil),       // 13: apis.application.v1alpha1.ApplicationSourceKustomize
	(*ApplicationSourcePlugin)(nil),          // 14: apis.application.v1alpha1.ApplicationSourcePlugin
	(*ApplicationSpec)(nil),                  // 15: apis.application.v1alpha1.ApplicationSpec
	(*ApplicationStatus)(nil),                // 16: apis.application.v1alpha1.ApplicationStatus
	(*ApplicationSummary)(nil),               // 17: apis.application.v1alpha1.ApplicationSummary
	(*ApplicationTree)(nil),                  // 18: apis.application.v1alpha1.ApplicationTree
	(*ApplicationWatchEvent)(nil),            // 19: apis.application.v1alpha1.ApplicationWatchEvent
	(*Backoff)(nil),                          // 20: apis.application.v1alpha1.Backoff
	(*Cluster)(nil),                          // 21: apis.application.v1alpha1.Cluster
	(*ClusterCacheInfo)(nil),                 // 22: apis.application.v1alpha1.ClusterCacheInfo
	(*ClusterConfig)(nil),                    // 23: apis.application.v1alpha1.ClusterConfig
	(*ClusterInfo)(nil),                      // 24: apis.application.v1alpha1.ClusterInfo
	(*ClusterList)(nil),                      // 25: apis.application.v1alpha1.ClusterList
	(*Command)(nil),                          // 26: apis.application.v1alpha1.Command
	(*ComparedTo)(nil),                       // 27: apis.application.v1alpha1.ComparedTo
	(*ComponentParameter)(nil),               // 28: apis.application.v1alpha1.ComponentParameter
	(*ConfigManagementPlugin)(nil),           // 29: apis.application.v1alpha1.ConfigManagementPlugin
	(*ConnectionState)(nil),                  // 30: apis.application.v1alpha1.ConnectionState
	(*EnvEntry)(nil),                         // 31: apis.application.v1alpha1.EnvEntry
	(*ExecProviderConfig)(nil),               // 32: apis.application.v1alpha1.ExecProviderConfig
	(*GnuPGPublicKey)(nil),                   // 33: apis.application.v1alpha1.GnuPGPublicKey
	(*GnuPGPublicKeyList)(nil),               // 34: apis.application.v1alpha1.GnuPGPublicKeyList
	(*HealthStatus)(nil),                     // 35: apis.application.v1alpha1.HealthStatus
	(*HelmFileParameter)(nil),                // 36: apis.application.v1alpha1.HelmFileParameter
	(*HelmOptions)(nil),                      // 37: apis.application.v1alpha1.HelmOptions
	(*HelmParameter)(nil),                    // 38: apis.application.v1alpha1.HelmParameter
	(*HostInfo)(nil),                         // 39: apis.application.v1alpha1.HostInfo
	(*HostResourceInfo)(nil),                 // 40: apis.application.v1alpha1.HostResourceInfo
	(*Info)(nil),                             // 41: apis.application.v1alpha1.Info
	(*InfoItem)(nil),                         // 42: apis.application.v1alpha1.InfoItem
	(*JWTToken)(nil),                         // 43: apis.application.v1alpha1.JWTToken
	(*JWTTokens)(nil),                        // 44: apis.application.v1alpha1.JWTTokens
	(*JsonnetVar)(nil),                       // 45: apis.application.v1alpha1.JsonnetVar
	(*KnownTypeField)(nil),                   // 46: apis.application.v1alpha1.KnownTypeField
	(*KustomizeOptions)(nil),                 // 47: apis.application.v1alpha1.KustomizeOptions
	(*Operation)(nil),                        // 48: apis.application.v1alpha1.Operation
	(*OperationInitiator)(nil),               // 49: apis.application.v1alpha1.OperationInitiator
	(*OperationState)(nil),                   // 50: apis.application.v1alpha1.OperationState
	(*OrphanedResourceKey)(nil),              // 51: apis.application.v1alpha1.OrphanedResourceKey
	(*OrphanedResourcesMonitorSettings)(nil), // 52: apis.application.v1alpha1.OrphanedResourcesMonitorSettings
	(*OverrideIgnoreDiff)(nil),               // 53: apis.application.v1alpha1.OverrideIgnoreDiff
	(*ProjectRole)(nil),                      // 54: apis.application.v1alpha1.ProjectRole
	(*RepoCreds)(nil),                        // 55: apis.application.v1alpha1.RepoCreds
	(*RepoCredsList)(nil),                    // 56: apis.application.v1alpha1.RepoCredsList
	(*Repository)(nil),                       // 57: apis.application.v1alpha1.Repository
	(*RepositoryCertificate)(nil),            // 58: apis.application.v1alpha1.RepositoryCertificate
	(*RepositoryCertificateList)(nil),        // 59: apis.application.v1alpha1.RepositoryCertificateList
	(*RepositoryList)(nil),                   // 60: apis.application.v1alpha1.RepositoryList
	(*ResourceAction)(nil),                   // 61: apis.application.v1alpha1.ResourceAction
	(*ResourceActionDefinition)(nil),         // 62: apis.application.v1alpha1.ResourceActionDefinition
	(*ResourceActionParam)(nil),              // 63: apis.application.v1alpha1.ResourceActionParam
	(*ResourceActions)(nil),                  // 64: apis.application.v1alpha1.ResourceActions
	(*ResourceDiff)(nil),                     // 65: apis.application.v1alpha1.ResourceDiff
	(*ResourceIgnoreDifferences)(nil),        // 66: apis.application.v1alpha1.ResourceIgnoreDifferences
	(*ResourceNetworkingInfo)(nil),           // 67: apis.application.v1alpha1.ResourceNetworkingInfo
	(*ResourceNode)(nil),                     // 68: apis.application.v1alpha1.ResourceNode
	(*ResourceOverride)(nil),                 // 69: apis.application.v1alpha1.ResourceOverride
	(*ResourceRef)(nil),                      // 70: apis.application.v1alpha1.ResourceRef
	(*ResourceResult)(nil),                   // 71: apis.application.v1alpha1.ResourceResult
	(*ResourceStatus)(nil),                   // 72: apis.application.v1alpha1.ResourceStatus
	(*RetryStrategy)(nil),                    // 73: apis.application.v1alpha1.RetryStrategy
	(*RevisionHistory)(nil),                  // 74: apis.application.v1alpha1.RevisionHistory
	(*RevisionMetadata)(nil),                 // 75: apis.application.v1alpha1.RevisionMetadata
	(*SignatureKey)(nil),                     // 76: apis.application.v1alpha1.SignatureKey
	(*SyncOperation)(nil),                    // 77: apis.application.v1alpha1.SyncOperation
	(*SyncOperationResource)(nil),            // 78: apis.application.v1alpha1.SyncOperationResource
	(*SyncOperationResult)(nil),              // 79: apis.application.v1alpha1.SyncOperationResult
	(*SyncPolicy)(nil),                       // 80: apis.application.v1alpha1.SyncPolicy
	(*SyncPolicyAutomated)(nil),              // 81: apis.application.v1alpha1.SyncPolicyAutomated
	(*SyncStatus)(nil),                       // 82: apis.application.v1alpha1.SyncStatus
	(*SyncStrategy)(nil),                     // 83: apis.application.v1alpha1.SyncStrategy
	(*SyncStrategyApply)(nil),                // 84: apis.application.v1alpha1.SyncStrategyApply
	(*SyncStrategyHook)(nil),                 // 85: apis.application.v1alpha1.SyncStrategyHook
	(*SyncWindow)(nil),                       // 86: apis.application.v1alpha1.SyncWindow
	(*TLSClientConfig)(nil),                  // 87: apis.application.v1alpha1.TLSClientConfig
	nil,                                      // 88: apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry
	nil,                                      // 89: apis.application.v1alpha1.ApplicationSourceKustomize.CommonLabelsEntry
	nil,                                      // 90: apis.application.v1alpha1.ApplicationSourceKustomize.CommonAnnotationsEntry
	nil,                                      // 91: apis.application.v1alpha1.Cluster.LabelsEntry
	nil,                                      // 92: apis.application.v1alpha1.Cluster.AnnotationsEntry
	nil,                                      // 93: apis.application.v1alpha1.ExecProviderConfig.EnvEntry
	nil,                                      // 94: apis.application.v1alpha1.ResourceNetworkingInfo.TargetLabelsEntry
	nil,                                      // 95: apis.application.v1alpha1.ResourceNetworkingInfo.LabelsEntry
	(*v1.ObjectMeta)(nil),                    // 96: k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	(*v1.ListMeta)(nil),                      // 97: k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	(*v1.GroupKind)(nil),                     // 98: k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	(*v1.Time)(nil),                          // 99: k8s.io.apimachinery.pkg.apis.meta.v1.Time
	(*v11.NodeSystemInfo)(nil),               // 100: k8s.io.api.core.v1.NodeSystemInfo
	(*v11.LoadBalancerIngress)(nil),          // 101: k8s.io.api.core.v1.LoadBalancerIngress
}
var file_apis_application_v1alpha1_generated_proto_depIdxs = []int32{
	96,  // 0: apis.application.v1alpha1.AppProject.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	3,   // 1: apis.application.v1alpha1.AppProject.spec:type_name -> apis.application.v1alpha1.AppProjectSpec
	4,   // 2: apis.application.v1alpha1.AppProject.status:type_name -> apis.application.v1alpha1.AppProjectStatus
	97,  // 3: apis.application.v1alpha1.AppProjectList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	1,   // 4: apis.application.v1alpha1.AppProjectList.items:type_name -> apis.application.v1alpha1.AppProject
	7,   // 5: apis.application.v1alpha1.AppProjectSpec.destinations:type_name -> apis.application.v1alpha1.ApplicationDestination
	54,  // 6: apis.application.v1alpha1.AppProjectSpec.roles:type_name -> apis.application.v1alpha1.ProjectRole
	98,  // 7: apis.application.v1alpha1.AppProjectSpec.clusterResourceWhitelist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	98,  // 8: apis.application.v1alpha1.AppProjectSpec.namespaceResourceBlacklist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	52,  // 9: apis.application.v1alpha1.AppProjectSpec.orphanedResources:type_name -> apis.application.v1alpha1.OrphanedResourcesMonitorSettings
	86,  // 10: apis.application.v1alpha1.AppProjectSpec.syncWindows:type_name -> apis.application.v1alpha1.SyncWindow
	98,  // 11: apis.application.v1alpha1.AppProjectSpec.namespaceResourceWhitelist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	76,  // 12: apis.application.v1alpha1.AppProjectSpec.signatureKeys:type_name -> apis.application.v1alpha1.SignatureKey
	98,  // 13: apis.application.v1alpha1.AppProjectSpec.clusterResourceBlacklist:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.GroupKind
	88,  // 14: apis.application.v1alpha1.AppProjectStatus.jwtTokensByRole:type_name -> apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry
	96,  // 15: apis.application.v1alpha1.Application.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta
	15,  // 16: apis.application.v1alpha1.Application.spec:type_name -> apis.application.v1alpha1.ApplicationSpec
	16,  // 17: apis.application.v1alpha1.Application.status:type_name -> apis.application.v1alpha1.ApplicationStatus
	48,  // 18: apis.application.v1alpha1.Application.operation:type_name -> apis.application.v1alpha1.Operation
	99,  // 19: apis.application.v1alpha1.ApplicationCondition.lastTransitionTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	97,  // 20: apis.application.v1alpha1.ApplicationList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	5,   // 21: apis.application.v1alpha1.ApplicationList.items:type_name -> apis.application.v1alpha1.Application
	11,  // 22: apis.application.v1alpha1.ApplicationSource.helm:type_name -> apis.application.v1alpha1.ApplicationSourceHelm
	13,  // 23: apis.application.v1alpha1.ApplicationSource.kustomize:type_name -> apis.application.v1alpha1.ApplicationSourceKustomize
	10,  // 24: apis.application.v1alpha1.ApplicationSource.directory:type_name -> apis.application.v1alpha1.ApplicationSourceDirectory
	14,  // 25: apis.application.v1alpha1.ApplicationSource.plugin:type_name -> apis.application.v1alpha1.ApplicationSourcePlugin
	12,  // 26: apis.application.v1alpha1.ApplicationSourceDirectory.jsonnet:type_name -> apis.application.v1alpha1.ApplicationSourceJsonnet
	38,  // 27: apis.application.v1alpha1.ApplicationSourceHelm.parameters:type_name -> apis.application.v1alpha1.HelmParameter
	36,  // 28: apis.application.v1alpha1.ApplicationSourceHelm.fileParameters:type_name -> apis.application.v1alpha1.HelmFileParameter
	45,  // 29: apis.application.v1alpha1.ApplicationSourceJsonnet.extVars:type_name -> apis.application.v1alpha1.JsonnetVar
	45,  // 30: apis.application.v1alpha1.ApplicationSourceJsonnet.tlas:type_name -> apis.application.v1alpha1.JsonnetVar
	89,  // 31: apis.application.v1alpha1.ApplicationSourceKustomize.commonLabels:type_name -> apis.application.v1alpha1.ApplicationSourceKustomize.CommonLabelsEntry
	90,  // 32: apis.application.v1alpha1.ApplicationSourceKustomize.commonAnnotations:type_name -> apis.application.v1alpha1.ApplicationSourceKustomize.CommonAnnotationsEntry
	31,  // 33: apis.application.v1alpha1.ApplicationSourcePlugin.env:type_name -> apis.application.v1alpha1.EnvEntry
	9,   // 34: apis.application.v1alpha1.ApplicationSpec.source:type_name -> apis.application.v1alpha1.ApplicationSource
	7,   // 35: apis.application.v1alpha1.ApplicationSpec.destination:type_name -> apis.application.v1alpha1.ApplicationDestination
	80,  // 36: apis.application.v1alpha1.ApplicationSpec.syncPolicy:type_name -> apis.application.v1alpha1.SyncPolicy
	66,  // 37: apis.application.v1alpha1.ApplicationSpec.ignoreDifferences:type_name -> apis.application.v1alpha1.ResourceIgnoreDifferences
	41,  // 38: apis.application.v1alpha1.ApplicationSpec.info:type_name -> apis.application.v1alpha1.Info
	72,  // 39: apis.application.v1alpha1.ApplicationStatus.resources:type_name -> apis.application.v1alpha1.ResourceStatus
	82,  // 40: apis.application.v1alpha1.ApplicationStatus.sync:type_name -> apis.application.v1alpha1.SyncStatus
	35,  // 41: apis.application.v1alpha1.ApplicationStatus.health:type_name -> apis.application.v1alpha1.HealthStatus
	74,  // 42: apis.application.v1alpha1.ApplicationStatus.history:type_name -> apis.application.v1alpha1.RevisionHistory
	6,   // 43: apis.application.v1alpha1.ApplicationStatus.conditions:type_name -> apis.application.v1alpha1.ApplicationCondition
	99,  // 44: apis.application.v1alpha1.ApplicationStatus.reconciledAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	50,  // 45: apis.application.v1alpha1.ApplicationStatus.operationState:type_name -> apis.application.v1alpha1.OperationState
	99,  // 46: apis.application.v1alpha1.ApplicationStatus.observedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	17,  // 47: apis.application.v1alpha1.ApplicationStatus.summary:type_name -> apis.application.v1alpha1.ApplicationSummary
	68,  // 48: apis.application.v1alpha1.ApplicationTree.nodes:type_name -> apis.application.v1alpha1.ResourceNode
	68,  // 49: apis.application.v1alpha1.ApplicationTree.orphanedNodes:type_name -> apis.application.v1alpha1.ResourceNode
	39,  // 50: apis.application.v1alpha1.ApplicationTree.hosts:type_name -> apis.application.v1alpha1.HostInfo
	5,   // 51: apis.application.v1alpha1.ApplicationWatchEvent.application:type_name -> apis.application.v1alpha1.Application
	23,  // 52: apis.application.v1alpha1.Cluster.config:type_name -> apis.application.v1alpha1.ClusterConfig
	30,  // 53: apis.application.v1alpha1.Cluster.connectionState:type_name -> apis.application.v1alpha1.ConnectionState
	99,  // 54: apis.application.v1alpha1.Cluster.refreshRequestedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	24,  // 55: apis.application.v1alpha1.Cluster.info:type_name -> apis.application.v1alpha1.ClusterInfo
	91,  // 56: apis.application.v1alpha1.Cluster.labels:type_name -> apis.application.v1alpha1.Cluster.LabelsEntry
	92,  // 57: apis.application.v1alpha1.Cluster.annotations:type_name -> apis.application.v1alpha1.Cluster.AnnotationsEntry
	99,  // 58: apis.application.v1alpha1.ClusterCacheInfo.lastCacheSyncTime:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	87,  // 59: apis.application.v1alpha1.ClusterConfig.tlsClientConfig:type_name -> apis.application.v1alpha1.TLSClientConfig
	0,   // 60: apis.application.v1alpha1.ClusterConfig.awsAuthConfig:type_name -> apis.application.v1alpha1.AWSAuthConfig
	32,  // 61: apis.application.v1alpha1.ClusterConfig.execProviderConfig:type_name -> apis.application.v1alpha1.ExecProviderConfig
	30,  // 62: apis.application.v1alpha1.ClusterInfo.connectionState:type_name -> apis.application.v1alpha1.ConnectionState
	22,  // 63: apis.application.v1alpha1.ClusterInfo.cacheInfo:type_name -> apis.application.v1alpha1.ClusterCacheInfo
	97,  // 64: apis.application.v1alpha1.ClusterList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	21,  // 65: apis.application.v1alpha1.ClusterList.items:type_name -> apis.application.v1alpha1.Cluster
	9,   // 66: apis.application.v1alpha1.ComparedTo.source:type_name -> apis.application.v1alpha1.ApplicationSource
	7,   // 67: apis.application.v1alpha1.ComparedTo.destination:type_name -> apis.application.v1alpha1.ApplicationDestination
	26,  // 68: apis.application.v1alpha1.ConfigManagementPlugin.init:type_name -> apis.application.v1alpha1.Command
	26,  // 69: apis.application.v1alpha1.ConfigManagementPlugin.generate:type_name -> apis.application.v1alpha1.Command
	99,  // 70: apis.application.v1alpha1.ConnectionState.attemptedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	93,  // 71: apis.application.v1alpha1.ExecProviderConfig.env:type_name -> apis.application.v1alpha1.ExecProviderConfig.EnvEntry
	97,  // 72: apis.application.v1alpha1.GnuPGPublicKeyList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	33,  // 73: apis.application.v1alpha1.GnuPGPublicKeyList.items:type_name -> apis.application.v1alpha1.GnuPGPublicKey
	40,  // 74: apis.application.v1alpha1.HostInfo.resourcesInfo:type_name -> apis.application.v1alpha1.HostResourceInfo
	100, // 75: apis.application.v1alpha1.HostInfo.systemInfo:type_name -> k8s.io.api.core.v1.NodeSystemInfo
	43,  // 76: apis.application.v1alpha1.JWTTokens.items:type_name -> apis.application.v1alpha1.JWTToken
	77,  // 77: apis.application.v1alpha1.Operation.sync:type_name -> apis.application.v1alpha1.SyncOperation
	49,  // 78: apis.application.v1alpha1.Operation.initiatedBy:type_name -> apis.application.v1alpha1.OperationInitiator
	41,  // 79: apis.application.v1alpha1.Operation.info:type_name -> apis.application.v1alpha1.Info
	73,  // 80: apis.application.v1alpha1.Operation.retry:type_name -> apis.application.v1alpha1.RetryStrategy
	48,  // 81: apis.application.v1alpha1.OperationState.operation:type_name -> apis.application.v1alpha1.Operation
	79,  // 82: apis.application.v1alpha1.OperationState.syncResult:type_name -> apis.application.v1alpha1.SyncOperationResult
	99,  // 83: apis.application.v1alpha1.OperationState.startedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	99,  // 84: apis.application.v1alpha1.OperationState.finishedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	51,  // 85: apis.application.v1alpha1.OrphanedResourcesMonitorSettings.ignore:type_name -> apis.application.v1alpha1.OrphanedResourceKey
	43,  // 86: apis.application.v1alpha1.ProjectRole.jwtTokens:type_name -> apis.application.v1alpha1.JWTToken
	97,  // 87: apis.application.v1alpha1.RepoCredsList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	55,  // 88: apis.application.v1alpha1.RepoCredsList.items:type_name -> apis.application.v1alpha1.RepoCreds
	30,  // 89: apis.application.v1alpha1.Repository.connectionState:type_name -> apis.application.v1alpha1.ConnectionState
	97,  // 90: apis.application.v1alpha1.RepositoryCertificateList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	58,  // 91: apis.application.v1alpha1.RepositoryCertificateList.items:type_name -> apis.application.v1alpha1.RepositoryCertificate
	97,  // 92: apis.application.v1alpha1.RepositoryList.metadata:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta
	57,  // 93: apis.application.v1alpha1.RepositoryList.items:type_name -> apis.application.v1alpha1.Repository
	63,  // 94: apis.application.v1alpha1.ResourceAction.params:type_name -> apis.application.v1alpha1.ResourceActionParam
	62,  // 95: apis.application.v1alpha1.ResourceActions.definitions:type_name -> apis.application.v1alpha1.ResourceActionDefinition
	94,  // 96: apis.application.v1alpha1.ResourceNetworkingInfo.targetLabels:type_name -> apis.application.v1alpha1.ResourceNetworkingInfo.TargetLabelsEntry
	70,  // 97: apis.application.v1alpha1.ResourceNetworkingInfo.targetRefs:type_name -> apis.application.v1alpha1.ResourceRef
	95,  // 98: apis.application.v1alpha1.ResourceNetworkingInfo.labels:type_name -> apis.application.v1alpha1.ResourceNetworkingInfo.LabelsEntry
	101, // 99: apis.application.v1alpha1.ResourceNetworkingInfo.ingress:type_name -> k8s.io.api.core.v1.LoadBalancerIngress
	70,  // 100: apis.application.v1alpha1.ResourceNode.resourceRef:type_name -> apis.application.v1alpha1.ResourceRef
	70,  // 101: apis.application.v1alpha1.ResourceNode.parentRefs:type_name -> apis.application.v1alpha1.ResourceRef
	42,  // 102: apis.application.v1alpha1.ResourceNode.info:type_name -> apis.application.v1alpha1.InfoItem
	67,  // 103: apis.application.v1alpha1.ResourceNode.networkingInfo:type_name -> apis.application.v1alpha1.ResourceNetworkingInfo
	35,  // 104: apis.application.v1alpha1.ResourceNode.health:type_name -> apis.application.v1alpha1.HealthStatus
	99,  // 105: apis.application.v1alpha1.ResourceNode.createdAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	53,  // 106: apis.application.v1alpha1.ResourceOverride.ignoreDifferences:type_name -> apis.application.v1alpha1.OverrideIgnoreDiff
	46,  // 107: apis.application.v1alpha1.ResourceOverride.knownTypeFields:type_name -> apis.application.v1alpha1.KnownTypeField
	35,  // 108: apis.application.v1alpha1.ResourceStatus.health:type_name -> apis.application.v1alpha1.HealthStatus
	20,  // 109: apis.application.v1alpha1.RetryStrategy.backoff:type_name -> apis.application.v1alpha1.Backoff
	99,  // 110: apis.application.v1alpha1.RevisionHistory.deployedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	9,   // 111: apis.application.v1alpha1.RevisionHistory.source:type_name -> apis.application.v1alpha1.ApplicationSource
	99,  // 112: apis.application.v1alpha1.RevisionHistory.deployStartedAt:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	99,  // 113: apis.application.v1alpha1.RevisionMetadata.date:type_name -> k8s.io.apimachinery.pkg.apis.meta.v1.Time
	83,  // 114: apis.application.v1alpha1.SyncOperation.syncStrategy:type_name -> apis.application.v1alpha1.SyncStrategy
	78,  // 115: apis.application.v1alpha1.SyncOperation.resources:type_name -> apis.application.v1alpha1.SyncOperationResource
	9,   // 116: apis.application.v1alpha1.SyncOperation.source:type_name -> apis.application.v1alpha1.ApplicationSource
	71,  // 117: apis.application.v1alpha1.SyncOperationResult.resources:type_name -> apis.application.v1alpha1.ResourceResult
	9,   // 118: apis.application.v1alpha1.SyncOperationResult.source:type_name -> apis.application.v1alpha1.ApplicationSource
	81,  // 119: apis.application.v1alpha1.SyncPolicy.automated:type_name -> apis.application.v1alpha1.SyncPolicyAutomated
	73,  // 120: apis.application.v1alpha1.SyncPolicy.retry:type_name -> apis.application.v1alpha1.RetryStrategy
	27,  // 121: apis.application.v1alpha1.SyncStatus.comparedTo:type_name -> apis.application.v1alpha1.ComparedTo
	84,  // 122: apis.application.v1alpha1.SyncStrategy.apply:type_name -> apis.application.v1alpha1.SyncStrategyApply
	85,  // 123: apis.application.v1alpha1.SyncStrategy.hook:type_name -> apis.application.v1alpha1.SyncStrategyHook
	84,  // 124: apis.application.v1alpha1.SyncStrategyHook.syncStrategyApply:type_name -> apis.application.v1alpha1.SyncStrategyApply
	44,  // 125: apis.application.v1alpha1.AppProjectStatus.JwtTokensByRoleEntry.value:type_name -> apis.application.v1alpha1.JWTTokens
	126, // [126:126] is the sub-list for method output_type
	126, // [126:126] is the sub-list for method input_type
	126, // [126:126] is the sub-list for extension type_name
	126, // [126:126] is the sub-list for extension extendee
	0,   // [0:126] is the sub-list for field type_name
}

func init() { file_apis_application_v1alpha1_generated_proto_init() }
func file_apis_application_v1alpha1_generated_proto_init() {
	if File_apis_application_v1alpha1_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apis_application_v1alpha1_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AWSAuthConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppProject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppProjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppProjectSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppProjectStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationDestination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSourceDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSourceHelm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSourceJsonnet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSourceKustomize); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSourcePlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationWatchEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backoff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterCacheInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClusterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComparedTo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigManagementPlugin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnvEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecProviderConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnuPGPublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GnuPGPublicKeyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmFileParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HelmParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostResourceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Info); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InfoItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JWTTokens); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JsonnetVar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KnownTypeField); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KustomizeOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationInitiator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrphanedResourceKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrphanedResourcesMonitorSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideIgnoreDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoCreds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepoCredsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Repository); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryCertificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryCertificateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepositoryList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceActionDefinition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceActionParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceDiff); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceIgnoreDifferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceNetworkingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceOverride); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceRef); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevisionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevisionMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOperation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOperationResource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOperationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncPolicyAutomated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStrategyApply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncStrategyHook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apis_application_v1alpha1_generated_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TLSClientConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apis_application_v1alpha1_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   96,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apis_application_v1alpha1_generated_proto_goTypes,
		DependencyIndexes: file_apis_application_v1alpha1_generated_proto_depIdxs,
		MessageInfos:      file_apis_application_v1alpha1_generated_proto_msgTypes,
	}.Build()
	File_apis_application_v1alpha1_generated_proto = out.File
	file_apis_application_v1alpha1_generated_proto_rawDesc = nil
	file_apis_application_v1alpha1_generated_proto_goTypes = nil
	file_apis_application_v1alpha1_generated_proto_depIdxs = nil
}
