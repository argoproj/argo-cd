error_log /dev/stdout info;
worker_processes 1;

events { worker_connections 1024; }

http {
  
  server {
    listen 80;
    listen  0.0.0.0:443 ssl http2;

    auth_basic            "Restricted";
    auth_basic_user_file  .htpasswd;
    root /tmp/argo-e2e;

    ssl_certificate ../certs/argocd-test-server.crt;
    ssl_certificate_key ../certs/argocd-test-server.key;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
   
    location ~ /argo-e2e(/.*) {
      # Set chunks to unlimited, as the body's can be huge
  	  client_max_body_size			0;

  	  fastcgi_param	SCRIPT_FILENAME		/usr/lib/git-core/git-http-backend;
  	  include		/etc/nginx/fastcgi_params;
  	  fastcgi_param	GIT_HTTP_EXPORT_ALL	"";
  	  fastcgi_param	GIT_PROJECT_ROOT	/tmp/argo-e2e;
  	  fastcgi_param	PATH_INFO		$1;
    	
  	  # Forward REMOTE_USER as we want to know when we are authenticated
  	  fastcgi_param	REMOTE_USER		$remote_user;
  	  fastcgi_pass	unix:/var/run/fcgiwrap.socket;
    }
  }

  # server block for strict verification of client certs
  server {
    listen  0.0.0.0:444 ssl http2;

    auth_basic            "Restricted";
    auth_basic_user_file  .htpasswd;
    root /tmp/argo-e2e;

    ssl_certificate ../certs/argocd-test-server.crt;
    ssl_certificate_key ../certs/argocd-test-server.key;
    ssl_client_certificate ../certs/argocd-test-ca.crt;
    ssl_verify_client on;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;

   
    location ~ /argo-e2e(/.*) {
      # Set chunks to unlimited, as the body's can be huge
  	  client_max_body_size			0;

  	  fastcgi_param	SCRIPT_FILENAME		/usr/lib/git-core/git-http-backend;
  	  include		/etc/nginx/fastcgi_params;
  	  fastcgi_param	GIT_HTTP_EXPORT_ALL	"";
  	  fastcgi_param	GIT_PROJECT_ROOT	/tmp/argo-e2e;
  	  fastcgi_param	PATH_INFO		$1;
    	
  	  # Forward REMOTE_USER as we want to know when we are authenticated
  	  fastcgi_param	REMOTE_USER		$remote_user;
  	  fastcgi_pass	unix:/var/run/fcgiwrap.socket;
    }
  }
}
