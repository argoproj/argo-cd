# This example demonstrates the "bluegreen" deployment type, which provides a
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: k8s-bluegreen-
spec:
  entrypoint: k8s-bluegreen
  templates:
  - name: k8s-bluegreen
    steps:
    # 1. Create a parallelized kubernetes deployment and
    # wait for it to become ready
    - - name: create-blue-deployment
        template: clone-deployment
        arguments:
          parameters:
          - name: green-deployment-name
            value: '{{GREEN_DEPLOYMENT_NAME}}'
          - name: suffix
            value: blue

    - - name: wait-for-blue-deployment
        template: wait-deployment-ready
          parameters:
          - name: deployment-name
            value: '{{steps.create-blue-deployment.outputs.parameters.blue-deployment.metadata.name}}'

    - - name: switch-service-to-blue-deployment
        template: patch-service
        arguments:
          parameters:
          - name: service-name
            value: '{{SERVICE_NAME}}'
          - name: app-name
            value: '{{steps.create-blue-deployment.outputs.parameters.blue-deployment.metadata.spec.template.metadata.labels.app}}'

# [TODO] wait for service to finish switching to blue deployment

    - - name: create-green-deployment
        template: patch-deployment
        arguments:
          parameters:
          - name: manifest-file
            value: '{{MANIFEST_FILE}}'

    - - name: wait-for-green-deployment
        template: wait-deployment-ready
          parameters:
          - name: deployment-name
            value: '{{steps.create-green-deployment.outputs.parameters.green-deployment.metadata.name}}'

    - - name: switch-service-to-green-deployment
        template: patch-service
        arguments:
          parameters:
          - name: service-name
            value: '{{SERVICE_NAME}}'
          - name: app-name
            value: '{{steps.create-green-deployment.outputs.parameters.green-deployment.metadata.name}}'

# [TODO] wait for service to finish switching to green deployment

    - - name: delete-cloned-deployment
        template: delete-deployment
        arguments:
          parameters:
          - name: deployment-name
            value: '{{steps.create-blue-deployment.outputs.parameters.blue-deployment.metadata.name}}'

# end of steps




  - name: clone-deployment
    inputs:
      parameters:
      - name: green-deployment-name
      - name: suffix
    container:
      image: argoproj/argoexec:latest
      command: [sh, -c]
      args: ["kubectl -o json get deployments/{{inputs.parameters.green-deployment-name}} | jq '.metadata.name+=\"-{{inputs.parameters.suffix}}\" | (.metadata.labels.app, .spec.selector.matchLabels.app, .spec.template.metadata.labels.app) +=\"-{{inputs.parameters.suffix}}\"' | kubectl -o jsonpath='{.metadata.name}' create -f - > /tmp/blue-deployment.json"]
    outputs:
      parameters:
      - name: blue-deployment
        valueFrom:
          path: /tmp/blue-deployment.json

  - name: patch-deployment
    inputs:
      parameters:
      - name: manifest-file
    container:
      image: argoproj/argoexec:latest
      command: [sh, -c]
      args: ["kubectl -o json apply -f {{inputs.parameters.manifest-file}} > /tmp/green-deployment.json"]
    outputs:
      parameters:
      - name: green-deployment
        valueFrom:
          path: /tmp/green-deployment.json

  - name: wait-deployment-ready
    inputs:
      parameters:
      - name: deployment-name
    container:
      image: argoproj/argoexec:latest
      command: [sh, -c]
      args: ["kubectl rollout status --watch=true deployments/{{inputs.parameters.deployment-name}}"]

  - name: patch-service
    inputs:
      parameters:
      - name: service-name
      - name: app-name
    resource:
      action: patch
      manifest: |
        apiVersion: batch/v1
        kind: Service
        metadata:
          name: {{inputs.parameters.service-name}}
        spec:
          selector:
            app: {{inputs.parameters.app-name}}

  - name: delete-deployment
    inputs:
      parameters:
      - name: deployment-name
    resource:
      action: delete
      manifest: |
        apiVersion: batch/v1
        kind: Deployment
        metadata:
          name: {{inputs.parameters.deployment-name}}
