apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: 2018-12-02T10:16:04Z
  name: image-pull-backoff
  namespace: argocd
  resourceVersion: "155333"
  selfLink: /api/v1/namespaces/argocd/pods/image-pull-backoff
  uid: 46c1e8de-f61b-11e8-a057-fe5f49266390
  deletionTimestamp: 2018-12-03T10:16:04Z
spec:
  containers:
    - image: doesnt-exist
      imagePullPolicy: Always
      name: main
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: default-token-f9jvj
          readOnly: true
  dnsPolicy: ClusterFirst
  nodeName: minikube
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: default-token-f9jvj
      secret:
        defaultMode: 420
        secretName: default-token-f9jvj
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: 2018-12-02T10:16:04Z
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: 2018-12-02T10:16:04Z
      message: 'containers with unready status: [main]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: 2018-12-02T10:16:04Z
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: doesnt-exist
      imageID: ""
      lastState: {}
      name: main
      ready: false
      restartCount: 0
      state:
        waiting:
          reason: PodInitializing
  hostIP: 192.168.64.41
  phase: Pending
  podIP: 172.17.0.9
  qosClass: BestEffort
  startTime: 2018-12-02T10:16:04Z
