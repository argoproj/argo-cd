// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import (
	apiclient "github.com/argoproj/argo-cd/v2/cmpserver/apiclient"

	io "github.com/argoproj/argo-cd/v2/util/io"

	mock "github.com/stretchr/testify/mock"
)

// CMPClientConstructor is an autogenerated mock type for the CMPClientConstructor type
type CMPClientConstructor struct {
	mock.Mock
}

// NewConfigManagementPluginClient provides a mock function with given fields:
func (_m *CMPClientConstructor) NewConfigManagementPluginClient() (apiclient.ConfigManagementPluginServiceClient, io.Closer, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for NewConfigManagementPluginClient")
	}

	var r0 apiclient.ConfigManagementPluginServiceClient
	var r1 io.Closer
	var r2 error
	if rf, ok := ret.Get(0).(func() (apiclient.ConfigManagementPluginServiceClient, io.Closer, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() apiclient.ConfigManagementPluginServiceClient); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(apiclient.ConfigManagementPluginServiceClient)
		}
	}

	if rf, ok := ret.Get(1).(func() io.Closer); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(io.Closer)
		}
	}

	if rf, ok := ret.Get(2).(func() error); ok {
		r2 = rf()
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewCMPClientConstructor creates a new instance of CMPClientConstructor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCMPClientConstructor(t interface {
	mock.TestingT
	Cleanup(func())
}) *CMPClientConstructor {
	mock := &CMPClientConstructor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
