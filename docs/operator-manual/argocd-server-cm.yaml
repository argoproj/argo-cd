apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-server-config
  labels:
    app.kubernetes.io/name: argocd-server-config
    app.kubernetes.io/part-of: argocd
data:
  # Run server without TLS
  insecure: "false"

  # Value for base href in index.html. Used if Argo CD is running behind reverse proxy under subpath different from / (default "/")
  basehref: "/"
  # Used if Argo CD is running behind reverse proxy under subpath different from /
  rootpath:

  # Set the logging format. One of: text|json (default "text")
  log.format: "text"
  # Set the logging level. One of: debug|info|warn|error (default "info")
  log.level: "info"

  # Repo server address (default "argocd-repo-server:8081")
  repo.server: "argocd-repo-server:8081"
  # Repo server RPC call timeout seconds. (default 60)
  repo.server.timeout.seconds: "60"
  # Use a plaintext client (non-TLS) to connect to repository server
  repo.server.plaintext: "false"
  # Perform strict validation of TLS certificates when connecting to repo server
  repo.server.strict.tls: "false"
  
  # Dex server address (default "http://argocd-dex-server:5556")
  dex.server: "http://argocd-dex-server:5556"

  # Disable client authentication
  disable.auth: "false"
  # Enable GZIP compression
  enable.gzip: "false"

  # Set X-Frame-Options header in HTTP responses to value. To disable, set to "". (default "sameorigin")
  x.frame.options: "sameorigin"

  # The minimum SSL/TLS version that is acceptable (one of: 1.0|1.1|1.2|1.3) (default "1.2")
  tls.minversion: "1.2"
  # The maximum SSL/TLS version that is acceptable (one of: 1.0|1.1|1.2|1.3) (default "1.3")
  tls.maxversion: "1.3"
  # The list of acceptable ciphers to be used when establishing TLS connections. Use 'list' to list available ciphers. (default "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_RSA_WITH_AES_256_GCM_SHA384")
  tls.ciphers: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_RSA_WITH_AES_256_GCM_SHA384"
  
  # Cache expiration for cluster/repo connection status (default 1h0m0s)
  connection.status.cache.expiration: "1h0m0s"
  # Cache expiration for OIDC state (default 3m0s)
  oidc.cache.expiration: "3m0s"
  # Cache expiration for failed login attempts (default 24h0m0s)
  login.attempts.expiration: "24h0m0s"
  # Cache expiration for app state (default 1h0m0s)
  app.state.cache.expiration: "1h0m0s"
  
  # Redis server hostname and port (e.g. argocd-redis:6379)
  redis: "argocd-redis:6379"
  # Redis database
  redisdb:
  # Cache expiration default (default 24h0m0s)
  default.cache.expiration: "24h0m0s"
