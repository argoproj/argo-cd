issues:
  exclude:
    - SA5011
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude-rules:
    - path: '(.+)_test\.go'
      linters:
        - unparam
linters:
  enable:
    - errcheck
    - errorlint
    - gocritic
    - gofumpt
    - goimports
    - gomodguard
    - gosimple
    - govet
    - importas
    - ineffassign
    - misspell
    - perfsprint
    - revive
    - staticcheck
    - testifylint
    - thelper
    - unparam
    - unused
    - usestdlibvars
    - whitespace 
linters-settings:
  gocritic:
    disabled-checks:
      - appendAssign
      - assignOp  # Keep it disabled for readability
      - badCond
      - commentFormatting
      - exitAfterDefer
      - ifElseChain
      - mapKey
      - singleCaseSwitch
      - typeSwitchVar
  goimports:
    local-prefixes: github.com/argoproj/argo-cd/v3
  gomodguard:
    blocked:
      modules:
        - github.com/golang-jwt/jwt/v4:
            recommendations:
              - github.com/golang-jwt/jwt/v5
        - github.com/imdario/mergo:
            recommendations:
              - dario.cat/mergo
            reason: "`github.com/imdario/mergo` has been renamed."
        - github.com/pkg/errors:
            recommendations:
              - errors
  importas:
    alias:
      - alias: jwtgo 
        pkg: github.com/golang-jwt/jwt/v5
      - alias: appsv1
        pkg: k8s.io/api/apps/v1
      - alias: corev1
        pkg: k8s.io/api/core/v1
      - alias: rbacv1
        pkg: k8s.io/api/rbac/v1
      - alias: apierrors 
        pkg: k8s.io/apimachinery/pkg/api/errors
      - alias: metav1 
        pkg: k8s.io/apimachinery/pkg/apis/meta/v1
      - alias: informersv1
        pkg: k8s.io/client-go/informers/core/v1
      - alias: stderrors
        pkg: errors
  perfsprint:
    # Optimizes even if it requires an int or uint type cast.
    int-conversion: true
    # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.
    err-error: true
    # Optimizes `fmt.Errorf`.
    errorf: true
    # Optimizes `fmt.Sprintf` with only one argument.
    sprintf1: true
    # Optimizes into strings concatenation.
    strconcat: true
  revive:
    rules:
      # Blank import should be only in a main or test package, or have a comment justifying it.
      - name: blank-imports
        disabled: true
      # context.Context() should be the first parameter of a function when provided as argument.
      - name: context-as-argument
        disabled: false
        arguments:
          # Allow functions with test or bench signatures.
          - allowTypesBefore: "*testing.T,testing.TB"
      # Basic types should not be used as a key in `context.WithValue`
      - name: context-keys-type
        disabled: true
      # Importing with `.` makes the programs much harder to understand
      - name: dot-imports
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#duplicated-imports
      - name: duplicated-imports
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#early-return
      - name: early-return
        disabled: false
        arguments:
          - "preserveScope"
      # Empty blocks make code less readable and could be a symptom of a bug or unfinished refactoring.
      - name: empty-block
        disabled: true
      # for better readability, variables of type `error` must be named with the prefix `err`.
      - name: error-naming
        disabled: true
      # for better readability, the errors should be last in the list of returned values by a function.
      - name: error-return
        disabled: false
      # for better readability, error messages should not be capitalized or end with punctuation or a newline.
      - name: error-strings
        disabled: true
      # report when replacing `errors.New(fmt.Sprintf())` with `fmt.Errorf()` is possible
      - name: errorf
        disabled: false
      # incrementing an integer variable by 1 is recommended to be done using the `++` operator
      - name: increment-decrement
        disabled: false
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#indent-error-flow
      - name: indent-error-flow
        disabled: false
        arguments:
          - "preserveScope"
      # This rule suggests a shorter way of writing ranges that do not use the second value.
      - name: range
        disabled: false
      # receiver names in a method should reflect the struct name (p for Person, for example)
      - name: receiver-naming
        disabled: false
      # redefining built in names (true, false, append, make) can lead to bugs very difficult to detect.
      - name: redefines-builtin-id
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#redundant-import-alias
      - name: redundant-import-alias
        disabled: false
      # redundant else-blocks that can be eliminated from the code.
      - name: superfluous-else
        disabled: false
        arguments:
          - "preserveScope"
       # prevent confusing name for variables when using `time` package
      - name: time-naming
        disabled: true
      # warns when an exported function or method returns a value of an un-exported type.
      - name: unexported-return
        disabled: true
      # https://github.com/mgechev/revive/blob/master/RULES_DESCRIPTIONS.md#unnecessary-stmt
      - name: unnecessary-stmt
        disabled: false
      # spots and proposes to remove unreachable code. also helps to spot errors
      - name: unreachable-code
        disabled: false
      # Functions or methods with unused parameters can be a symptom of an unfinished refactoring or a bug.
      - name: unused-parameter
        disabled: false
      # Since Go 1.18, interface{} has an alias: any. This rule proposes to replace instances of interface{} with any.
      - name: use-any
        disabled: false
      # report when a variable declaration can be simplified
      - name: var-declaration
        disabled: false
      # warns when initialism, variable or package naming conventions are not followed.
      - name: var-naming
        disabled: true
  testifylint:
    enable-all: true
    disable:
      - go-require
run:
  timeout: 50m
