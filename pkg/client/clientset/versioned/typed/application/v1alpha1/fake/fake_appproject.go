// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/argoproj/argo-cd/v3/pkg/apis/application/v1alpha1"
	applicationv1alpha1 "github.com/argoproj/argo-cd/v3/pkg/client/clientset/versioned/typed/application/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeAppProjects implements AppProjectInterface
type fakeAppProjects struct {
	*gentype.FakeClientWithList[*v1alpha1.AppProject, *v1alpha1.AppProjectList]
	Fake *FakeArgoprojV1alpha1
}

func newFakeAppProjects(fake *FakeArgoprojV1alpha1, namespace string) applicationv1alpha1.AppProjectInterface {
	return &fakeAppProjects{
		gentype.NewFakeClientWithList[*v1alpha1.AppProject, *v1alpha1.AppProjectList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("appprojects"),
			v1alpha1.SchemeGroupVersion.WithKind("AppProject"),
			func() *v1alpha1.AppProject { return &v1alpha1.AppProject{} },
			func() *v1alpha1.AppProjectList { return &v1alpha1.AppProjectList{} },
			func(dst, src *v1alpha1.AppProjectList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.AppProjectList) []*v1alpha1.AppProject { return gentype.ToPointerSlice(list.Items) },
			func(list *v1alpha1.AppProjectList, items []*v1alpha1.AppProject) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
