// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1alpha1 "github.com/argoproj/argo-cd/v3/pkg/apis/application/v1alpha1"
	applicationv1alpha1 "github.com/argoproj/argo-cd/v3/pkg/client/clientset/versioned/typed/application/v1alpha1"
	gentype "k8s.io/client-go/gentype"
)

// fakeApplications implements ApplicationInterface
type fakeApplications struct {
	*gentype.FakeClientWithList[*v1alpha1.Application, *v1alpha1.ApplicationList]
	Fake *FakeArgoprojV1alpha1
}

func newFakeApplications(fake *FakeArgoprojV1alpha1, namespace string) applicationv1alpha1.ApplicationInterface {
	return &fakeApplications{
		gentype.NewFakeClientWithList[*v1alpha1.Application, *v1alpha1.ApplicationList](
			fake.Fake,
			namespace,
			v1alpha1.SchemeGroupVersion.WithResource("applications"),
			v1alpha1.SchemeGroupVersion.WithKind("Application"),
			func() *v1alpha1.Application { return &v1alpha1.Application{} },
			func() *v1alpha1.ApplicationList { return &v1alpha1.ApplicationList{} },
			func(dst, src *v1alpha1.ApplicationList) { dst.ListMeta = src.ListMeta },
			func(list *v1alpha1.ApplicationList) []*v1alpha1.Application {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1alpha1.ApplicationList, items []*v1alpha1.Application) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
