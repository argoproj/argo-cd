// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/argoproj/argo-cd/v2/pkg/apis/application/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SyncStrategyLister helps list SyncStrategies.
// All objects returned here must be treated as read-only.
type SyncStrategyLister interface {
	// List lists all SyncStrategies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SyncStrategy, err error)
	// SyncStrategies returns an object that can list and get SyncStrategies.
	SyncStrategies(namespace string) SyncStrategyNamespaceLister
	SyncStrategyListerExpansion
}

// syncStrategyLister implements the SyncStrategyLister interface.
type syncStrategyLister struct {
	indexer cache.Indexer
}

// NewSyncStrategyLister returns a new SyncStrategyLister.
func NewSyncStrategyLister(indexer cache.Indexer) SyncStrategyLister {
	return &syncStrategyLister{indexer: indexer}
}

// List lists all SyncStrategies in the indexer.
func (s *syncStrategyLister) List(selector labels.Selector) (ret []*v1alpha1.SyncStrategy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SyncStrategy))
	})
	return ret, err
}

// SyncStrategies returns an object that can list and get SyncStrategies.
func (s *syncStrategyLister) SyncStrategies(namespace string) SyncStrategyNamespaceLister {
	return syncStrategyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SyncStrategyNamespaceLister helps list and get SyncStrategies.
// All objects returned here must be treated as read-only.
type SyncStrategyNamespaceLister interface {
	// List lists all SyncStrategies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.SyncStrategy, err error)
	// Get retrieves the SyncStrategy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.SyncStrategy, error)
	SyncStrategyNamespaceListerExpansion
}

// syncStrategyNamespaceLister implements the SyncStrategyNamespaceLister
// interface.
type syncStrategyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all SyncStrategies in the indexer for a given namespace.
func (s syncStrategyNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.SyncStrategy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.SyncStrategy))
	})
	return ret, err
}

// Get retrieves the SyncStrategy from the indexer for a given namespace and name.
func (s syncStrategyNamespaceLister) Get(name string) (*v1alpha1.SyncStrategy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("syncstrategy"), name)
	}
	return obj.(*v1alpha1.SyncStrategy), nil
}
