{
  "swagger": "2.0",
  "info": {
    "title": "apiclient/account/account.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AccountService"
    },
    {
      "name": "RepoServerService"
    },
    {
      "name": "ApplicationService"
    },
    {
      "name": "CertificateService"
    },
    {
      "name": "ClusterService"
    },
    {
      "name": "ConfigManagementPluginService"
    },
    {
      "name": "GPGKeyService"
    },
    {
      "name": "ProjectService"
    },
    {
      "name": "RepoCredsService"
    },
    {
      "name": "AskPassService"
    },
    {
      "name": "RepositoryService"
    },
    {
      "name": "SessionService"
    },
    {
      "name": "SettingsService"
    },
    {
      "name": "VersionService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/account": {
      "get": {
        "summary": "ListAccounts returns the list of accounts",
        "operationId": "AccountService_ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountAccountsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/can-i/{resource}/{action}/{subresource}": {
      "get": {
        "summary": "CanI checks if the current account has permission to perform an action",
        "operationId": "AccountService_CanI",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountCanIResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "resource",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "subresource",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": ".+"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/password": {
      "put": {
        "summary": "UpdatePassword updates an account's password to a new value",
        "operationId": "AccountService_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountUpdatePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountUpdatePasswordRequest"
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/{name}": {
      "get": {
        "summary": "GetAccount returns an account",
        "operationId": "AccountService_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountAccount"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/{name}/token": {
      "post": {
        "summary": "CreateToken creates a token",
        "operationId": "AccountService_CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountCreateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "expiresIn": {
                  "type": "string",
                  "format": "int64",
                  "title": "expiresIn represents a duration in seconds"
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/account/{name}/token/{id}": {
      "delete": {
        "summary": "DeleteToken deletes a token",
        "operationId": "AccountService_DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiclientaccountEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AccountService"
        ]
      }
    },
    "/api/v1/applications": {
      "get": {
        "summary": "List returns list of applications",
        "operationId": "ApplicationService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the application's name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "refresh",
            "description": "forces application reconciliation if set to true",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projects",
            "description": "the project names to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceVersion",
            "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "selector",
            "description": "the selector to restrict returned list to applications only with matched labels",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "the repoURL to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "post": {
        "summary": "Create creates an application",
        "operationId": "ApplicationService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "validate",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{application.metadata.name}": {
      "put": {
        "summary": "Update updates an application",
        "operationId": "ApplicationService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "application.metadata.name",
            "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "application",
            "description": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "metadata": {
                  "type": "object",
                  "properties": {
                    "generateName": {
                      "type": "string",
                      "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
                    },
                    "selfLink": {
                      "type": "string",
                      "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
                    },
                    "uid": {
                      "type": "string",
                      "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
                    },
                    "resourceVersion": {
                      "type": "string",
                      "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
                    },
                    "generation": {
                      "type": "string",
                      "format": "int64",
                      "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
                    },
                    "creationTimestamp": {
                      "$ref": "#/definitions/v1Time",
                      "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
                    },
                    "deletionTimestamp": {
                      "$ref": "#/definitions/v1Time",
                      "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
                    },
                    "deletionGracePeriodSeconds": {
                      "type": "string",
                      "format": "int64",
                      "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
                    },
                    "labels": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
                    },
                    "annotations": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
                    },
                    "ownerReferences": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/v1OwnerReference"
                      },
                      "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
                    },
                    "finalizers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
                    },
                    "clusterName": {
                      "type": "string",
                      "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional"
                    },
                    "managedFields": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/v1ManagedFieldsEntry"
                      },
                      "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
                    }
                  },
                  "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
                },
                "spec": {
                  "$ref": "#/definitions/v1alpha1ApplicationSpec"
                },
                "status": {
                  "$ref": "#/definitions/v1alpha1ApplicationStatus"
                },
                "operation": {
                  "$ref": "#/definitions/v1alpha1Operation"
                }
              },
              "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{applicationName}/managed-resources": {
      "get": {
        "summary": "ManagedResources returns list of managed resources",
        "operationId": "ApplicationService_ManagedResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationManagedResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{applicationName}/resource-tree": {
      "get": {
        "summary": "ResourceTree returns resource tree",
        "operationId": "ApplicationService_ResourceTree",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationTree"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}": {
      "get": {
        "summary": "Get returns an application by name",
        "operationId": "ApplicationService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the application's name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "refresh",
            "description": "forces application reconciliation if set to true",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projects",
            "description": "the project names to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceVersion",
            "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "selector",
            "description": "the selector to restrict returned list to applications only with matched labels",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "the repoURL to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "delete": {
        "summary": "Delete deletes an application",
        "operationId": "ApplicationService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cascade",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "propagationPolicy",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "patch": {
        "summary": "Patch patch an application",
        "operationId": "ApplicationService_Patch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "patch": {
                  "type": "string"
                },
                "patchType": {
                  "type": "string"
                }
              },
              "title": "ApplicationPatchRequest is a request to patch an application"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/events": {
      "get": {
        "summary": "ListResourceEvents returns a list of event resources",
        "operationId": "ApplicationService_ListResourceEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceNamespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceUID",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/logs": {
      "get": {
        "summary": "PodLogs returns stream of log entries for the specified pod. Pod",
        "operationId": "ApplicationService_PodLogs2",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/applicationLogEntry"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of applicationLogEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "container",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sinceSeconds",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sinceTime.seconds",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sinceTime.nanos",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tailLines",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "follow",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "untilTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "previous",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/manifests": {
      "get": {
        "summary": "GetManifests returns application manifests",
        "operationId": "ApplicationService_GetManifests",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/reposerverrepositoryManifestResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/operation": {
      "delete": {
        "summary": "TerminateOperation terminates the currently running operation",
        "operationId": "ApplicationService_TerminateOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationOperationTerminateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/pods/{podName}/logs": {
      "get": {
        "summary": "PodLogs returns stream of log entries for the specified pod. Pod",
        "operationId": "ApplicationService_PodLogs",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/applicationLogEntry"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of applicationLogEntry"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "container",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sinceSeconds",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sinceTime.seconds",
            "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "sinceTime.nanos",
            "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "tailLines",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "follow",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "untilTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "previous",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/resource": {
      "get": {
        "summary": "GetResource returns single application resource",
        "operationId": "ApplicationService_GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "delete": {
        "summary": "DeleteResource deletes a single application resource",
        "operationId": "ApplicationService_DeleteResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "orphan",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "post": {
        "summary": "PatchResource patch single application resource",
        "operationId": "ApplicationService_PatchResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationResourceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "patchType",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/resource/actions": {
      "get": {
        "summary": "ListResourceActions returns list of resource actions",
        "operationId": "ApplicationService_ListResourceActions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationResourceActionsListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      },
      "post": {
        "summary": "RunResourceAction run resource action",
        "operationId": "ApplicationService_RunResourceAction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/revisions/{revision}/metadata": {
      "get": {
        "summary": "Get the meta-data (author, date, tags, message) for a specific revision of the application",
        "operationId": "ApplicationService_RevisionMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RevisionMetadata"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the application's name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "description": "the revision of the app",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/rollback": {
      "post": {
        "summary": "Rollback syncs an application to its target state",
        "operationId": "ApplicationService_Rollback",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "int64"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "prune": {
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/spec": {
      "put": {
        "summary": "UpdateSpec updates an application spec",
        "operationId": "ApplicationService_UpdateSpec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationSpec"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "spec",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1ApplicationSpec"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/sync": {
      "post": {
        "summary": "Sync syncs an application to its target state",
        "operationId": "ApplicationService_Sync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Application"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "revision": {
                  "type": "string"
                },
                "dryRun": {
                  "type": "boolean"
                },
                "prune": {
                  "type": "boolean"
                },
                "strategy": {
                  "$ref": "#/definitions/v1alpha1SyncStrategy"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1SyncOperationResource"
                  }
                },
                "manifests": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "infos": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/v1alpha1Info"
                  }
                },
                "retryStrategy": {
                  "$ref": "#/definitions/v1alpha1RetryStrategy"
                },
                "syncOptions": {
                  "$ref": "#/definitions/applicationSyncOptions"
                }
              },
              "title": "ApplicationSyncRequest is a request to apply the config state to live state"
            }
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/applications/{name}/syncwindows": {
      "get": {
        "summary": "Get returns sync windows of the application",
        "operationId": "ApplicationService_GetApplicationSyncWindows",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/applicationApplicationSyncWindowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/certificates": {
      "get": {
        "summary": "List all available repository certificates",
        "operationId": "CertificateService_ListCertificates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepositoryCertificateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hostNamePattern",
            "description": "A file-glob pattern (not regular expression) the host name has to match",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "certType",
            "description": "The type of the certificate to match (ssh or https)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "certSubType",
            "description": "The sub type of the certificate to match (protocol dependent, usually only used for ssh certs)",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      },
      "delete": {
        "summary": "Delete the certificates that match the RepositoryCertificateQuery",
        "operationId": "CertificateService_DeleteCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepositoryCertificateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "hostNamePattern",
            "description": "A file-glob pattern (not regular expression) the host name has to match",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "certType",
            "description": "The type of the certificate to match (ssh or https)",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "certSubType",
            "description": "The sub type of the certificate to match (protocol dependent, usually only used for ssh certs)",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      },
      "post": {
        "summary": "Creates repository certificates on the server",
        "operationId": "CertificateService_CreateCertificate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepositoryCertificateList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "certificates",
            "description": "List of certificates to be created",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1RepositoryCertificateList"
            }
          },
          {
            "name": "upsert",
            "description": "Whether to upsert already existing certificates",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "CertificateService"
        ]
      }
    },
    "/api/v1/clusters": {
      "get": {
        "summary": "List returns list of clusters",
        "operationId": "ClusterService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1ClusterList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "server",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "post": {
        "summary": "Create creates a cluster",
        "operationId": "ClusterService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "cluster",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          {
            "name": "upsert",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/v1/clusters/{id.value}": {
      "get": {
        "summary": "Get returns a cluster by server address",
        "operationId": "ClusterService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "server",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "delete": {
        "summary": "Delete deletes a cluster",
        "operationId": "ClusterService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "server",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      },
      "put": {
        "summary": "Update updates a cluster",
        "operationId": "ClusterService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          {
            "name": "updatedFields",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/v1/clusters/{id.value}/invalidate-cache": {
      "post": {
        "summary": "InvalidateCache invalidates cluster cache",
        "operationId": "ClusterService_InvalidateCache",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Cluster"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "server",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/v1/clusters/{id.value}/rotate-auth": {
      "post": {
        "summary": "RotateAuth rotates the bearer token used for a cluster",
        "operationId": "ClusterService_RotateAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/clusterClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id.value",
            "description": "value holds the cluster server URL or cluster name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "server",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "id.type",
            "description": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ClusterService"
        ]
      }
    },
    "/api/v1/gpgkeys": {
      "get": {
        "summary": "List all available repository certificates",
        "operationId": "GPGKeyService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GnuPGPublicKeyList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keyID",
            "description": "The GPG key ID to query for",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GPGKeyService"
        ]
      },
      "delete": {
        "summary": "Delete specified GPG public key from the server's configuration",
        "operationId": "GPGKeyService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gpgkeyGnuPGPublicKeyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keyID",
            "description": "The GPG key ID to query for",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "GPGKeyService"
        ]
      },
      "post": {
        "summary": "Create one or more GPG public keys in the server's configuration",
        "operationId": "GPGKeyService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/gpgkeyGnuPGPublicKeyCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "publickey",
            "description": "Raw key data of the GPG key(s) to create",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1GnuPGPublicKey"
            }
          },
          {
            "name": "upsert",
            "description": "Whether to upsert already existing public keys",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "GPGKeyService"
        ]
      }
    },
    "/api/v1/gpgkeys/{keyID}": {
      "get": {
        "summary": "Get information about specified GPG public key from the server",
        "operationId": "GPGKeyService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1GnuPGPublicKey"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "keyID",
            "description": "The GPG key ID to query for",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "GPGKeyService"
        ]
      }
    },
    "/api/v1/projects": {
      "get": {
        "summary": "List returns list of projects",
        "operationId": "ProjectService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProjectList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "post": {
        "summary": "Create a new project",
        "operationId": "ProjectService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/projectProjectCreateRequest"
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}": {
      "get": {
        "summary": "Get returns a project by name",
        "operationId": "ProjectService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      },
      "delete": {
        "summary": "Delete deletes a project",
        "operationId": "ProjectService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiclientprojectEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/detailed": {
      "get": {
        "summary": "GetDetailedProject returns a project that include project, global project and scoped resources by name",
        "operationId": "ProjectService_GetDetailedProject",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectDetailedProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/events": {
      "get": {
        "summary": "ListEvents returns a list of project events",
        "operationId": "ProjectService_ListEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1EventList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/globalprojects": {
      "get": {
        "summary": "Get returns a virtual project by name",
        "operationId": "ProjectService_GetGlobalProjects",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectGlobalProjectsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{name}/syncwindows": {
      "get": {
        "summary": "GetSchedulesState returns true if there are any active sync syncWindows",
        "operationId": "ProjectService_GetSyncWindowsState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectSyncWindowsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project.metadata.name}": {
      "put": {
        "summary": "Update updates a project",
        "operationId": "ProjectService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1AppProject"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project.metadata.name",
            "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "object",
                  "properties": {
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "generateName": {
                          "type": "string",
                          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
                        },
                        "namespace": {
                          "type": "string",
                          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
                        },
                        "selfLink": {
                          "type": "string",
                          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
                        },
                        "uid": {
                          "type": "string",
                          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
                        },
                        "resourceVersion": {
                          "type": "string",
                          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
                        },
                        "generation": {
                          "type": "string",
                          "format": "int64",
                          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
                        },
                        "creationTimestamp": {
                          "$ref": "#/definitions/v1Time",
                          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
                        },
                        "deletionTimestamp": {
                          "$ref": "#/definitions/v1Time",
                          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
                        },
                        "deletionGracePeriodSeconds": {
                          "type": "string",
                          "format": "int64",
                          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
                        },
                        "labels": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
                        },
                        "annotations": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
                        },
                        "ownerReferences": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/v1OwnerReference"
                          },
                          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
                        },
                        "finalizers": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
                        },
                        "clusterName": {
                          "type": "string",
                          "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional"
                        },
                        "managedFields": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/v1ManagedFieldsEntry"
                          },
                          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
                        }
                      },
                      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
                    },
                    "spec": {
                      "$ref": "#/definitions/v1alpha1AppProjectSpec"
                    },
                    "status": {
                      "$ref": "#/definitions/v1alpha1AppProjectStatus"
                    }
                  },
                  "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs"
                }
              }
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project}/roles/{role}/token": {
      "post": {
        "summary": "Create a new project token",
        "operationId": "ProjectService_CreateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/projectProjectTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "type": "string"
                },
                "expiresIn": {
                  "type": "string",
                  "format": "int64",
                  "title": "expiresIn represents a duration in seconds"
                },
                "id": {
                  "type": "string"
                }
              },
              "description": "ProjectTokenCreateRequest defines project token creation parameters."
            }
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/projects/{project}/roles/{role}/token/{iat}": {
      "delete": {
        "summary": "Delete a new project token",
        "operationId": "ProjectService_DeleteToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiclientprojectEmptyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "iat",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ProjectService"
        ]
      }
    },
    "/api/v1/repocreds": {
      "get": {
        "summary": "ListRepositoryCredentials gets a list of all configured repository credential sets",
        "operationId": "RepoCredsService_ListRepositoryCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepoCredsList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "url",
            "description": "Repo URL for query",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RepoCredsService"
        ]
      },
      "post": {
        "summary": "CreateRepositoryCredentials creates a new repository credential set",
        "operationId": "RepoCredsService_CreateRepositoryCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepoCreds"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "creds",
            "description": "Repository definition",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1RepoCreds"
            }
          },
          {
            "name": "upsert",
            "description": "Whether to create in upsert mode",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepoCredsService"
        ]
      }
    },
    "/api/v1/repocreds/{creds.url}": {
      "put": {
        "summary": "UpdateRepositoryCredentials updates a repository credential set",
        "operationId": "RepoCredsService_UpdateRepositoryCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepoCreds"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "creds.url",
            "description": "URL is the URL that this credentials matches to",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "creds",
            "description": "RepoCreds holds the definition for repository credentials",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "title": "Username for authenticating at the repo server"
                },
                "password": {
                  "type": "string",
                  "title": "Password for authenticating at the repo server"
                },
                "sshPrivateKey": {
                  "type": "string",
                  "title": "SSHPrivateKey contains the private key data for authenticating at the repo server using SSH (only Git repos)"
                },
                "tlsClientCertData": {
                  "type": "string",
                  "title": "TLSClientCertData specifies the TLS client cert data for authenticating at the repo server"
                },
                "tlsClientCertKey": {
                  "type": "string",
                  "title": "TLSClientCertKey specifies the TLS client cert key for authenticating at the repo server"
                },
                "githubAppPrivateKey": {
                  "type": "string",
                  "title": "GithubAppPrivateKey specifies the private key PEM data for authentication via GitHub app"
                },
                "githubAppID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppId specifies the Github App ID of the app used to access the repo for GitHub app authentication"
                },
                "githubAppInstallationID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppInstallationId specifies the ID of the installed GitHub App for GitHub app authentication"
                },
                "githubAppEnterpriseBaseUrl": {
                  "type": "string",
                  "title": "GithubAppEnterpriseBaseURL specifies the GitHub API URL for GitHub app authentication. If empty will default to https://api.github.com"
                },
                "enableOCI": {
                  "type": "boolean",
                  "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
                },
                "type": {
                  "type": "string",
                  "description": "Type specifies the type of the repoCreds. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
                }
              },
              "title": "RepoCreds holds the definition for repository credentials"
            }
          }
        ],
        "tags": [
          "RepoCredsService"
        ]
      }
    },
    "/api/v1/repocreds/{url}": {
      "delete": {
        "summary": "DeleteRepositoryCredentials deletes a repository credential set from the configuration",
        "operationId": "RepoCredsService_DeleteRepositoryCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repocredsRepoCredsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "url",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "RepoCredsService"
        ]
      }
    },
    "/api/v1/repositories": {
      "get": {
        "summary": "ListRepositories gets a list of all configured repositories",
        "operationId": "RepositoryService_ListRepositories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1RepositoryList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repo URL for query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      },
      "post": {
        "summary": "CreateRepository creates a new repository configuration",
        "operationId": "RepositoryService_CreateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repository definition",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          {
            "name": "upsert",
            "description": "Whether to create in upsert mode",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "credsOnly",
            "description": "Whether to operate on credential set instead of repository",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo.repo_1}": {
      "put": {
        "summary": "UpdateRepository updates a repository configuration",
        "operationId": "RepositoryService_UpdateRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo.repo_1",
            "description": "Repo contains the URL to the remote repository",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "Repository is a repository holding application configurations",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "title": "Username contains the user name used for authenticating at the remote repository"
                },
                "password": {
                  "type": "string",
                  "title": "Password contains the password or PAT used for authenticating at the remote repository"
                },
                "sshPrivateKey": {
                  "type": "string",
                  "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos."
                },
                "connectionState": {
                  "$ref": "#/definitions/v1alpha1ConnectionState",
                  "title": "ConnectionState contains information about the current state of connection to the repository server"
                },
                "insecureIgnoreHostKey": {
                  "type": "boolean",
                  "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
                },
                "insecure": {
                  "type": "boolean",
                  "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
                },
                "enableLfs": {
                  "type": "boolean",
                  "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories."
                },
                "tlsClientCertData": {
                  "type": "string",
                  "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
                },
                "tlsClientCertKey": {
                  "type": "string",
                  "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
                },
                "type": {
                  "type": "string",
                  "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
                },
                "name": {
                  "type": "string",
                  "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
                },
                "inheritedCreds": {
                  "type": "boolean",
                  "title": "Whether credentials were inherited from a credential set"
                },
                "enableOCI": {
                  "type": "boolean",
                  "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
                },
                "githubAppPrivateKey": {
                  "type": "string",
                  "title": "Github App Private Key PEM data"
                },
                "githubAppID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
                },
                "githubAppInstallationID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
                },
                "githubAppEnterpriseBaseUrl": {
                  "type": "string",
                  "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
                },
                "proxy": {
                  "type": "string",
                  "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
                },
                "project": {
                  "type": "string",
                  "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
                }
              },
              "title": "Repository is a repository holding application configurations"
            }
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo.repo}": {
      "put": {
        "summary": "Update updates a repo or repo credential set",
        "operationId": "RepositoryService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo.repo",
            "description": "Repo contains the URL to the remote repository",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "Repository is a repository holding application configurations",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "title": "Username contains the user name used for authenticating at the remote repository"
                },
                "password": {
                  "type": "string",
                  "title": "Password contains the password or PAT used for authenticating at the remote repository"
                },
                "sshPrivateKey": {
                  "type": "string",
                  "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos."
                },
                "connectionState": {
                  "$ref": "#/definitions/v1alpha1ConnectionState",
                  "title": "ConnectionState contains information about the current state of connection to the repository server"
                },
                "insecureIgnoreHostKey": {
                  "type": "boolean",
                  "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
                },
                "insecure": {
                  "type": "boolean",
                  "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
                },
                "enableLfs": {
                  "type": "boolean",
                  "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories."
                },
                "tlsClientCertData": {
                  "type": "string",
                  "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
                },
                "tlsClientCertKey": {
                  "type": "string",
                  "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
                },
                "type": {
                  "type": "string",
                  "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
                },
                "name": {
                  "type": "string",
                  "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
                },
                "inheritedCreds": {
                  "type": "boolean",
                  "title": "Whether credentials were inherited from a credential set"
                },
                "enableOCI": {
                  "type": "boolean",
                  "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
                },
                "githubAppPrivateKey": {
                  "type": "string",
                  "title": "Github App Private Key PEM data"
                },
                "githubAppID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
                },
                "githubAppInstallationID": {
                  "type": "string",
                  "format": "int64",
                  "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
                },
                "githubAppEnterpriseBaseUrl": {
                  "type": "string",
                  "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
                },
                "proxy": {
                  "type": "string",
                  "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
                },
                "project": {
                  "type": "string",
                  "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
                }
              },
              "title": "Repository is a repository holding application configurations"
            }
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo_1}": {
      "delete": {
        "summary": "DeleteRepository deletes a repository from the configuration",
        "operationId": "RepositoryService_DeleteRepository",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo_1",
            "description": "Repo URL for query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo}": {
      "get": {
        "summary": "Get returns a repository or its credentials",
        "operationId": "RepositoryService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alpha1Repository"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repo URL for query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      },
      "delete": {
        "summary": "Delete deletes a repository from the configuration",
        "operationId": "RepositoryService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repo URL for query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo}/apps": {
      "get": {
        "summary": "ListApps returns list of apps in the repo",
        "operationId": "RepositoryService_ListApps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRepoAppsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "revision",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "appProject",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo}/helmcharts": {
      "get": {
        "summary": "GetHelmCharts returns list of helm charts in the specified repository",
        "operationId": "RepositoryService_GetHelmCharts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryHelmChartsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repo URL for query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo}/refs": {
      "get": {
        "operationId": "RepositoryService_ListRefs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRefs"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "Repo URL for query",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forceRefresh",
            "description": "Whether to force a cache refresh on repo's connection state",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{repo}/validate": {
      "post": {
        "summary": "ValidateAccess validates access to a repository with given parameters",
        "operationId": "RepositoryService_ValidateAccess",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRepoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "repo",
            "description": "The URL to the repo",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "The URL to the repo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "description": "Username for accessing repo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "description": "Password for accessing repo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sshPrivateKey",
            "description": "Private key data for accessing SSH repository",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "insecure",
            "description": "Whether to skip certificate or host key validation",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tlsClientCertData",
            "description": "TLS client cert data for accessing HTTPS repository",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tlsClientCertKey",
            "description": "TLS client cert key for accessing HTTPS repository",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": "The type of the repo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "description": "The name of the repo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "enableOci",
            "description": "Whether helm-oci support should be enabled for this repo",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "githubAppPrivateKey",
            "description": "Github App Private Key PEM data",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "githubAppID",
            "description": "Github App ID of the app used to access the repo",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "githubAppInstallationID",
            "description": "Github App Installation ID of the installed GitHub App",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "githubAppEnterpriseBaseUrl",
            "description": "Github App Enterprise base url if empty will default to https://api.github.com",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "proxy",
            "description": "HTTP/HTTPS proxy to access the repository",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "description": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/repositories/{source.repoURL}/appdetails": {
      "post": {
        "summary": "GetAppDetails returns application details by given path",
        "operationId": "RepositoryService_GetAppDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/repositoryRepoAppDetailsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "source.repoURL",
            "description": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "source": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git."
                    },
                    "targetRevision": {
                      "type": "string",
                      "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version."
                    },
                    "helm": {
                      "$ref": "#/definitions/v1alpha1ApplicationSourceHelm",
                      "title": "Helm holds helm specific options"
                    },
                    "kustomize": {
                      "$ref": "#/definitions/v1alpha1ApplicationSourceKustomize",
                      "title": "Kustomize holds kustomize specific options"
                    },
                    "directory": {
                      "$ref": "#/definitions/v1alpha1ApplicationSourceDirectory",
                      "title": "Directory holds path/directory specific options"
                    },
                    "plugin": {
                      "$ref": "#/definitions/v1alpha1ApplicationSourcePlugin",
                      "title": "ConfigManagementPlugin holds config management plugin specific options"
                    },
                    "chart": {
                      "type": "string",
                      "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo."
                    }
                  },
                  "title": "ApplicationSource contains all required information about the source of an application"
                },
                "appName": {
                  "type": "string"
                },
                "appProject": {
                  "type": "string"
                }
              },
              "title": "RepoAppDetailsQuery contains query information for app details request"
            }
          }
        ],
        "tags": [
          "RepositoryService"
        ]
      }
    },
    "/api/v1/session": {
      "delete": {
        "summary": "Delete an existing JWT cookie if using HTTP",
        "operationId": "SessionService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SessionService"
        ]
      },
      "post": {
        "summary": "Create a new JWT for authentication and set a cookie if using HTTP",
        "operationId": "SessionService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionSessionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/sessionSessionCreateRequest"
            }
          }
        ],
        "tags": [
          "SessionService"
        ]
      }
    },
    "/api/v1/session/userinfo": {
      "get": {
        "summary": "Get the current user's info",
        "operationId": "SessionService_GetUserInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/sessionGetUserInfoResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SessionService"
        ]
      }
    },
    "/api/v1/settings": {
      "get": {
        "summary": "Get returns Argo CD settings",
        "operationId": "SettingsService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/settingsSettings"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "SettingsService"
        ]
      }
    },
    "/api/v1/stream/applications": {
      "get": {
        "summary": "Watch returns stream of application change events",
        "operationId": "ApplicationService_Watch",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1alpha1ApplicationWatchEvent"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1alpha1ApplicationWatchEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "the application's name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "refresh",
            "description": "forces application reconciliation if set to true",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "projects",
            "description": "the project names to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "resourceVersion",
            "description": "when specified with a watch call, shows changes that occur after that particular version of a resource.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "selector",
            "description": "the selector to restrict returned list to applications only with matched labels",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "repo",
            "description": "the repoURL to restrict returned list applications",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/v1/stream/applications/{applicationName}/resource-tree": {
      "get": {
        "summary": "Watch returns stream of application resource tree",
        "operationId": "ApplicationService_WatchResourceTree",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/v1alpha1ApplicationTree"
                },
                "error": {
                  "$ref": "#/definitions/googlerpcStatus"
                }
              },
              "title": "Stream result of v1alpha1ApplicationTree"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ApplicationService"
        ]
      }
    },
    "/api/version": {
      "get": {
        "summary": "Version returns version information of the API server",
        "operationId": "VersionService_Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/versionVersionMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "VersionService"
        ]
      }
    }
  },
  "definitions": {
    "accountAccount": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountToken"
          }
        }
      }
    },
    "accountAccountsList": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/accountAccount"
          }
        }
      }
    },
    "accountCanIResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "accountCreateTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "accountToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "issuedAt": {
          "type": "string",
          "format": "int64"
        },
        "expiresAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "accountUpdatePasswordRequest": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "currentPassword": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "accountUpdatePasswordResponse": {
      "type": "object"
    },
    "apiclientaccountEmptyResponse": {
      "type": "object"
    },
    "apiclientcmpserverEnvEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the variable, usually expressed in uppercase"
        },
        "value": {
          "type": "string",
          "title": "Value is the value of the variable"
        }
      },
      "title": "EnvEntry represents an entry in the application's environment"
    },
    "apiclientcmpserverManifestResponse": {
      "type": "object",
      "properties": {
        "manifests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceType": {
          "type": "string"
        }
      }
    },
    "apiclientprojectEmptyResponse": {
      "type": "object"
    },
    "applicationApplicationResourceResponse": {
      "type": "object",
      "properties": {
        "manifest": {
          "type": "string"
        }
      }
    },
    "applicationApplicationResponse": {
      "type": "object"
    },
    "applicationApplicationSyncWindow": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "duration": {
          "type": "string"
        },
        "manualSync": {
          "type": "boolean"
        }
      }
    },
    "applicationApplicationSyncWindowsResponse": {
      "type": "object",
      "properties": {
        "activeWindows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationApplicationSyncWindow"
          }
        },
        "assignedWindows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationApplicationSyncWindow"
          }
        },
        "canSync": {
          "type": "boolean"
        }
      }
    },
    "applicationLogEntry": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "timeStamp": {
          "$ref": "#/definitions/v1Time",
          "title": "deprecated in favor of timeStampStr since meta.v1.Time don't support nano time"
        },
        "last": {
          "type": "boolean"
        },
        "timeStampStr": {
          "type": "string"
        },
        "podName": {
          "type": "string"
        }
      }
    },
    "applicationManagedResourcesResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceDiff"
          }
        }
      }
    },
    "applicationOperationTerminateResponse": {
      "type": "object"
    },
    "applicationResourceActionsListResponse": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceAction"
          }
        }
      }
    },
    "applicationSyncOptions": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "applicationv1alpha1EnvEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the variable, usually expressed in uppercase"
        },
        "value": {
          "type": "string",
          "title": "Value is the value of the variable"
        }
      },
      "title": "EnvEntry represents an entry in the application's environment"
    },
    "askpassCredentialsResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "clusterClusterID": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "type is the type of the specified cluster identifier ( \"server\" - default, \"name\" )"
        },
        "value": {
          "type": "string",
          "title": "value holds the cluster server URL or cluster name"
        }
      },
      "title": "ClusterID holds a cluster server URL or cluster name"
    },
    "clusterClusterResponse": {
      "type": "object"
    },
    "cmpserverFile": {
      "type": "object",
      "properties": {
        "chunk": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "cmpserverManifestRequestMetadata": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string",
          "title": "appName refers to the ArgoCD Application name"
        },
        "appRelPath": {
          "type": "string",
          "title": "appRelPath points to the application relative path inside the tarball"
        },
        "checksum": {
          "type": "string",
          "title": "checksum is used to verify the integrity of the file"
        },
        "size": {
          "type": "string",
          "format": "int64",
          "title": "size relates to the file size in bytes"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiclientcmpserverEnvEntry"
          },
          "title": "env is a list with the environment variables needed to generate manifests"
        }
      },
      "description": "ManifestRequestMetadata defines the metada related to the file being sent\nto the CMP server."
    },
    "cmpserverRepositoryResponse": {
      "type": "object",
      "properties": {
        "isSupported": {
          "type": "boolean"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "gpgkeyGnuPGPublicKeyCreateResponse": {
      "type": "object",
      "properties": {
        "created": {
          "$ref": "#/definitions/v1alpha1GnuPGPublicKeyList",
          "title": "List of GPG public keys that have been created"
        },
        "skipped": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of key IDs that haven been skipped because they already exist on the server"
        }
      },
      "title": "Response to a public key creation request"
    },
    "gpgkeyGnuPGPublicKeyResponse": {
      "type": "object",
      "title": "Generic (empty) response for GPG public key CRUD requests"
    },
    "oidcClaim": {
      "type": "object",
      "properties": {
        "essential": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "projectDetailedProjectsResponse": {
      "type": "object",
      "properties": {
        "globalProjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        },
        "project": {
          "$ref": "#/definitions/v1alpha1AppProject"
        },
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          }
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Cluster"
          }
        }
      }
    },
    "projectGlobalProjectsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        }
      }
    },
    "projectProjectCreateRequest": {
      "type": "object",
      "properties": {
        "project": {
          "$ref": "#/definitions/v1alpha1AppProject"
        },
        "upsert": {
          "type": "boolean"
        }
      },
      "description": "ProjectCreateRequest defines project creation parameters."
    },
    "projectProjectTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "description": "ProjectTokenResponse wraps the created token or returns an empty string if deleted."
    },
    "projectSyncWindowsResponse": {
      "type": "object",
      "properties": {
        "windows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncWindow"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "repocredsRepoCredsResponse": {
      "type": "object",
      "title": "RepoCredsResponse is a response to most repository credentials requests"
    },
    "reposerverrepositoryManifestResponse": {
      "type": "object",
      "properties": {
        "manifests": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespace": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "revision": {
          "type": "string",
          "title": "resolved revision"
        },
        "sourceType": {
          "type": "string"
        },
        "verifyResult": {
          "type": "string",
          "title": "Raw response of git verify-commit operation (always the empty string for Helm)"
        }
      }
    },
    "repositoryAppInfo": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "AppInfo contains application type and app file path"
    },
    "repositoryAppList": {
      "type": "object",
      "properties": {
        "apps": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "AppList returns the contents of the repo of a ListApps request"
    },
    "repositoryDirectoryAppSpec": {
      "type": "object",
      "title": "DirectoryAppSpec contains directory"
    },
    "repositoryHelmAppSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "valueFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmParameter"
          },
          "title": "the output of `helm inspect values`"
        },
        "values": {
          "type": "string",
          "title": "the contents of values.yaml"
        },
        "fileParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmFileParameter"
          },
          "title": "helm file parameters"
        }
      },
      "title": "HelmAppSpec contains helm app name  in source repo"
    },
    "repositoryHelmChart": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "repositoryHelmChartsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repositoryHelmChart"
          }
        }
      }
    },
    "repositoryKustomizeAppSpec": {
      "type": "object",
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "images is a list of available images."
        }
      },
      "title": "KustomizeAppSpec contains kustomize images"
    },
    "repositoryRefs": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "A subset of the repository's named refs"
    },
    "repositoryRepoAppDetailsResponse": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "helm": {
          "$ref": "#/definitions/repositoryHelmAppSpec"
        },
        "kustomize": {
          "$ref": "#/definitions/repositoryKustomizeAppSpec"
        },
        "directory": {
          "$ref": "#/definitions/repositoryDirectoryAppSpec"
        }
      },
      "title": "RepoAppDetailsResponse application details"
    },
    "repositoryRepoAppsResponse": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/repositoryAppInfo"
          }
        }
      },
      "title": "RepoAppsResponse contains applications of specified repository"
    },
    "repositoryRepoResponse": {
      "type": "object"
    },
    "repositoryResolveRevisionResponse": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "title": "returns the resolved revision"
        },
        "ambiguousRevision": {
          "type": "string"
        }
      },
      "title": "ResolveRevisionResponse"
    },
    "repositoryTestRepositoryResponse": {
      "type": "object",
      "properties": {
        "verifiedRepository": {
          "type": "boolean",
          "title": "Request to verify the signature when generating the manifests (only for Git repositories)"
        }
      },
      "title": "TestRepositoryResponse represents the TestRepository response"
    },
    "sessionGetUserInfoResponse": {
      "type": "object",
      "properties": {
        "loggedIn": {
          "type": "boolean"
        },
        "username": {
          "type": "string"
        },
        "iss": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "The current user's userInfo info"
    },
    "sessionSessionCreateRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "description": "SessionCreateRequest is for logging in."
    },
    "sessionSessionResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "description": "SessionResponse wraps the created token or returns an empty string if deleted."
    },
    "settingsConnector": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "settingsDexConfig": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/settingsConnector"
          }
        }
      }
    },
    "settingsGoogleAnalyticsConfig": {
      "type": "object",
      "properties": {
        "trackingID": {
          "type": "string"
        },
        "anonymizeUsers": {
          "type": "boolean"
        }
      }
    },
    "settingsHelp": {
      "type": "object",
      "properties": {
        "chatUrl": {
          "type": "string",
          "title": "the URL for getting chat help, this will typically be your Slack channel for support"
        },
        "chatText": {
          "type": "string",
          "title": "the text for getting chat help, defaults to \"Chat now!\""
        },
        "binaryUrls": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "the URLs for downloading argocd binaries"
        }
      },
      "title": "Help settings"
    },
    "settingsOIDCConfig": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "clientID": {
          "type": "string"
        },
        "cliClientID": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idTokenClaims": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/oidcClaim"
          }
        }
      }
    },
    "settingsPlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "the name of the plugin, e.g. \"kasane\""
        }
      },
      "title": "Plugin settings"
    },
    "settingsSettings": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "dexConfig": {
          "$ref": "#/definitions/settingsDexConfig"
        },
        "oidcConfig": {
          "$ref": "#/definitions/settingsOIDCConfig"
        },
        "appLabelKey": {
          "type": "string"
        },
        "resourceOverrides": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1ResourceOverride"
          }
        },
        "statusBadgeEnabled": {
          "type": "boolean"
        },
        "googleAnalytics": {
          "$ref": "#/definitions/settingsGoogleAnalyticsConfig"
        },
        "kustomizeOptions": {
          "$ref": "#/definitions/v1alpha1KustomizeOptions"
        },
        "help": {
          "$ref": "#/definitions/settingsHelp",
          "title": "Help settings"
        },
        "plugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/settingsPlugin"
          }
        },
        "userLoginsDisabled": {
          "type": "boolean"
        },
        "configManagementPlugins": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ConfigManagementPlugin"
          }
        },
        "kustomizeVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiCssURL": {
          "type": "string"
        },
        "uiBannerContent": {
          "type": "string"
        },
        "uiBannerURL": {
          "type": "string"
        },
        "passwordPattern": {
          "type": "string"
        },
        "trackingMethod": {
          "type": "string"
        },
        "uiBannerPermanent": {
          "type": "boolean"
        },
        "uiBannerPosition": {
          "type": "string"
        },
        "statusBadgeRootUrl": {
          "type": "string"
        }
      }
    },
    "v1Event": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ObjectMeta",
          "title": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
        },
        "involvedObject": {
          "$ref": "#/definitions/v1ObjectReference",
          "description": "The object that this event is about."
        },
        "reason": {
          "type": "string",
          "title": "This should be a short, machine understandable string that gives the reason\nfor the transition into the object's current status.\nTODO: provide exact specification for format.\n+optional"
        },
        "message": {
          "type": "string",
          "title": "A human-readable description of the status of this operation.\nTODO: decide on maximum length.\n+optional"
        },
        "source": {
          "$ref": "#/definitions/v1EventSource",
          "title": "The component reporting this event. Should be a short machine understandable string.\n+optional"
        },
        "firstTimestamp": {
          "$ref": "#/definitions/v1Time",
          "title": "The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)\n+optional"
        },
        "lastTimestamp": {
          "$ref": "#/definitions/v1Time",
          "title": "The time at which the most recent occurrence of this event was recorded.\n+optional"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "The number of times this event has occurred.\n+optional"
        },
        "type": {
          "type": "string",
          "title": "Type of this event (Normal, Warning), new types could be added in the future\n+optional"
        },
        "eventTime": {
          "$ref": "#/definitions/v1MicroTime",
          "title": "Time when this Event was first observed.\n+optional"
        },
        "series": {
          "$ref": "#/definitions/v1EventSeries",
          "title": "Data about the Event series this event represents or nil if it's a singleton Event.\n+optional"
        },
        "action": {
          "type": "string",
          "title": "What action was taken/failed regarding to the Regarding object.\n+optional"
        },
        "related": {
          "$ref": "#/definitions/v1ObjectReference",
          "title": "Optional secondary object for more complex actions.\n+optional"
        },
        "reportingComponent": {
          "type": "string",
          "title": "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.\n+optional"
        },
        "reportingInstance": {
          "type": "string",
          "title": "ID of the controller instance, e.g. `kubelet-xyzf`.\n+optional"
        }
      },
      "description": "Event is a report of an event somewhere in the cluster.  Events\nhave a limited retention time and triggers and messages may evolve\nwith time.  Event consumers should not rely on the timing of an event\nwith a given Reason reflecting a consistent underlying trigger, or the\ncontinued existence of events with that Reason.  Events should be\ntreated as informative, best-effort, supplemental data."
    },
    "v1EventList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta",
          "title": "Standard list metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Event"
          },
          "title": "List of events"
        }
      },
      "description": "EventList is a list of events."
    },
    "v1EventSeries": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Number of occurrences in this series up to the last heartbeat time"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/v1MicroTime",
          "title": "Time of the last occurrence observed"
        }
      },
      "description": "EventSeries contain information on series of events, i.e. thing that was/is happening\ncontinuously for some time."
    },
    "v1EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string",
          "title": "Component from which the event is generated.\n+optional"
        },
        "host": {
          "type": "string",
          "title": "Node name on which the event is generated.\n+optional"
        }
      },
      "description": "EventSource contains information for an event."
    },
    "v1FieldsV1": {
      "type": "object",
      "properties": {
        "Raw": {
          "type": "string",
          "format": "byte",
          "description": "Raw is the underlying serialization of this object."
        }
      },
      "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:\u003cname\u003e', where \u003cname\u003e is the name of a field in a struct, or key in a map\n'v:\u003cvalue\u003e', where \u003cvalue\u003e is the exact json formatted value of a list item\n'i:\u003cindex\u003e', where \u003cindex\u003e is position of a item in a list\n'k:\u003ckeys\u003e', where \u003ckeys\u003e is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1GroupKind": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        }
      },
      "description": "+protobuf.options.(gogoproto.goproto_stringer)=false",
      "title": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types"
    },
    "v1ListMeta": {
      "type": "object",
      "properties": {
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "String that identifies the server's internal version of this object that\ncan be used by clients to determine when objects have changed.\nValue must be treated as opaque by clients and passed unmodified back to the server.\nPopulated by the system.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that\nthe server has more data available. The value is opaque and may be used to issue another request\nto the endpoint that served this list to retrieve the next set of available objects. Continuing a\nconsistent list may not be possible if the server configuration has changed or more than a few\nminutes have passed. The resourceVersion field returned when using this continue value will be\nidentical to the value in the first response, unless you have received this token from an error\nmessage."
        },
        "remainingItemCount": {
          "type": "string",
          "format": "int64",
          "title": "remainingItemCount is the number of subsequent items in the list which are not included in this\nlist response. If the list request contained label or field selectors, then the number of\nremaining items is unknown and the field will be left unset and omitted during serialization.\nIf the list is complete (either because it is not chunking or because this is the last chunk),\nthen there are no more remaining items and this field will be left unset and omitted during\nserialization.\nServers older than v1.15 do not set this field.\nThe intended use of the remainingItemCount is *estimating* the size of a collection. Clients\nshould not rely on the remainingItemCount to be set or to be exact.\n+optional"
        }
      },
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and\nvarious status objects. A resource may have only one of {ObjectMeta, ListMeta}."
    },
    "v1LoadBalancerIngress": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "title": "IP is set for load-balancer ingress points that are IP based\n(typically GCE or OpenStack load-balancers)\n+optional"
        },
        "hostname": {
          "type": "string",
          "title": "Hostname is set for load-balancer ingress points that are DNS based\n(typically AWS load-balancers)\n+optional"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1PortStatus"
          },
          "title": "Ports is a list of records of service ports\nIf used, every port defined in the service should have an entry in it\n+listType=atomic\n+optional"
        }
      },
      "description": "LoadBalancerIngress represents the status of a load-balancer ingress point:\ntraffic intended for the service should be sent to an ingress point."
    },
    "v1ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "manager": {
          "type": "string",
          "description": "Manager is an identifier of the workflow managing these fields."
        },
        "operation": {
          "type": "string",
          "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
        },
        "apiVersion": {
          "type": "string",
          "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
        },
        "time": {
          "$ref": "#/definitions/v1Time",
          "title": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional"
        },
        "fieldsType": {
          "type": "string",
          "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
        },
        "fieldsV1": {
          "$ref": "#/definitions/v1FieldsV1",
          "title": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional"
        },
        "subresource": {
          "type": "string",
          "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
        }
      },
      "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
    },
    "v1MicroTime": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "MicroTime is version of Time with microsecond level precision.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1NodeSystemInfo": {
      "type": "object",
      "properties": {
        "machineID": {
          "type": "string",
          "title": "MachineID reported by the node. For unique machine identification\nin the cluster this field is preferred. Learn more from man(5)\nmachine-id: http://man7.org/linux/man-pages/man5/machine-id.5.html"
        },
        "systemUUID": {
          "type": "string",
          "title": "SystemUUID reported by the node. For unique machine identification\nMachineID is preferred. This field is specific to Red Hat hosts\nhttps://access.redhat.com/documentation/en-us/red_hat_subscription_management/1/html/rhsm/uuid"
        },
        "bootID": {
          "type": "string",
          "description": "Boot ID reported by the node."
        },
        "kernelVersion": {
          "type": "string",
          "description": "Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64)."
        },
        "osImage": {
          "type": "string",
          "description": "OS Image reported by the node from /etc/os-release (e.g. Debian GNU/Linux 7 (wheezy))."
        },
        "containerRuntimeVersion": {
          "type": "string",
          "description": "ContainerRuntime Version reported by the node through runtime remote API (e.g. containerd://1.4.2)."
        },
        "kubeletVersion": {
          "type": "string",
          "description": "Kubelet Version reported by the node."
        },
        "kubeProxyVersion": {
          "type": "string",
          "description": "KubeProxy Version reported by the node."
        },
        "operatingSystem": {
          "type": "string",
          "title": "The Operating System reported by the node"
        },
        "architecture": {
          "type": "string",
          "title": "The Architecture reported by the node"
        }
      },
      "description": "NodeSystemInfo is a set of ids/uuids to uniquely identify the node."
    },
    "v1ObjectMeta": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names\n+optional"
        },
        "generateName": {
          "type": "string",
          "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces\n+optional"
        },
        "selfLink": {
          "type": "string",
          "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "generation": {
          "type": "string",
          "format": "int64",
          "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
        },
        "creationTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionTimestamp": {
          "$ref": "#/definitions/v1Time",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional"
        },
        "deletionGracePeriodSeconds": {
          "type": "string",
          "format": "int64",
          "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels\n+optional"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations\n+optional"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OwnerReference"
          },
          "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
        },
        "clusterName": {
          "type": "string",
          "description": "Deprecated: ClusterName is a legacy field that was always cleared by\nthe system and never used; it will be removed completely in 1.25.\n\nThe name in the go struct is changed to help clients detect\naccidental use.\n\n+optional"
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ManagedFieldsEntry"
          },
          "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
    },
    "v1ObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\n+optional"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n+optional"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids\n+optional"
        },
        "apiVersion": {
          "type": "string",
          "title": "API version of the referent.\n+optional"
        },
        "resourceVersion": {
          "type": "string",
          "title": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
        },
        "fieldPath": {
          "type": "string",
          "title": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.\n+optional"
        }
      },
      "title": "ObjectReference contains enough information to let you inspect or modify the referred object.\n---\nNew uses of this type are discouraged because of difficulty describing its usage when embedded in APIs.\n 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage.\n 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular\n    restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\".\n    Those cannot be well described when embedded.\n 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen.\n 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity\n    during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple\n    and the version of the actual struct is irrelevant.\n 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type\n    will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control.\nInstead of using this type, create a locally provided and used type that is well-focused on your reference.\nFor example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+structType=atomic"
    },
    "v1OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "kind": {
          "type": "string",
          "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
        },
        "name": {
          "type": "string",
          "title": "Name of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "uid": {
          "type": "string",
          "title": "UID of the referent.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        },
        "controller": {
          "type": "boolean",
          "title": "If true, this reference points to the managing controller.\n+optional"
        },
        "blockOwnerDeletion": {
          "type": "boolean",
          "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
        }
      },
      "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
    },
    "v1PortStatus": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32",
          "title": "Port is the port number of the service port of which status is recorded here"
        },
        "protocol": {
          "type": "string",
          "title": "Protocol is the protocol of the service port of which status is recorded here\nThe supported values are: \"TCP\", \"UDP\", \"SCTP\""
        },
        "error": {
          "type": "string",
          "title": "Error is to record the problem with the service port\nThe format of the error shall comply with the following rules:\n- built-in error values shall be specified in this file and those shall use\n  CamelCase names\n- cloud provider specific error values must have names that comply with the\n  format foo.example.com/CamelCase.\n---\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)\n+optional\n+kubebuilder:validation:Required\n+kubebuilder:validation:Pattern=`^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$`\n+kubebuilder:validation:MaxLength=316"
        }
      }
    },
    "v1Time": {
      "type": "object",
      "properties": {
        "seconds": {
          "type": "string",
          "format": "int64",
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
        }
      },
      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
    },
    "v1alpha1AWSAuthConfig": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "ClusterName contains AWS cluster name"
        },
        "roleARN": {
          "type": "string",
          "description": "RoleARN contains optional role ARN. If set then AWS IAM Authenticator assume a role to perform cluster operations instead of the default AWS credential provider chain."
        }
      },
      "title": "AWSAuthConfig is an AWS IAM authentication configuration"
    },
    "v1alpha1AppProject": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1AppProjectSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1AppProjectStatus"
        }
      },
      "title": "AppProject provides a logical grouping of applications, providing controls for:\n* where the apps may deploy to (cluster whitelist)\n* what may be deployed (repository whitelist, resource whitelist/blacklist)\n* who can access these applications (roles, OIDC group claims bindings)\n* and what they can do (RBAC policies)\n* automation access to these roles (JWT tokens)\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=appprojects,shortName=appproj;appprojs"
    },
    "v1alpha1AppProjectList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1AppProject"
          }
        }
      },
      "title": "AppProjectList is list of AppProject resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
    },
    "v1alpha1AppProjectSpec": {
      "type": "object",
      "properties": {
        "sourceRepos": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SourceRepos contains list of repository URLs which can be used for deployment"
        },
        "destinations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationDestination"
          },
          "title": "Destinations contains list of destinations available for deployment"
        },
        "description": {
          "type": "string",
          "title": "Description contains optional project description"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ProjectRole"
          },
          "title": "Roles are user defined RBAC roles associated with this project"
        },
        "clusterResourceWhitelist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "ClusterResourceWhitelist contains list of whitelisted cluster level resources"
        },
        "namespaceResourceBlacklist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "NamespaceResourceBlacklist contains list of blacklisted namespace level resources"
        },
        "orphanedResources": {
          "$ref": "#/definitions/v1alpha1OrphanedResourcesMonitorSettings",
          "title": "OrphanedResources specifies if controller should monitor orphaned resources of apps in this project"
        },
        "syncWindows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncWindow"
          },
          "title": "SyncWindows controls when syncs can be run for apps in this project"
        },
        "namespaceResourceWhitelist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "NamespaceResourceWhitelist contains list of whitelisted namespace level resources"
        },
        "signatureKeys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SignatureKey"
          },
          "title": "SignatureKeys contains a list of PGP key IDs that commits in Git must be signed with in order to be allowed for sync"
        },
        "clusterResourceBlacklist": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1GroupKind"
          },
          "title": "ClusterResourceBlacklist contains list of blacklisted cluster level resources"
        }
      },
      "title": "AppProjectSpec is the specification of an AppProject"
    },
    "v1alpha1AppProjectStatus": {
      "type": "object",
      "properties": {
        "jwtTokensByRole": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1alpha1JWTTokens"
          },
          "title": "JWTTokensByRole contains a list of JWT tokens issued for a given role"
        }
      },
      "title": "AppProjectStatus contains status information for AppProject CRs"
    },
    "v1alpha1Application": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/v1alpha1ApplicationSpec"
        },
        "status": {
          "$ref": "#/definitions/v1alpha1ApplicationStatus"
        },
        "operation": {
          "$ref": "#/definitions/v1alpha1Operation"
        }
      },
      "title": "Application is a definition of Application resource.\n+genclient\n+genclient:noStatus\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object\n+kubebuilder:resource:path=applications,shortName=app;apps\n+kubebuilder:printcolumn:name=\"Sync Status\",type=string,JSONPath=`.status.sync.status`\n+kubebuilder:printcolumn:name=\"Health Status\",type=string,JSONPath=`.status.health.status`\n+kubebuilder:printcolumn:name=\"Revision\",type=string,JSONPath=`.status.sync.revision`,priority=10"
    },
    "v1alpha1ApplicationCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type is an application condition type"
        },
        "message": {
          "type": "string",
          "title": "Message contains human-readable message indicating details about condition"
        },
        "lastTransitionTime": {
          "$ref": "#/definitions/v1Time",
          "title": "LastTransitionTime is the time the condition was last observed"
        }
      },
      "title": "ApplicationCondition contains details about an application condition, which is usally an error or warning"
    },
    "v1alpha1ApplicationDestination": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server specifies the URL of the target cluster and must be set to the Kubernetes control plane API"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace for the application's resources.\nThe namespace will only be set for namespace-scoped resources that have not set a value for .metadata.namespace"
        },
        "name": {
          "type": "string",
          "title": "Name is an alternate way of specifying the target cluster by its symbolic name"
        }
      },
      "title": "ApplicationDestination holds information about the application's destination"
    },
    "v1alpha1ApplicationList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Application"
          }
        }
      },
      "title": "ApplicationList is list of Application resources\n+k8s:deepcopy-gen:interfaces=k8s.io/apimachinery/pkg/runtime.Object"
    },
    "v1alpha1ApplicationSource": {
      "type": "object",
      "properties": {
        "repoURL": {
          "type": "string",
          "title": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests"
        },
        "path": {
          "type": "string",
          "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git."
        },
        "targetRevision": {
          "type": "string",
          "description": "TargetRevision defines the revision of the source to sync the application to.\nIn case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD.\nIn case of Helm, this is a semver tag for the Chart's version."
        },
        "helm": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceHelm",
          "title": "Helm holds helm specific options"
        },
        "kustomize": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceKustomize",
          "title": "Kustomize holds kustomize specific options"
        },
        "directory": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceDirectory",
          "title": "Directory holds path/directory specific options"
        },
        "plugin": {
          "$ref": "#/definitions/v1alpha1ApplicationSourcePlugin",
          "title": "ConfigManagementPlugin holds config management plugin specific options"
        },
        "chart": {
          "type": "string",
          "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo."
        }
      },
      "title": "ApplicationSource contains all required information about the source of an application"
    },
    "v1alpha1ApplicationSourceDirectory": {
      "type": "object",
      "properties": {
        "recurse": {
          "type": "boolean",
          "title": "Recurse specifies whether to scan a directory recursively for manifests"
        },
        "jsonnet": {
          "$ref": "#/definitions/v1alpha1ApplicationSourceJsonnet",
          "title": "Jsonnet holds options specific to Jsonnet"
        },
        "exclude": {
          "type": "string",
          "title": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation"
        },
        "include": {
          "type": "string",
          "title": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation"
        }
      },
      "title": "ApplicationSourceDirectory holds options for applications of type plain YAML or Jsonnet"
    },
    "v1alpha1ApplicationSourceHelm": {
      "type": "object",
      "properties": {
        "valueFiles": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ValuesFiles is a list of Helm value files to use when generating a template"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmParameter"
          },
          "title": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation"
        },
        "releaseName": {
          "type": "string",
          "title": "ReleaseName is the Helm release name to use. If omitted it will use the application name"
        },
        "values": {
          "type": "string",
          "title": "Values specifies Helm values to be passed to helm template, typically defined as a block"
        },
        "fileParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HelmFileParameter"
          },
          "title": "FileParameters are file parameters to the helm template"
        },
        "version": {
          "type": "string",
          "title": "Version is the Helm version to use for templating (\"3\")"
        },
        "passCredentials": {
          "type": "boolean",
          "title": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)"
        },
        "ignoreMissingValueFiles": {
          "type": "boolean",
          "title": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values"
        },
        "skipCrds": {
          "type": "boolean",
          "title": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)"
        }
      },
      "title": "ApplicationSourceHelm holds helm specific options"
    },
    "v1alpha1ApplicationSourceJsonnet": {
      "type": "object",
      "properties": {
        "extVars": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "ExtVars is a list of Jsonnet External Variables"
        },
        "tlas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JsonnetVar"
          },
          "title": "TLAS is a list of Jsonnet Top-level Arguments"
        },
        "libs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Additional library search dirs"
        }
      },
      "title": "ApplicationSourceJsonnet holds options specific to applications of type Jsonnet"
    },
    "v1alpha1ApplicationSourceKustomize": {
      "type": "object",
      "properties": {
        "namePrefix": {
          "type": "string",
          "title": "NamePrefix is a prefix appended to resources for Kustomize apps"
        },
        "nameSuffix": {
          "type": "string",
          "title": "NameSuffix is a suffix appended to resources for Kustomize apps"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Images is a list of Kustomize image override specifications"
        },
        "commonLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonLabels is a list of additional labels to add to rendered manifests"
        },
        "version": {
          "type": "string",
          "title": "Version controls which version of Kustomize to use for rendering manifests"
        },
        "commonAnnotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "CommonAnnotations is a list of additional annotations to add to rendered manifests"
        },
        "forceCommonLabels": {
          "type": "boolean",
          "title": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps"
        },
        "forceCommonAnnotations": {
          "type": "boolean",
          "title": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps"
        }
      },
      "title": "ApplicationSourceKustomize holds options specific to an Application source specific to Kustomize"
    },
    "v1alpha1ApplicationSourcePlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationv1alpha1EnvEntry"
          }
        }
      },
      "title": "ApplicationSourcePlugin holds options specific to config management plugins"
    },
    "v1alpha1ApplicationSpec": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the location of the application's manifests or chart"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the target Kubernetes server and namespace"
        },
        "project": {
          "type": "string",
          "description": "Project is a reference to the project this application belongs to.\nThe empty string means that application belongs to the 'default' project."
        },
        "syncPolicy": {
          "$ref": "#/definitions/v1alpha1SyncPolicy",
          "title": "SyncPolicy controls when and how a sync will be performed"
        },
        "ignoreDifferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceIgnoreDifferences"
          },
          "title": "IgnoreDifferences is a list of resources and their fields which should be ignored during comparison"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Info"
          },
          "title": "Info contains a list of information (URLs, email addresses, and plain text) that relates to the application"
        },
        "revisionHistoryLimit": {
          "type": "string",
          "format": "int64",
          "description": "RevisionHistoryLimit limits the number of items kept in the application's revision history, which is used for informational purposes as well as for rollbacks to previous versions.\nThis should only be changed in exceptional circumstances.\nSetting to zero will store no history. This will reduce storage used.\nIncreasing will increase the space used to store the history, so we do not recommend increasing it.\nDefault is 10."
        }
      },
      "description": "ApplicationSpec represents desired application state. Contains link to repository with application definition and additional parameters link definition revision."
    },
    "v1alpha1ApplicationStatus": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceStatus"
          },
          "title": "Resources is a list of Kubernetes resources managed by this application"
        },
        "sync": {
          "$ref": "#/definitions/v1alpha1SyncStatus",
          "title": "Sync contains information about the application's current sync status"
        },
        "health": {
          "$ref": "#/definitions/v1alpha1HealthStatus",
          "title": "Health contains information about the application's current health status"
        },
        "history": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RevisionHistory"
          },
          "title": "History contains information about the application's sync history"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ApplicationCondition"
          },
          "title": "Conditions is a list of currently observed application conditions"
        },
        "reconciledAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ReconciledAt indicates when the application state was reconciled using the latest git version"
        },
        "operationState": {
          "$ref": "#/definitions/v1alpha1OperationState",
          "title": "OperationState contains information about any ongoing operations, such as a sync"
        },
        "observedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ObservedAt indicates when the application state was updated without querying latest git state\nDeprecated: controller no longer updates ObservedAt field"
        },
        "sourceType": {
          "type": "string",
          "title": "SourceType specifies the type of this application"
        },
        "summary": {
          "$ref": "#/definitions/v1alpha1ApplicationSummary",
          "title": "Summary contains a list of URLs and container images used by this application"
        }
      },
      "title": "ApplicationStatus contains status information for the application"
    },
    "v1alpha1ApplicationSummary": {
      "type": "object",
      "properties": {
        "externalURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalURLs holds all external URLs of application child resources."
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Images holds all images of application child resources."
        }
      },
      "title": "ApplicationSummary contains information about URLs and container images used by an application"
    },
    "v1alpha1ApplicationTree": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceNode"
          },
          "description": "Nodes contains list of nodes which either directly managed by the application and children of directly managed nodes."
        },
        "orphanedNodes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceNode"
          },
          "description": "OrphanedNodes contains if or orphaned nodes: nodes which are not managed by the app but in the same namespace. List is populated only if orphaned resources enabled in app project."
        },
        "hosts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HostInfo"
          },
          "title": "Hosts holds list of Kubernetes nodes that run application related pods"
        }
      },
      "title": "ApplicationTree holds nodes which belongs to the application\nTODO: describe purpose of this type"
    },
    "v1alpha1ApplicationWatchEvent": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "application": {
          "$ref": "#/definitions/v1alpha1Application",
          "description": "Application is:\n * If Type is Added or Modified: the new state of the object.\n * If Type is Deleted: the state of the object immediately before deletion.\n * If Type is Error: *api.Status is recommended; other types may make sense\n   depending on context."
        }
      },
      "description": "ApplicationWatchEvent contains information about application change."
    },
    "v1alpha1Backoff": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "string",
          "title": "Duration is the amount to back off. Default unit is seconds, but could also be a duration (e.g. \"2m\", \"1h\")"
        },
        "factor": {
          "type": "string",
          "format": "int64",
          "title": "Factor is a factor to multiply the base duration after each failed retry"
        },
        "maxDuration": {
          "type": "string",
          "title": "MaxDuration is the maximum amount of time allowed for the backoff strategy"
        }
      },
      "title": "Backoff is the backoff strategy to use on subsequent retries for failing syncs"
    },
    "v1alpha1Cluster": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "title": "Server is the API server URL of the Kubernetes cluster"
        },
        "name": {
          "type": "string",
          "title": "Name of the cluster. If omitted, will use the server address"
        },
        "config": {
          "$ref": "#/definitions/v1alpha1ClusterConfig",
          "title": "Config holds cluster information for connecting to a cluster"
        },
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "DEPRECATED: use Info.ConnectionState field instead.\nConnectionState contains information about cluster connection state"
        },
        "serverVersion": {
          "type": "string",
          "title": "DEPRECATED: use Info.ServerVersion field instead.\nThe server version"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Holds list of namespaces which are accessible in that cluster. Cluster level resources will be ignored if namespace list is not empty."
        },
        "refreshRequestedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "RefreshRequestedAt holds time when cluster cache refresh has been requested"
        },
        "info": {
          "$ref": "#/definitions/v1alpha1ClusterInfo",
          "title": "Info holds information about cluster cache and state"
        },
        "shard": {
          "type": "string",
          "format": "int64",
          "description": "Shard contains optional shard number. Calculated on the fly by the application controller if not specified."
        },
        "clusterResources": {
          "type": "boolean",
          "description": "Indicates if cluster level resources should be managed. This setting is used only if cluster is connected in a namespaced mode."
        },
        "project": {
          "type": "string",
          "title": "Reference between project and cluster that allow you automatically to be added as item inside Destinations project entity"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Labels for cluster secret metadata"
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Annotations for cluster secret metadata"
        }
      },
      "title": "Cluster is the definition of a cluster resource"
    },
    "v1alpha1ClusterCacheInfo": {
      "type": "object",
      "properties": {
        "resourcesCount": {
          "type": "string",
          "format": "int64",
          "title": "ResourcesCount holds number of observed Kubernetes resources"
        },
        "apisCount": {
          "type": "string",
          "format": "int64",
          "title": "APIsCount holds number of observed Kubernetes API count"
        },
        "lastCacheSyncTime": {
          "$ref": "#/definitions/v1Time",
          "title": "LastCacheSyncTime holds time of most recent cache synchronization"
        }
      },
      "title": "ClusterCacheInfo contains information about the cluster cache"
    },
    "v1alpha1ClusterConfig": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Server requires Basic authentication"
        },
        "password": {
          "type": "string"
        },
        "bearerToken": {
          "type": "string",
          "description": "Server requires Bearer authentication. This client will not attempt to use\nrefresh tokens for an OAuth2 flow.\nTODO: demonstrate an OAuth2 compatible client."
        },
        "tlsClientConfig": {
          "$ref": "#/definitions/v1alpha1TLSClientConfig",
          "title": "TLSClientConfig contains settings to enable transport layer security"
        },
        "awsAuthConfig": {
          "$ref": "#/definitions/v1alpha1AWSAuthConfig",
          "title": "AWSAuthConfig contains IAM authentication configuration"
        },
        "execProviderConfig": {
          "$ref": "#/definitions/v1alpha1ExecProviderConfig",
          "title": "ExecProviderConfig contains configuration for an exec provider"
        }
      },
      "description": "ClusterConfig is the configuration attributes. This structure is subset of the go-client\nrest.Config with annotations added for marshalling."
    },
    "v1alpha1ClusterInfo": {
      "type": "object",
      "properties": {
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "ConnectionState contains information about the connection to the cluster"
        },
        "serverVersion": {
          "type": "string",
          "title": "ServerVersion contains information about the Kubernetes version of the cluster"
        },
        "cacheInfo": {
          "$ref": "#/definitions/v1alpha1ClusterCacheInfo",
          "title": "CacheInfo contains information about the cluster cache"
        },
        "applicationsCount": {
          "type": "string",
          "format": "int64",
          "title": "ApplicationsCount is the number of applications managed by Argo CD on the cluster"
        },
        "apiVersions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "APIVersions contains list of API versions supported by the cluster"
        }
      },
      "title": "ClusterInfo contains information about the cluster"
    },
    "v1alpha1ClusterList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Cluster"
          }
        }
      },
      "description": "ClusterList is a collection of Clusters."
    },
    "v1alpha1Command": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Command holds binary path and arguments list"
    },
    "v1alpha1ComparedTo": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application's source used for comparison"
        },
        "destination": {
          "$ref": "#/definitions/v1alpha1ApplicationDestination",
          "title": "Destination is a reference to the application's destination used for comparison"
        }
      },
      "title": "ComparedTo contains application source and target which was used for resources comparison"
    },
    "v1alpha1ConfigManagementPlugin": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "init": {
          "$ref": "#/definitions/v1alpha1Command"
        },
        "generate": {
          "$ref": "#/definitions/v1alpha1Command"
        },
        "lockRepo": {
          "type": "boolean"
        }
      },
      "title": "ConfigManagementPlugin contains config management plugin configuration"
    },
    "v1alpha1ConnectionState": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status contains the current status indicator for the connection"
        },
        "message": {
          "type": "string",
          "title": "Message contains human readable information about the connection status"
        },
        "attemptedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "ModifiedAt contains the timestamp when this connection status has been determined"
        }
      },
      "title": "ConnectionState contains information about remote resource connection state, currently used for clusters and repositories"
    },
    "v1alpha1ExecProviderConfig": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "title": "Command to execute"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Arguments to pass to the command when executing it"
        },
        "env": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "title": "Env defines additional environment variables to expose to the process"
        },
        "apiVersion": {
          "type": "string",
          "title": "Preferred input version of the ExecInfo"
        },
        "installHint": {
          "type": "string",
          "title": "This text is shown to the user when the executable doesn't seem to be present"
        }
      },
      "title": "ExecProviderConfig is config used to call an external command to perform cluster authentication\nSee: https://godoc.org/k8s.io/client-go/tools/clientcmd/api#ExecConfig"
    },
    "v1alpha1GnuPGPublicKey": {
      "type": "object",
      "properties": {
        "keyID": {
          "type": "string",
          "title": "KeyID specifies the key ID, in hexadecimal string format"
        },
        "fingerprint": {
          "type": "string",
          "title": "Fingerprint is the fingerprint of the key"
        },
        "owner": {
          "type": "string",
          "title": "Owner holds the owner identification, e.g. a name and e-mail address"
        },
        "trust": {
          "type": "string",
          "title": "Trust holds the level of trust assigned to this key"
        },
        "subType": {
          "type": "string",
          "title": "SubType holds the key's sub type (e.g. rsa4096)"
        },
        "keyData": {
          "type": "string",
          "title": "KeyData holds the raw key data, in base64 encoded format"
        }
      },
      "title": "GnuPGPublicKey is a representation of a GnuPG public key"
    },
    "v1alpha1GnuPGPublicKeyList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1GnuPGPublicKey"
          }
        }
      },
      "title": "GnuPGPublicKeyList is a collection of GnuPGPublicKey objects"
    },
    "v1alpha1HealthStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status holds the status code of the application or resource"
        },
        "message": {
          "type": "string",
          "title": "Message is a human-readable informational message describing the health status"
        }
      },
      "title": "HealthStatus contains information about the currently observed health state of an application or resource"
    },
    "v1alpha1HelmFileParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "path": {
          "type": "string",
          "title": "Path is the path to the file containing the values for the Helm parameter"
        }
      },
      "title": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HelmOptions": {
      "type": "object",
      "properties": {
        "valuesFileSchemes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "HelmOptions holds helm options"
    },
    "v1alpha1HelmParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is the name of the Helm parameter"
        },
        "value": {
          "type": "string",
          "title": "Value is the value for the Helm parameter"
        },
        "forceString": {
          "type": "boolean",
          "title": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings"
        }
      },
      "title": "HelmParameter is a parameter that's passed to helm template during manifest generation"
    },
    "v1alpha1HostInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourcesInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1HostResourceInfo"
          }
        },
        "systemInfo": {
          "$ref": "#/definitions/v1NodeSystemInfo"
        }
      },
      "title": "HostInfo holds host name and resources metrics\nTODO: describe purpose of this type\nTODO: describe members of this type"
    },
    "v1alpha1HostResourceInfo": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "requestedByApp": {
          "type": "string",
          "format": "int64"
        },
        "requestedByNeighbors": {
          "type": "string",
          "format": "int64"
        },
        "capacity": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "TODO: describe this type"
    },
    "v1alpha1Info": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1alpha1InfoItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name is a human readable title for this piece of information."
        },
        "value": {
          "type": "string",
          "description": "Value is human readable content."
        }
      },
      "title": "InfoItem contains arbitrary, human readable information about an application"
    },
    "v1alpha1JWTToken": {
      "type": "object",
      "properties": {
        "iat": {
          "type": "string",
          "format": "int64"
        },
        "exp": {
          "type": "string",
          "format": "int64"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "JWTToken holds the issuedAt and expiresAt values of a token"
    },
    "v1alpha1JWTTokens": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JWTToken"
          }
        }
      },
      "title": "JWTTokens represents a list of JWT tokens"
    },
    "v1alpha1JsonnetVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "code": {
          "type": "boolean"
        }
      },
      "title": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation"
    },
    "v1alpha1KnownTypeField": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "KnownTypeField contains mapping between CRD field and known Kubernetes type.\nThis is mainly used for unit conversion in unknown resources (e.g. 0.1 == 100mi)\nTODO: Describe the members of this type"
    },
    "v1alpha1KustomizeOptions": {
      "type": "object",
      "properties": {
        "buildOptions": {
          "type": "string",
          "title": "BuildOptions is a string of build parameters to use when calling `kustomize build`"
        },
        "binaryPath": {
          "type": "string",
          "title": "BinaryPath holds optional path to kustomize binary"
        }
      },
      "title": "KustomizeOptions are options for kustomize to use when building manifests"
    },
    "v1alpha1Operation": {
      "type": "object",
      "properties": {
        "sync": {
          "$ref": "#/definitions/v1alpha1SyncOperation",
          "title": "Sync contains parameters for the operation"
        },
        "initiatedBy": {
          "$ref": "#/definitions/v1alpha1OperationInitiator",
          "title": "InitiatedBy contains information about who initiated the operations"
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Info"
          },
          "title": "Info is a list of informational items for this operation"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls the strategy to apply if a sync fails"
        }
      },
      "title": "Operation contains information about a requested or running operation"
    },
    "v1alpha1OperationInitiator": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "Username contains the name of a user who started operation"
        },
        "automated": {
          "type": "boolean",
          "description": "Automated is set to true if operation was initiated automatically by the application controller."
        }
      },
      "title": "OperationInitiator contains information about the initiator of an operation"
    },
    "v1alpha1OperationState": {
      "type": "object",
      "properties": {
        "operation": {
          "$ref": "#/definitions/v1alpha1Operation",
          "title": "Operation is the original requested operation"
        },
        "phase": {
          "type": "string",
          "title": "Phase is the current phase of the operation"
        },
        "message": {
          "type": "string",
          "description": "Message holds any pertinent messages when attempting to perform operation (typically errors)."
        },
        "syncResult": {
          "$ref": "#/definitions/v1alpha1SyncOperationResult",
          "title": "SyncResult is the result of a Sync operation"
        },
        "startedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "StartedAt contains time of operation start"
        },
        "finishedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "FinishedAt contains time of operation completion"
        },
        "retryCount": {
          "type": "string",
          "format": "int64",
          "title": "RetryCount contains time of operation retries"
        }
      },
      "title": "OperationState contains information about state of a running operation"
    },
    "v1alpha1OrphanedResourceKey": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "OrphanedResourceKey is a reference to a resource to be ignored from"
    },
    "v1alpha1OrphanedResourcesMonitorSettings": {
      "type": "object",
      "properties": {
        "warn": {
          "type": "boolean",
          "title": "Warn indicates if warning condition should be created for apps which have orphaned resources"
        },
        "ignore": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1OrphanedResourceKey"
          },
          "title": "Ignore contains a list of resources that are to be excluded from orphaned resources monitoring"
        }
      },
      "title": "OrphanedResourcesMonitorSettings holds settings of orphaned resources monitoring"
    },
    "v1alpha1OverrideIgnoreDiff": {
      "type": "object",
      "properties": {
        "jSONPointers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "JSONPointers is a JSON path list following the format defined in RFC4627 (https://datatracker.ietf.org/doc/html/rfc6902#section-3)"
        },
        "jqPathExpressions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "JQPathExpressions is a JQ path list that will be evaludated during the diff process"
        },
        "managedFieldsManagers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs"
        }
      },
      "title": "OverrideIgnoreDiff contains configurations about how fields should be ignored during diffs between\nthe desired state and live state"
    },
    "v1alpha1ProjectRole": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name is a name for this role"
        },
        "description": {
          "type": "string",
          "title": "Description is a description of the role"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Policies Stores a list of casbin formatted strings that define access policies for the role in the project"
        },
        "jwtTokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1JWTToken"
          },
          "title": "JWTTokens are a list of generated JWT tokens bound to this role"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Groups are a list of OIDC group claims bound to this role"
        }
      },
      "title": "ProjectRole represents a role that has access to a project"
    },
    "v1alpha1RepoCreds": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "title": "URL is the URL that this credentials matches to"
        },
        "username": {
          "type": "string",
          "title": "Username for authenticating at the repo server"
        },
        "password": {
          "type": "string",
          "title": "Password for authenticating at the repo server"
        },
        "sshPrivateKey": {
          "type": "string",
          "title": "SSHPrivateKey contains the private key data for authenticating at the repo server using SSH (only Git repos)"
        },
        "tlsClientCertData": {
          "type": "string",
          "title": "TLSClientCertData specifies the TLS client cert data for authenticating at the repo server"
        },
        "tlsClientCertKey": {
          "type": "string",
          "title": "TLSClientCertKey specifies the TLS client cert key for authenticating at the repo server"
        },
        "githubAppPrivateKey": {
          "type": "string",
          "title": "GithubAppPrivateKey specifies the private key PEM data for authentication via GitHub app"
        },
        "githubAppID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppId specifies the Github App ID of the app used to access the repo for GitHub app authentication"
        },
        "githubAppInstallationID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppInstallationId specifies the ID of the installed GitHub App for GitHub app authentication"
        },
        "githubAppEnterpriseBaseUrl": {
          "type": "string",
          "title": "GithubAppEnterpriseBaseURL specifies the GitHub API URL for GitHub app authentication. If empty will default to https://api.github.com"
        },
        "enableOCI": {
          "type": "boolean",
          "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
        },
        "type": {
          "type": "string",
          "description": "Type specifies the type of the repoCreds. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
        }
      },
      "title": "RepoCreds holds the definition for repository credentials"
    },
    "v1alpha1RepoCredsList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RepoCreds"
          }
        }
      },
      "description": "RepositoryList is a collection of Repositories."
    },
    "v1alpha1Repository": {
      "type": "object",
      "properties": {
        "repo": {
          "type": "string",
          "title": "Repo contains the URL to the remote repository"
        },
        "username": {
          "type": "string",
          "title": "Username contains the user name used for authenticating at the remote repository"
        },
        "password": {
          "type": "string",
          "title": "Password contains the password or PAT used for authenticating at the remote repository"
        },
        "sshPrivateKey": {
          "type": "string",
          "description": "SSHPrivateKey contains the PEM data for authenticating at the repo server. Only used with Git repos."
        },
        "connectionState": {
          "$ref": "#/definitions/v1alpha1ConnectionState",
          "title": "ConnectionState contains information about the current state of connection to the repository server"
        },
        "insecureIgnoreHostKey": {
          "type": "boolean",
          "title": "InsecureIgnoreHostKey should not be used anymore, Insecure is favoured\nUsed only for Git repos"
        },
        "insecure": {
          "type": "boolean",
          "title": "Insecure specifies whether the connection to the repository ignores any errors when verifying TLS certificates or SSH host keys"
        },
        "enableLfs": {
          "type": "boolean",
          "description": "EnableLFS specifies whether git-lfs support should be enabled for this repo. Only valid for Git repositories."
        },
        "tlsClientCertData": {
          "type": "string",
          "title": "TLSClientCertData contains a certificate in PEM format for authenticating at the repo server"
        },
        "tlsClientCertKey": {
          "type": "string",
          "title": "TLSClientCertKey contains a private key in PEM format for authenticating at the repo server"
        },
        "type": {
          "type": "string",
          "description": "Type specifies the type of the repo. Can be either \"git\" or \"helm. \"git\" is assumed if empty or absent."
        },
        "name": {
          "type": "string",
          "title": "Name specifies a name to be used for this repo. Only used with Helm repos"
        },
        "inheritedCreds": {
          "type": "boolean",
          "title": "Whether credentials were inherited from a credential set"
        },
        "enableOCI": {
          "type": "boolean",
          "title": "EnableOCI specifies whether helm-oci support should be enabled for this repo"
        },
        "githubAppPrivateKey": {
          "type": "string",
          "title": "Github App Private Key PEM data"
        },
        "githubAppID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppId specifies the ID of the GitHub app used to access the repo"
        },
        "githubAppInstallationID": {
          "type": "string",
          "format": "int64",
          "title": "GithubAppInstallationId specifies the installation ID of the GitHub App used to access the repo"
        },
        "githubAppEnterpriseBaseUrl": {
          "type": "string",
          "title": "GithubAppEnterpriseBaseURL specifies the base URL of GitHub Enterprise installation. If empty will default to https://api.github.com"
        },
        "proxy": {
          "type": "string",
          "title": "Proxy specifies the HTTP/HTTPS proxy used to access the repo"
        },
        "project": {
          "type": "string",
          "title": "Reference between project and repository that allow you automatically to be added as item inside SourceRepos project entity"
        }
      },
      "title": "Repository is a repository holding application configurations"
    },
    "v1alpha1RepositoryCertificate": {
      "type": "object",
      "properties": {
        "serverName": {
          "type": "string",
          "title": "ServerName specifies the DNS name of the server this certificate is intended for"
        },
        "certType": {
          "type": "string",
          "title": "CertType specifies the type of the certificate - currently one of \"https\" or \"ssh\""
        },
        "certSubType": {
          "type": "string",
          "title": "CertSubType specifies the sub type of the cert, i.e. \"ssh-rsa\""
        },
        "certData": {
          "type": "string",
          "format": "byte",
          "title": "CertData contains the actual certificate data, dependent on the certificate type"
        },
        "certInfo": {
          "type": "string",
          "title": "CertInfo will hold additional certificate info, depdendent on the certificate type (e.g. SSH fingerprint, X509 CommonName)"
        }
      },
      "title": "A RepositoryCertificate is either SSH known hosts entry or TLS certificate"
    },
    "v1alpha1RepositoryCertificateList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1RepositoryCertificate"
          },
          "title": "List of certificates to be processed"
        }
      },
      "title": "RepositoryCertificateList is a collection of RepositoryCertificates"
    },
    "v1alpha1RepositoryList": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/v1ListMeta"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1Repository"
          }
        }
      },
      "description": "RepositoryList is a collection of Repositories."
    },
    "v1alpha1ResourceAction": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceActionParam"
          }
        },
        "disabled": {
          "type": "boolean"
        }
      },
      "title": "TODO: describe this type\nTODO: describe members of this type"
    },
    "v1alpha1ResourceActionParam": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "default": {
          "type": "string"
        }
      },
      "title": "TODO: describe this type\nTODO: describe members of this type"
    },
    "v1alpha1ResourceDiff": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "targetState": {
          "type": "string",
          "title": "TargetState contains the JSON serialized resource manifest defined in the Git/Helm"
        },
        "liveState": {
          "type": "string",
          "title": "TargetState contains the JSON live resource manifest"
        },
        "diff": {
          "type": "string",
          "title": "Diff contains the JSON patch between target and live resource\nDeprecated: use NormalizedLiveState and PredictedLiveState to render the difference"
        },
        "hook": {
          "type": "boolean"
        },
        "normalizedLiveState": {
          "type": "string",
          "title": "NormalizedLiveState contains JSON serialized live resource state with applied normalizations"
        },
        "predictedLiveState": {
          "type": "string",
          "title": "PredictedLiveState contains JSON serialized resource state that is calculated based on normalized and target resource state"
        },
        "resourceVersion": {
          "type": "string"
        },
        "modified": {
          "type": "boolean"
        }
      },
      "title": "ResourceDiff holds the diff of a live and target resource object\nTODO: describe members of this type"
    },
    "v1alpha1ResourceIgnoreDifferences": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "jsonPointers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "jqPathExpressions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "managedFieldsManagers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "ManagedFieldsManagers is a list of trusted managers. Fields mutated by those managers will take precedence over the\ndesired state defined in the SCM and won't be displayed in diffs"
        }
      },
      "description": "ResourceIgnoreDifferences contains resource filter and list of json paths which should be ignored during comparison with live state."
    },
    "v1alpha1ResourceNetworkingInfo": {
      "type": "object",
      "properties": {
        "targetLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "targetRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceRef"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1LoadBalancerIngress"
          }
        },
        "externalURLs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "ExternalURLs holds list of URLs which should be available externally. List is populated for ingress resources using rules hostnames."
        }
      },
      "title": "ResourceNetworkingInfo holds networking resource related information\nTODO: describe members of this type"
    },
    "v1alpha1ResourceNode": {
      "type": "object",
      "properties": {
        "resourceRef": {
          "$ref": "#/definitions/v1alpha1ResourceRef"
        },
        "parentRefs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceRef"
          }
        },
        "info": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1InfoItem"
          }
        },
        "networkingInfo": {
          "$ref": "#/definitions/v1alpha1ResourceNetworkingInfo"
        },
        "resourceVersion": {
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "health": {
          "$ref": "#/definitions/v1alpha1HealthStatus"
        },
        "createdAt": {
          "$ref": "#/definitions/v1Time"
        }
      },
      "title": "ResourceNode contains information about live resource and its children\nTODO: describe members of this type"
    },
    "v1alpha1ResourceOverride": {
      "type": "object",
      "properties": {
        "healthLua": {
          "type": "string"
        },
        "useOpenLibs": {
          "type": "boolean"
        },
        "actions": {
          "type": "string"
        },
        "ignoreDifferences": {
          "$ref": "#/definitions/v1alpha1OverrideIgnoreDiff"
        },
        "knownTypeFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1KnownTypeField"
          }
        }
      },
      "title": "ResourceOverride holds configuration to customize resource diffing and health assessment\nTODO: describe the members of this type"
    },
    "v1alpha1ResourceRef": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "title": "ResourceRef includes fields which uniquely identify a resource"
    },
    "v1alpha1ResourceResult": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string",
          "title": "Group specifies the API group of the resource"
        },
        "version": {
          "type": "string",
          "title": "Version specifies the API version of the resource"
        },
        "kind": {
          "type": "string",
          "title": "Kind specifies the API kind of the resource"
        },
        "namespace": {
          "type": "string",
          "title": "Namespace specifies the target namespace of the resource"
        },
        "name": {
          "type": "string",
          "title": "Name specifies the name of the resource"
        },
        "status": {
          "type": "string",
          "title": "Status holds the final result of the sync. Will be empty if the resources is yet to be applied/pruned and is always zero-value for hooks"
        },
        "message": {
          "type": "string",
          "title": "Message contains an informational or error message for the last sync OR operation"
        },
        "hookType": {
          "type": "string",
          "title": "HookType specifies the type of the hook. Empty for non-hook resources"
        },
        "hookPhase": {
          "type": "string",
          "description": "HookPhase contains the state of any operation associated with this resource OR hook\nThis can also contain values for non-hook resources."
        },
        "syncPhase": {
          "type": "string",
          "title": "SyncPhase indicates the particular phase of the sync that this result was acquired in"
        }
      },
      "title": "ResourceResult holds the operation result details of a specific resource"
    },
    "v1alpha1ResourceStatus": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "health": {
          "$ref": "#/definitions/v1alpha1HealthStatus"
        },
        "hook": {
          "type": "boolean"
        },
        "requiresPruning": {
          "type": "boolean"
        }
      },
      "title": "ResourceStatus holds the current sync and health status of a resource\nTODO: describe members of this type"
    },
    "v1alpha1RetryStrategy": {
      "type": "object",
      "properties": {
        "limit": {
          "type": "string",
          "format": "int64",
          "description": "Limit is the maximum number of attempts for retrying a failed sync. If set to 0, no retries will be performed."
        },
        "backoff": {
          "$ref": "#/definitions/v1alpha1Backoff",
          "title": "Backoff controls how to backoff on subsequent retries of failed syncs"
        }
      },
      "title": "RetryStrategy contains information about the strategy to apply when a sync failed"
    },
    "v1alpha1RevisionHistory": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "title": "Revision holds the revision the sync was performed against"
        },
        "deployedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployedAt holds the time the sync operation completed"
        },
        "id": {
          "type": "string",
          "format": "int64",
          "title": "ID is an auto incrementing identifier of the RevisionHistory"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source is a reference to the application source used for the sync operation"
        },
        "deployStartedAt": {
          "$ref": "#/definitions/v1Time",
          "title": "DeployStartedAt holds the time the sync operation started"
        }
      },
      "title": "RevisionHistory contains history information about a previous sync"
    },
    "v1alpha1RevisionMetadata": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string",
          "title": "who authored this revision,\ntypically their name and email, e.g. \"John Doe \u003cjohn_doe@my-company.com\u003e\",\nbut might not match this example"
        },
        "date": {
          "$ref": "#/definitions/v1Time",
          "title": "Date specifies when the revision was authored"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Tags specifies any tags currently attached to the revision\nFloating tags can move from one revision to another"
        },
        "message": {
          "type": "string",
          "title": "Message contains the message associated with the revision, most likely the commit message.\nThe message is truncated to the first newline or 64 characters (which ever comes first)"
        },
        "signatureInfo": {
          "type": "string",
          "description": "SignatureInfo contains a hint on the signer if the revision was signed with GPG, and signature verification is enabled."
        }
      },
      "title": "RevisionMetadata contains metadata for a specific revision in a Git repository"
    },
    "v1alpha1SignatureKey": {
      "type": "object",
      "properties": {
        "keyID": {
          "type": "string",
          "title": "The ID of the key in hexadecimal notation"
        }
      },
      "title": "SignatureKey is the specification of a key required to verify commit signatures with"
    },
    "v1alpha1SyncOperation": {
      "type": "object",
      "properties": {
        "revision": {
          "type": "string",
          "description": "Revision is the revision (Git) or chart version (Helm) which to sync the application to\nIf omitted, will use the revision specified in app spec."
        },
        "prune": {
          "type": "boolean",
          "title": "Prune specifies to delete resources from the cluster that are no longer tracked in git"
        },
        "dryRun": {
          "type": "boolean",
          "title": "DryRun specifies to perform a `kubectl apply --dry-run` without actually performing the sync"
        },
        "syncStrategy": {
          "$ref": "#/definitions/v1alpha1SyncStrategy",
          "title": "SyncStrategy describes how to perform the sync"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1SyncOperationResource"
          },
          "title": "Resources describes which resources shall be part of the sync"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source overrides the source definition set in the application.\nThis is typically set in a Rollback operation and is nil during a Sync operation"
        },
        "manifests": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Manifests is an optional field that overrides sync source with a local directory for development"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "SyncOptions provide per-sync sync-options, e.g. Validate=false"
        }
      },
      "description": "SyncOperation contains details about a sync operation."
    },
    "v1alpha1SyncOperationResource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "description": "SyncOperationResource contains resources to sync."
    },
    "v1alpha1SyncOperationResult": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alpha1ResourceResult"
          },
          "title": "Resources contains a list of sync result items for each individual resource in a sync operation"
        },
        "revision": {
          "type": "string",
          "title": "Revision holds the revision this sync operation was performed to"
        },
        "source": {
          "$ref": "#/definitions/v1alpha1ApplicationSource",
          "title": "Source records the application source information of the sync, used for comparing auto-sync"
        }
      },
      "title": "SyncOperationResult represent result of sync operation"
    },
    "v1alpha1SyncPolicy": {
      "type": "object",
      "properties": {
        "automated": {
          "$ref": "#/definitions/v1alpha1SyncPolicyAutomated",
          "title": "Automated will keep an application synced to the target revision"
        },
        "syncOptions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Options allow you to specify whole app sync-options"
        },
        "retry": {
          "$ref": "#/definitions/v1alpha1RetryStrategy",
          "title": "Retry controls failed sync retry behavior"
        }
      },
      "title": "SyncPolicy controls when a sync will be performed in response to updates in git"
    },
    "v1alpha1SyncPolicyAutomated": {
      "type": "object",
      "properties": {
        "prune": {
          "type": "boolean",
          "title": "Prune specifies whether to delete resources from the cluster that are not found in the sources anymore as part of automated sync (default: false)"
        },
        "selfHeal": {
          "type": "boolean",
          "title": "SelfHeal specifes whether to revert resources back to their desired state upon modification in the cluster (default: false)"
        },
        "allowEmpty": {
          "type": "boolean",
          "title": "AllowEmpty allows apps have zero live resources (default: false)"
        }
      },
      "title": "SyncPolicyAutomated controls the behavior of an automated sync"
    },
    "v1alpha1SyncStatus": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "Status is the sync state of the comparison"
        },
        "comparedTo": {
          "$ref": "#/definitions/v1alpha1ComparedTo",
          "title": "ComparedTo contains information about what has been compared"
        },
        "revision": {
          "type": "string",
          "title": "Revision contains information about the revision the comparison has been performed to"
        }
      },
      "title": "SyncStatus contains information about the currently observed live and desired states of an application"
    },
    "v1alpha1SyncStrategy": {
      "type": "object",
      "properties": {
        "apply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "description": "Apply will perform a `kubectl apply` to perform the sync."
        },
        "hook": {
          "$ref": "#/definitions/v1alpha1SyncStrategyHook",
          "title": "Hook will submit any referenced resources to perform the sync. This is the default strategy"
        }
      },
      "title": "SyncStrategy controls the manner in which a sync is performed"
    },
    "v1alpha1SyncStrategyApply": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "Force indicates whether or not to supply the --force flag to `kubectl apply`.\nThe --force flag deletes and re-create the resource, when PATCH encounters conflict and has\nretried for 5 times."
        }
      },
      "title": "SyncStrategyApply uses `kubectl apply` to perform the apply"
    },
    "v1alpha1SyncStrategyHook": {
      "type": "object",
      "properties": {
        "syncStrategyApply": {
          "$ref": "#/definitions/v1alpha1SyncStrategyApply",
          "title": "Embed SyncStrategyApply type to inherit any `apply` options\n+optional"
        }
      },
      "description": "SyncStrategyHook will perform a sync using hooks annotations.\nIf no hook annotation is specified falls back to `kubectl apply`."
    },
    "v1alpha1SyncWindow": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "title": "Kind defines if the window allows or blocks syncs"
        },
        "schedule": {
          "type": "string",
          "title": "Schedule is the time the window will begin, specified in cron format"
        },
        "duration": {
          "type": "string",
          "title": "Duration is the amount of time the sync window will be open"
        },
        "applications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Applications contains a list of applications that the window will apply to"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Namespaces contains a list of namespaces that the window will apply to"
        },
        "clusters": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Clusters contains a list of clusters that the window will apply to"
        },
        "manualSync": {
          "type": "boolean",
          "title": "ManualSync enables manual syncs when they would otherwise be blocked"
        },
        "timeZone": {
          "type": "string",
          "title": "TimeZone of the sync that will be applied to the schedule"
        }
      },
      "title": "SyncWindow contains the kind, time, duration and attributes that are used to assign the syncWindows to apps"
    },
    "v1alpha1TLSClientConfig": {
      "type": "object",
      "properties": {
        "insecure": {
          "type": "boolean",
          "description": "Insecure specifies that the server should be accessed without verifying the TLS certificate. For testing only."
        },
        "serverName": {
          "type": "string",
          "description": "ServerName is passed to the server for SNI and is used in the client to check server\ncertificates against. If ServerName is empty, the hostname used to contact the\nserver is used."
        },
        "certData": {
          "type": "string",
          "format": "byte",
          "title": "CertData holds PEM-encoded bytes (typically read from a client certificate file).\nCertData takes precedence over CertFile"
        },
        "keyData": {
          "type": "string",
          "format": "byte",
          "title": "KeyData holds PEM-encoded bytes (typically read from a client certificate key file).\nKeyData takes precedence over KeyFile"
        },
        "caData": {
          "type": "string",
          "format": "byte",
          "title": "CAData holds PEM-encoded bytes (typically read from a root certificates bundle).\nCAData takes precedence over CAFile"
        }
      },
      "title": "TLSClientConfig contains settings to enable transport layer security"
    },
    "versionVersionMessage": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string"
        },
        "BuildDate": {
          "type": "string"
        },
        "GitCommit": {
          "type": "string"
        },
        "GitTag": {
          "type": "string"
        },
        "GitTreeState": {
          "type": "string"
        },
        "GoVersion": {
          "type": "string"
        },
        "Compiler": {
          "type": "string"
        },
        "Platform": {
          "type": "string"
        },
        "KustomizeVersion": {
          "type": "string"
        },
        "HelmVersion": {
          "type": "string"
        },
        "KubectlVersion": {
          "type": "string"
        },
        "JsonnetVersion": {
          "type": "string"
        }
      },
      "title": "VersionMessage represents version of the Argo CD API server"
    }
  }
}
