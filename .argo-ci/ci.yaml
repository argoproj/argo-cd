apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argo-cd-ci-
spec:
  entrypoint: argo-cd-ci
  arguments:
    parameters:
    - name: revision
      value: master
    - name: repo
      value: https://github.com/argoproj/argo-cd.git
  volumes:
    - name: k3setc
      emptyDir: {}
    - name: k3svar
      emptyDir: {}
    - name: tmp
      emptyDir: {}

  templates:
  - name: argo-cd-ci
    steps:
    - - name: build-e2e
        template: build-e2e

      - name: test
        template: ci-builder
        arguments:
          parameters:
          - name: cmd
            value: "dep ensure && make lint test && bash <(curl -s https://codecov.io/bash) -f coverage.out"

  # The step builds argo cd image, deploy argo cd components into throw-away kubernetes cluster provisioned using k3s and run e2e tests against it.
  - name: build-e2e
    inputs:
      artifacts:
        - name: code
          path: /go/src/github.com/argoproj/argo-cd
          git:
            repo: "{{workflow.parameters.repo}}"
            revision: "{{workflow.parameters.revision}}"
    container:
      image: argoproj/argo-cd-ci-builder:v0.13.1
      imagePullPolicy: Always
      command: [sh, -c]
      # Main contains build argocd image. The image is saved it into k3s agent images directory so it could be preloaded by the k3s cluster.
      args: ["
          dep ensure && until docker ps; do sleep 3; done && \
          make image DEV_IMAGE=true && mkdir -p /var/lib/rancher/k3s/agent/images && \
          docker save argocd:latest > /var/lib/rancher/k3s/agent/images/argocd.tar && \
          touch /var/lib/rancher/k3s/ready && until ls /etc/rancher/k3s/k3s.yaml; do sleep 3; done && \
          kubectl create ns argocd-e2e && kustomize build ./test/manifests/ci | kubectl apply -n argocd-e2e -f - && \
          kubectl rollout status deployment -n argocd-e2e argocd-application-controller && kubectl rollout status deployment -n argocd-e2e argocd-server && \
          git config --global user.email \"test@example.com\" && \
          export ARGOCD_SERVER=$(kubectl get service argocd-server -o=jsonpath={.spec.clusterIP} -n argocd-e2e):443 && make test-e2e"
      ]
      workingDir: /go/src/github.com/argoproj/argo-cd
      env:
        - name: USER
          value: argocd
        - name: DOCKER_HOST
          value: 127.0.0.1
        - name: DOCKER_BUILDKIT
          value: "1"
        - name: KUBECONFIG
          value: /etc/rancher/k3s/k3s.yaml
      volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: k3setc
          mountPath: /etc/rancher/k3s
        - name: k3svar
          mountPath: /var/lib/rancher/k3s
    sidecars:
      - name: dind
        image: docker:18.09-dind
        securityContext:
          privileged: true
        resources:
          requests:
            memory: 2048Mi
            cpu: 500m
        mirrorVolumeMounts: true

      # Steps waits for file /var/lib/rancher/k3s/ready which indicates that all required images are ready, then starts the cluster.
      - name: k3s
        image: rancher/k3s:v0.3.0-rc1
        imagePullPolicy: Always
        command: [sh, -c]
        args: ["until ls /var/lib/rancher/k3s/ready; do sleep 3; done && k3s server || true"]
        securityContext:
          privileged: true
        volumeMounts:
          - name: tmp
            mountPath: /tmp
          - name: k3setc
            mountPath: /etc/rancher/k3s
          - name: k3svar
            mountPath: /var/lib/rancher/k3s

  - name: ci-builder
    inputs:
      parameters:
      - name: cmd
      artifacts:
      - name: code
        path: /go/src/github.com/argoproj/argo-cd
        git:
          repo: "{{workflow.parameters.repo}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: argoproj/argo-cd-ci-builder:v0.13.1
      imagePullPolicy: Always
      command: [bash, -c]
      args: ["{{inputs.parameters.cmd}}"]
      workingDir: /go/src/github.com/argoproj/argo-cd
      env:
      - name: CODECOV_TOKEN
        valueFrom:
          secretKeyRef:
            name: codecov-token
            key: codecov-token
      resources:
        requests:
          memory: 1024Mi
          cpu: 200m
    archiveLocation:
      archiveLogs: true

  - name: ci-dind
    inputs:
      parameters:
      - name: cmd
      artifacts:
      - name: code
        path: /go/src/github.com/argoproj/argo-cd
        git:
          repo: "{{workflow.parameters.repo}}"
          revision: "{{workflow.parameters.revision}}"
    container:
      image: argoproj/argo-cd-ci-builder:v0.13.1
      imagePullPolicy: Always
      command: [sh, -c]
      args: ["until docker ps; do sleep 3; done && {{inputs.parameters.cmd}}"]
      workingDir: /go/src/github.com/argoproj/argo-cd
      env:
      - name: DOCKER_HOST
        value: 127.0.0.1
      - name: DOCKER_BUILDKIT
        value: "1"
      resources:
        requests:
          memory: 1024Mi
          cpu: 200m
    sidecars:
    - name: dind
      image: docker:18.09-dind
      securityContext:
        privileged: true
      mirrorVolumeMounts: true
    archiveLocation:
      archiveLogs: true
