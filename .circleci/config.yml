version: 2
jobs:
  build:
    working_directory: /go/src/github.com/alexec/argo-cd
    docker:
      - image: circleci/golang:1.12.3
    steps:
      - restore_cache:
          key: dl
      - run:
          name: Create Dowload Dir
          command: mkdir -p /tmp/dl
      - run:
          name: Install Swagger CLI
          command: |
            [ -e /tmp/dl/swagger ] || curl -sLf -C - -o /tmp/dl/swagger https://github.com/go-swagger/go-swagger/releases/download/v0.19.0/swagger_linux_amd64
            mv /tmp/dl/swagger /go/bin/swagger
            chmod +x /go/bin/swagger
            swagger version
      - run:
          name: Install Ksonnet
          command: |
            [ ! -e /tmp/dl/ks.tar.gz ] || curl -sLf -C - -o /tmp/dl/ks.tar.gz https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz
            tar -C /tmp -xf /tmp/dl/ks.tar.gz
            mv /tmp/ks_0.13.1_linux_amd64/ks /go/bin/ks
            chmod +x /go/bin/ks
            ks version
      - run:
          name: Install Helm
          command: |
            [ -e /tmp/dl/helm.tar.gz ] || curl -sLf -C - -o /tmp/dl/helm.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-v2.13.1-linux-amd64.tar.gz
            tar -C /tmp/ -xf /tmp/dl/helm.tar.gz
            mv /tmp/linux-amd64/helm /go/bin/helm
            helm version --client
            helm init --client-only
      - run:
          name: Install Kustomize 1
          command: |
            [ ! -e /tmp/dl/kustomize1 ] || curl -sLf -C - -o /tmp/dl/kustomize1 https://github.com/kubernetes-sigs/kustomize/releases/download/v1.0.11/kustomize_1.0.11_linux_amd64
            cp /tmp/dl/kustomize1 /go/bin/
            chmod +x /go/bin/kustomize1
            kustomize1 version
      - run:
          name: Install Kustomize 2
          command: |
            [ ! -e /tmp/dl/kustomize ] || curl -sLf -C - -o /go/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v2.0.3/kustomize_2.0.3_linux_amd64
            cp /tmp/dl/kustomize /go/bin/
            chmod +x /go/bin/kustomize
            kustomize version
      - save_cache:
          key: dl
          paths:
            - /tmp/dl
      - restore_cache:
          key: go
      - run:
          name: Install Go Deps
          command: |
            go get -u github.com/gobuffalo/packr/packr
            go get -u github.com/golang/protobuf/protoc-gen-go
            go get -u github.com/gogo/protobuf/gogoproto
            go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
            go get -u github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
      - save_cache:
          key: go
          paths:
          - /go/src/github.com/gobuffalo/packr/packr
          - /go/src/github.com/golang/protobuf/protoc-gen-go
          - /go/src/github.com/gogo/protobuf/gogoproto
          - /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway
          - /go/src/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger
      - run:
          name: Install Protobuffers, JQ
          command: sudo apt-get -y install protobuf-compiler jq
      - run:
          name: Install Golang
          command: sudo apt-get -y golang-go
      - checkout
      - restore_cache:
          key: vendor
      - run:
          name: Dependencies
          command: dep ensure
      - save_cache:
          key: vendor
          paths:
            - vendor

      # Works
      #- run:
      #    name: Generate code
      #    command: make codegen
      # Works
      #- run:
      #    name: Compile production code
      #    command: make build
      # Works
      #- run:
      #    name: Lint code
      #    command: make lint
      - run:
          name: Run unit tests
          command: make test
      # This produces different output. See https://circleci.com/gh/argoproj/argo-cd/65
      #- run:
      #    name: Check nothing has changed
      #    command: git diff --exit-code
      #- run:
      #    name: Uploading code coverage
      #    command: bash <(curl -s https://codecov.io/bash) -f coverage.out
      #    when: always
      #- store_test_results:
      #    path: test-results.xml
      #- run:
      #    name: Start K3S
      #    command: k3s kubectl get node
workflows:
  version: 2
  workflow:
    jobs:
      - build