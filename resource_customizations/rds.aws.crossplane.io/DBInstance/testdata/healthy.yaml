apiVersion: rds.aws.crossplane.io/v1alpha1
kind: DBInstance
metadata:
  name: test-rds1-0
spec:
  deletionPolicy: Delete
  forProvider:
    autoMinorVersionUpgrade: true
    caCertificateIdentifier: rds-ca-rsa2048-g1
    dbClusterIdentifier: test-rds1
    dbInstanceClass: db.t4g.medium
    dbName: app
    dbSubnetGroupName: test-rds
    enablePerformanceInsights: false
    engine: aurora-postgresql
    licenseModel: postgresql-license
    masterUsername: root
    multiAZ: false
    preferredMaintenanceWindow: 'tue:00:36-tue:01:06'
    promotionTier: 1
    publiclyAccessible: false
    region: eu-north-1
    storageThroughput: 0
  managementPolicies:
    - '*'
  providerConfigRef:
    name: provider-aws
status:
  atProvider:
    certificateDetails:
      cAIdentifier: rds-ca-rsa2048-g1
      validTill: "2025-07-15T14:27:27Z"
    customerOwnedIPEnabled: false
    dbInstanceARN: arn:aws:rds:abc123:db:test-rds1-0
    dbInstanceIdentifier: test-rds1-0
    dbInstancePort: 0
    dbInstanceStatus: available
    dbParameterGroups:
    - dbParameterGroupName: default.aurora-postgresql16
      parameterApplyStatus: in-sync
    dbiResourceID: db-abc123
    endpoint:
      address: test-rds1-0.abc123.rds.amazonaws.com
      hostedZoneID: abc123
      port: 5432
    engineVersion: "16.2"
    iamDatabaseAuthenticationEnabled: false
    instanceCreateTime: "2024-07-15T14:29:00Z"
    optionGroupMemberships:
    - optionGroupName: default:aurora-postgresql-16
      status: in-sync
    pendingModifiedValues: {}
    performanceInsightsEnabled: false
    vpcSecurityGroups:
    - status: active
      vpcSecurityGroupID: sg-abc123
  conditions:
  - lastTransitionTime: "2024-07-15T14:48:40Z"
    reason: Available
    status: "True"
    type: Ready
  - lastTransitionTime: "2024-07-15T14:25:07Z"
    reason: ReconcileSuccess
    status: "True"
    type: Synced
